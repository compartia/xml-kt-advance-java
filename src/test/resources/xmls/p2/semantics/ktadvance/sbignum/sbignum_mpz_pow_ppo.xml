<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-05-02 13:15:25">
   <application file="sbignum.c"/>
  </header>
  <function fname="mpz_pow">
   <ppos>
    <ppo deps="f" id="239" invs="42" ippo="239" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter r satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="182" ippo="182" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="18" invs="69" ippo="18" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter b satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="129" ippo="129" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="50" ippo="50" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="f" id="80" invs="68" ippo="80" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter r satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="108" ippo="108" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="166" invs="98" ippo="166" s="g" ts="2018-05-02 13:04:38">
     <e txt="non-negative pointer increment: lower bound for j is 1"/>
    </ppo>
    <ppo deps="s" id="104" ippo="104" s="g">
     <e txt="add zero"/>
    </ppo>
    <ppo id="130" ippo="130"/>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="e is a function parameter"/>
    </ppo>
    <ppo deps="s" id="49" ippo="49" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="52" ippo="52" s="g">
     <e txt="r is a function parameter"/>
    </ppo>
    <ppo deps="s" id="188" ippo="188" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="4" invs="157" ippo="4" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(e_4_)#init"/>
    </ppo>
    <ppo id="200" ippo="200"/>
    <ppo deps="s" id="219" ippo="219" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="30" ippo="30" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="62" ippo="62"/>
    <ppo deps="s" id="103" ippo="103" s="g">
     <e txt="add non-negative number:  value is 0"/>
    </ppo>
    <ppo deps="s" id="185" ippo="185" s="g">
     <e txt=" value is 1"/>
    </ppo>
    <ppo deps="s" id="189" ippo="189" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="102" ippo="102"/>
    <ppo deps="s" id="106" ippo="106" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="206" ippo="206" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="14" ippo="14" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="111" ippo="111" s="g">
     <e txt="constant value 1 fits in type unsigned int"/>
    </ppo>
    <ppo id="145" ippo="145"/>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="82" ippo="82" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="133" ippo="133" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo id="89" ippo="89"/>
    <ppo deps="s" id="221" ippo="221" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="180" ippo="180">
     <d>
      <invs>
       <arg a="4" i="98,119,143"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="56" ippo="56" s="g">
     <e txt="constant value 1 fits in type unsigned int"/>
    </ppo>
    <ppo deps="f" id="79" invs="158" ippo="79" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(r_2_)#init"/>
    </ppo>
    <ppo deps="s" id="217" ippo="217" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="164" ippo="164"/>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="121" ippo="121" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="12" ippo="12" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="141" ippo="141" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="216" ippo="216" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="101" ippo="101"/>
    <ppo deps="s" id="168" ippo="168" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="209" ippo="209"/>
    <ppo deps="s" id="69" ippo="69" s="g">
     <e txt="add zero"/>
    </ppo>
    <ppo deps="f" id="152" invs="104" ippo="152" s="g" ts="2018-05-02 13:04:38">
     <e txt="non-negative pointer increment: lower bound for j is 1"/>
    </ppo>
    <ppo deps="s" id="205" ippo="205" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="160" ippo="160"/>
    <ppo id="201" ippo="201"/>
    <ppo deps="s" id="204" ippo="204" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="235" invs="131" ippo="235" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1078(rv:mpz_mul)"/>
    </ppo>
    <ppo deps="s" id="246" ippo="246" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="203" ippo="203" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="96" ippo="96" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="195" ippo="195" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="45" ippo="45" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="54" invs="75" ippo="54" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter r satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="78" ippo="78" s="g">
     <e txt="r is a function parameter"/>
    </ppo>
    <ppo deps="f" id="124" invs="103" ippo="124" s="g" ts="2018-05-02 13:04:38">
     <e txt="non-negative pointer increment: lower bound for ((j - 1):u_int32_t is 0"/>
    </ppo>
    <ppo deps="s" id="118" ippo="118" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo id="140" ippo="140">
     <d>
      <invs>
       <arg a="4" i="103,122"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="1" ids="1" invs="22" ippo="1" s="g" ts="2018-05-02 13:04:38">
     <e txt="condition initialized(e-&gt;s) delegated to api"/>
    </ppo>
    <ppo deps="f" id="81" invs="68" ippo="81" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter r satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="236" ippo="236" s="g">
     <e txt="r is a function parameter"/>
    </ppo>
    <ppo deps="s" id="23" ippo="23" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="77" invs="68" ippo="77" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter r satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="242" invs="141" ippo="242" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1049_xx_assignedAt#1067"/>
    </ppo>
    <ppo deps="s" id="70" ippo="70" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="159" ippo="159" s="g">
     <e txt="value 31 is less than minimum word size (32)"/>
    </ppo>
    <ppo deps="a" id="3" ids="2" invs="46" ippo="3" s="g" ts="2018-05-02 13:04:38">
     <e txt="condition not-null(e) delegated to api"/>
    </ppo>
    <ppo deps="f" id="134" invs="148" ippo="134" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1075"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="b is a function parameter"/>
    </ppo>
    <ppo deps="s" id="24" ippo="24" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="21" invs="140" ippo="21" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1058(rv:mpz_set)"/>
    </ppo>
    <ppo deps="s" id="94" ippo="94" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="109" ippo="109" s="g">
     <e txt=" value is 1"/>
    </ppo>
    <ppo id="190" ippo="190"/>
    <ppo id="167" ippo="167">
     <d>
      <invs>
       <arg a="4" i="98,119,143"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="f" id="76" invs="68" ippo="76" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter r satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="131" ippo="131"/>
    <ppo deps="s" id="197" ippo="197" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="231" invs="32" ippo="231" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter r satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="245" ippo="245" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="57" ippo="57" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="68" ippo="68" s="g">
     <e txt="add non-negative number:  value is 0"/>
    </ppo>
    <ppo deps="s" id="156" ippo="156" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="213" ippo="213" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="122" ippo="122"/>
    <ppo deps="s" id="181" ippo="181" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="a" id="237" ids="3" invs="42" ippo="237" s="g" ts="2018-05-02 13:04:38">
     <e txt="condition not-null(r) delegated to api"/>
    </ppo>
    <ppo deps="f" id="85" invs="138" ippo="85" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1073(rv:mpz_mul)"/>
    </ppo>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="f" id="26" invs="161" ippo="26" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(e_4_)#init"/>
    </ppo>
    <ppo id="98" ippo="98"/>
    <ppo deps="s" id="105" ippo="105" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="214" ippo="214" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="202" ippo="202"/>
    <ppo deps="s" id="9" ippo="9" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="225" invs="155" ippo="225" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(r_2_)#init"/>
    </ppo>
    <ppo deps="s" id="247" ippo="247" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="135" ippo="135" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="13" ippo="13" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="63" ippo="63"/>
    <ppo deps="s" id="220" ippo="220" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="f" id="176" invs="143" ippo="176" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1075"/>
    </ppo>
    <ppo deps="s" id="186" ippo="186" s="g">
     <e txt="value 1 is less than minimum word size (32)"/>
    </ppo>
    <ppo deps="s" id="51" ippo="51" s="g">
     <e txt="constant value 0 fits in type unsigned int"/>
    </ppo>
    <ppo deps="s" id="107" ippo="107" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="146" ippo="146"/>
    <ppo deps="s" id="192" ippo="192" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="211" ippo="211" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo id="125" ippo="125">
     <d>
      <invs>
       <arg a="4" i="103,122"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="249" invs="147" ippo="249" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1073(rv:mpz_mul)_xx_assignedAt#1076(rv:mpz_mul)_xx_assignedAt#1078(rv:mpz_mul)_xx_assignedAt#1080"/>
    </ppo>
    <ppo deps="s" id="143" ippo="143" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="19" invs="69" ippo="19" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter b satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="227" invs="32" ippo="227" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter r satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="17" invs="159" ippo="17" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(b_6_)#init"/>
    </ppo>
    <ppo id="90" ippo="90"/>
    <ppo id="172" ippo="172"/>
    <ppo deps="s" id="228" ippo="228" s="g">
     <e txt="r is a function parameter"/>
    </ppo>
    <ppo deps="f" id="226" invs="32" ippo="226" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter r satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="40" ippo="40" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo id="199" ippo="199"/>
    <ppo deps="s" id="210" ippo="210" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo id="67" ippo="67"/>
    <ppo deps="f" id="55" invs="75" ippo="55" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter r satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="117" ippo="117" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="132" ippo="132" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="110" ippo="110" s="g">
     <e txt="value 1 is less than minimum word size (32)"/>
    </ppo>
    <ppo deps="s" id="193" ippo="193" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="s" id="208" ippo="208" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="s" id="60" ippo="60" s="g">
     <e txt="constant value 1 fits in type unsigned int"/>
    </ppo>
    <ppo id="150" ippo="150"/>
    <ppo deps="s" id="59" ippo="59" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="165" ippo="165"/>
    <ppo deps="f" id="187" invs="146" ippo="187" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1075"/>
    </ppo>
    <ppo deps="s" id="244" ippo="244" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="161" ippo="161" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="196" ippo="196" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="f" id="223" invs="145" ippo="223" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1076(rv:mpz_mul)"/>
    </ppo>
    <ppo deps="f" id="6" invs="46" ippo="6" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter e satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="155" ippo="155" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="142" ippo="142" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="144" ippo="144" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="116" ippo="116"/>
    <ppo id="137" ippo="137"/>
    <ppo deps="f" id="27" invs="80" ippo="27" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter e satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="154" ippo="154" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="243" ippo="243" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="151" ippo="151"/>
    <ppo deps="s" id="157" ippo="157" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="194" ippo="194"/>
    <ppo id="38" ippo="38"/>
    <ppo deps="f" id="61" invs="150" ippo="61" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1071(rv:mpz_cmpabs_ui)"/>
    </ppo>
    <ppo deps="s" id="158" ippo="158" s="g">
     <e txt=" value is 31"/>
    </ppo>
    <ppo deps="s" id="212" ippo="212" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="87" ippo="87" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo id="113" ippo="113"/>
    <ppo id="138" ippo="138"/>
    <ppo deps="s" id="58" ippo="58" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="84" ippo="84" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="170" ippo="170" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="183" ippo="183" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="171" ippo="171" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="34" ippo="34"/>
    <ppo deps="s" id="74" ippo="74" s="g">
     <e txt="r is a function parameter"/>
    </ppo>
    <ppo deps="f" id="112" invs="151" ippo="112" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1075"/>
    </ppo>
    <ppo id="178" ippo="178"/>
    <ppo deps="f" id="75" invs="158" ippo="75" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(r_2_)#init"/>
    </ppo>
    <ppo id="123" ippo="123"/>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="241" invs="97" ippo="241" s="g" ts="2018-05-02 13:04:38">
     <e txt="lower bound 0 is greater than or equal to safe lower bound and upper bound 1 is less than safe upper bound"/>
    </ppo>
    <ppo deps="s" id="169" ippo="169" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="127" ippo="127" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="139" invs="103" ippo="139" s="g" ts="2018-05-02 13:04:38">
     <e txt="non-negative pointer increment: lower bound for ((j - 1):u_int32_t is 0"/>
    </ppo>
    <ppo deps="s" id="147" ippo="147" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="22" ippo="22" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="234" ippo="234" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="173" ippo="173"/>
    <ppo deps="s" id="215" ippo="215" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="222" ippo="222" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="28" invs="80" ippo="28" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter e satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="53" invs="160" ippo="53" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(r_2_)#init"/>
    </ppo>
    <ppo deps="s" id="148" ippo="148" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="f" id="240" invs="42" ippo="240" s="g" ts="2018-05-02 13:04:38">
     <e txt="upper-bound value is initial value of parameter r satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="65" ippo="65" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo id="191" ippo="191"/>
    <ppo deps="s" id="218" ippo="218" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="47" ippo="47" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="44" ippo="44" s="g">
     <e txt="add zero"/>
    </ppo>
    <ppo deps="f" id="5" invs="46" ippo="5" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter e satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="91" ippo="91" s="g">
     <e txt="add non-negative number:  value is 0"/>
    </ppo>
    <ppo deps="s" id="120" ippo="120" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="184" ippo="184" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="97" ippo="97"/>
    <ppo deps="s" id="162" ippo="162" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="f" id="163" invs="143" ippo="163" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1075"/>
    </ppo>
    <ppo deps="f" id="230" invs="32" ippo="230" s="g" ts="2018-05-02 13:04:38">
     <e txt="initial value of parameter r satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="72" ippo="72" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="114" ippo="114" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="f" id="33" invs="135" ippo="33" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1060(rv:mpz_set)"/>
    </ppo>
    <ppo id="37" ippo="37"/>
    <ppo deps="s" id="64" ippo="64" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="93" ippo="93" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="119" invs="148" ippo="119" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1075"/>
    </ppo>
    <ppo deps="s" id="175" ippo="175" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="s" id="248" ippo="248" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="41" ippo="41"/>
    <ppo deps="s" id="233" ippo="233" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="95" ippo="95" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="149" invs="148" ippo="149" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1075"/>
    </ppo>
    <ppo deps="s" id="198" ippo="198" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="232" ippo="232" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="92" ippo="92" s="g">
     <e txt="add zero"/>
    </ppo>
    <ppo deps="s" id="115" ippo="115" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="s" id="10" ippo="10" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="42" ippo="42"/>
    <ppo deps="s" id="224" ippo="224" s="g">
     <e txt="r is a function parameter"/>
    </ppo>
    <ppo deps="s" id="136" ippo="136" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="229" invs="155" ippo="229" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(r_2_)#init"/>
    </ppo>
    <ppo deps="s" id="46" ippo="46" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="153" ippo="153">
     <d>
      <invs>
       <arg a="4" i="104,123,148"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="177" ippo="177"/>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo id="66" ippo="66"/>
    <ppo deps="s" id="83" ippo="83" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="207" ippo="207" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="index value 0 is less than bound 1"/>
    </ppo>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="s" id="174" ippo="174" s="g">
     <e txt="index value 0 is non-negative"/>
    </ppo>
    <ppo deps="f" id="238" invs="156" ippo="238" s="g" ts="2018-05-02 13:04:38">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(r_2_)#init"/>
    </ppo>
    <ppo deps="f" id="29" invs="142" ippo="29" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1060(rv:mpz_set)"/>
    </ppo>
    <ppo deps="s" id="126" ippo="126" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="179" invs="98" ippo="179" s="g" ts="2018-05-02 13:04:38">
     <e txt="non-negative pointer increment: lower bound for j is 1"/>
    </ppo>
    <ppo deps="s" id="43" ippo="43" s="g">
     <e txt="add non-negative number:  value is 0"/>
    </ppo>
    <ppo id="86" ippo="86"/>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="e is a function parameter"/>
    </ppo>
    <ppo deps="f" id="20" invs="149" ippo="20" s="g" ts="2018-05-02 13:04:38">
     <e txt="assignedAt#1058(rv:mpz_set)"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
