<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-05-02 13:13:30">
   <application file="adbuf.c"/>
  </header>
  <function fname="adbuf_printf">
   <ppos>
    <ppo deps="f" id="18" invs="27" ippo="18" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_buf_28"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable buf is not null"/>
    </ppo>
    <ppo deps="f" id="129" invs="129" ippo="129" s="g" ts="2018-05-02 13:02:47">
     <e txt="lower bound 0 is greater than or equal to safe lower bound and upper bound 1023 is less than safe upper bound"/>
    </ppo>
    <ppo deps="f" id="50" invs="221" ippo="50" s="g" ts="2018-05-02 13:02:47">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="f" id="80" invs="59" ippo="80" s="g" ts="2018-05-02 13:02:47">
     <e txt="upper-bound value is initial value of parameter dst satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="108" ippo="108" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="104" ippo="104" s="g">
     <e txt="dst is a function parameter"/>
    </ppo>
    <ppo deps="f" id="130" invs="148" ippo="130" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="49" invs="175" ippo="49" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo deps="f" id="52" invs="78" ippo="52" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="30" ippo="30" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="62" ippo="62"/>
    <ppo deps="f" id="103" invs="46" ippo="103" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="102" invs="46" ippo="102" s="g" ts="2018-05-02 13:02:47">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="106" invs="75" ippo="106" s="g" ts="2018-05-02 13:02:47">
     <e txt="initial value of parameter dst satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="14" ippo="14" s="g">
     <e txt="index value 1023 is less than bound 1024"/>
    </ppo>
    <ppo deps="f" id="111" invs="73" ippo="111" s="g" ts="2018-05-02 13:02:47">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="82" invs="163" ippo="82" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo deps="s" id="89" ippo="89" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="56" ippo="56">
     <d>
      <invs>
       <arg a="3" i="77"/>
       <arg a="2" i="80,139,176"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="79" invs="59" ippo="79" s="g" ts="2018-05-02 13:02:47">
     <e txt="initial value of parameter dst satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="121" ippo="121" s="g">
     <e txt="dst is a function parameter"/>
    </ppo>
    <ppo id="12" ippo="12"/>
    <ppo id="101" ippo="101">
     <d>
      <invs>
       <arg a="1" i="46,111,162,204"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:12"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="69" ippo="69" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="fmt is a function parameter"/>
    </ppo>
    <ppo id="96" ippo="96">
     <d>
      <invs>
       <arg a="1" i="46,111,162,204"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="45" ippo="45" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="54" invs="176" ippo="54" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo id="78" ippo="78">
     <d>
      <invs>
       <arg a="1" i="59,114,207,260,273,296"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="124" invs="25" ippo="124" s="g" ts="2018-05-02 13:02:47">
     <e txt="upper-bound value is initial value of parameter dst satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="118" invs="44" ippo="118" s="g" ts="2018-05-02 13:02:47">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1" ippo="1"/>
    <ppo deps="s" id="81" ippo="81" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="23" ippo="23" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="77" ippo="77" s="g">
     <e txt="dst is a function parameter"/>
    </ppo>
    <ppo deps="s" id="70" ippo="70" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="16" ippo="16"/>
    <ppo deps="s" id="24" ippo="24" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="21" ippo="21">
     <d>
      <invs>
       <arg a="1" i="27"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:offset: [1023]"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="94" invs="154" ippo="94" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#312(rv:adbuf_add)"/>
    </ppo>
    <ppo deps="f" id="109" invs="172" ippo="109" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo deps="f" id="36" invs="158" ippo="36" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="f" id="76" invs="168" ippo="76" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="f" id="131" invs="179" ippo="131" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#322(rv:adbuf_add)"/>
    </ppo>
    <ppo deps="s" id="57" ippo="57" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="68" ippo="68">
     <d>
      <invs>
       <arg a="4" i="67,136,170"/>
       <arg a="3" i="66,117,169,211"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="122" ippo="122">
     <d>
      <invs>
       <arg a="1" i="25,104,188,256,272,286"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="85" invs="55" ippo="85" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="100" invs="161" ippo="100" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo deps="s" id="26" ippo="26" s="g">
     <e txt="dst is a function parameter"/>
    </ppo>
    <ppo id="98" ippo="98">
     <d>
      <invs>
       <arg a="1" i="46,111,162,204"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="105" ippo="105">
     <d>
      <invs>
       <arg a="1" i="265,275,301,75,120,216"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="11" invs="52" ippo="11" s="g" ts="2018-05-02 13:02:47">
     <e txt="upper-bound value is initial value of parameter fmt satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="9" invs="206" ippo="9" s="g" ts="2018-05-02 13:02:47">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(fmt_2_)#init"/>
    </ppo>
    <ppo deps="s" id="13" ippo="13" s="g">
     <e txt="index value 1023 is non-negative"/>
    </ppo>
    <ppo deps="f" id="63" invs="169" ippo="63" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo deps="f" id="51" invs="78" ippo="51" s="g" ts="2018-05-02 13:02:47">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="107" invs="75" ippo="107" s="g" ts="2018-05-02 13:02:47">
     <e txt="upper-bound value is initial value of parameter dst satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="125" ippo="125" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="f" id="19" invs="27,21" ippo="19" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_buf_28"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null value was set in array buf at offset 1023"/>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="17" invs="181" ippo="17" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="f" id="90" invs="155" ippo="90" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo id="40" ippo="40">
     <d>
      <invs>
       <arg a="3" i="40"/>
       <arg a="2" i="41,132,157"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="67" invs="136" ippo="67" s="g" ts="2018-05-02 13:02:47">
     <e txt="non-negative pointer increment: lower bound for retval is 1024"/>
    </ppo>
    <ppo deps="s" id="55" ippo="55" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo id="117" ippo="117">
     <d>
      <invs>
       <arg a="1" i="44,109,160,202"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:adbuf_add @-1 r:12,freed(by:vsnprintf @-1 r:12"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="110" ippo="110">
     <d>
      <invs>
       <arg a="1" i="266,276,279,302,73,122,174,218"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:12"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="60" invs="81" ippo="60" s="g" ts="2018-05-02 13:02:47">
     <e txt="initial value of parameter fmt satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="59" ippo="59">
     <d>
      <invs>
       <arg a="1" i="81,126,222"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="constant value 1024 fits in type unsigned long"/>
    </ppo>
    <ppo deps="f" id="116" invs="159" ippo="116" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo id="27" ippo="27">
     <d>
      <invs>
       <arg a="1" i="271,277,305,90,127,225"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="38" invs="157" ippo="38" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="f" id="61" invs="81" ippo="61" s="g" ts="2018-05-02 13:02:47">
     <e txt="upper-bound value is initial value of parameter fmt satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="87" invs="164" ippo="87" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="f" id="113" invs="173" ippo="113" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#317(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="58" ippo="58" s="g">
     <e txt="fmt is a function parameter"/>
    </ppo>
    <ppo deps="f" id="84" invs="55" ippo="84" s="g" ts="2018-05-02 13:02:47">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="34" invs="180" ippo="34" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#294(rv:strlen)"/>
    </ppo>
    <ppo id="74" ippo="74"/>
    <ppo deps="f" id="112" invs="73" ippo="112" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="75" invs="167" ippo="75" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#304(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="f" id="123" invs="25" ippo="123" s="g" ts="2018-05-02 13:02:47">
     <e txt="initial value of parameter dst satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="127" ippo="127" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="22" ippo="22" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="28" invs="90" ippo="28" s="g" ts="2018-05-02 13:02:47">
     <e txt="initial value of parameter dst satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="53" invs="138" ippo="53" s="g" ts="2018-05-02 13:02:47">
     <e txt="value 1025 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="65" invs="117" ippo="65" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo id="47" ippo="47"/>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="44" invs="171" ippo="44" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="91" ippo="91">
     <d>
      <invs>
       <arg a="1" i="38,107,156,198"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:adbuf_add @-1 r:12,freed(by:vsnprintf @-1 r:12"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="120" invs="166" ippo="120" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#317(rv:adbuf_add)"/>
    </ppo>
    <ppo deps="s" id="97" ippo="97" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="72" ippo="72" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="114" invs="202" ippo="114" s="g" ts="2018-05-02 13:02:47">
     <e txt="all regions pointed at are heap-allocated: [heap-allocated-region created by malloc at line 301]"/>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="37" invs="131" ippo="37" s="g" ts="2018-05-02 13:02:47">
     <e txt="value 1025 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="64" invs="170" ippo="64" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#285(rv:vsnprintf)"/>
    </ppo>
    <ppo deps="f" id="93" invs="38" ippo="93" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="119" invs="44" ippo="119" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="95" invs="111" ippo="95" s="g" ts="2018-05-02 13:02:47">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="92" invs="38" ippo="92" s="g" ts="2018-05-02 13:02:47">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="115" ippo="115" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="f" id="10" invs="52" ippo="10" s="g" ts="2018-05-02 13:02:47">
     <e txt="initial value of parameter fmt satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="42" invs="149" ippo="42" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#301(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="46" ippo="46" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo id="66" ippo="66">
     <d>
      <invs>
       <arg a="1" i="66,117,169,211"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:12"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="83" ippo="83">
     <d>
      <invs>
       <arg a="1" i="55,116,165,209,261,274,278,297"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:vsnprintf @-1 r:12"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="88" invs="198" ippo="88" s="g" ts="2018-05-02 13:02:47">
     <e txt="all regions pointed at are heap-allocated: [heap-allocated-region created by malloc at line 301]"/>
    </ppo>
    <ppo deps="f" id="35" invs="152" ippo="35" s="g" ts="2018-05-02 13:02:47">
     <e txt="assignedAt#294(rv:adbuf_add)"/>
    </ppo>
    <ppo deps="f" id="29" invs="90" ippo="29" s="g" ts="2018-05-02 13:02:47">
     <e txt="upper-bound value is initial value of parameter dst satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="126" ippo="126" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="43" ippo="43" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="86" invs="134" ippo="86" s="g" ts="2018-05-02 13:02:47">
     <e txt="value 1024 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="20" invs="21" ippo="20" s="g" ts="2018-05-02 13:02:47">
     <e txt="null-terminator in array buf is present at position 1023 which is less than the size of buf: 1024"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
