<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:28:49">
   <application file="base/utils.c"/>
  </header>
  <function fname="get_url_encoded_string">
   <ppos>
    <ppo deps="s" id="239" ippo="239" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="386" ippo="386" s="g">
     <e txt="add non-negative number:  value is 3"/>
    </ppo>
    <ppo deps="s" id="182" ippo="182" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="318" invs="376" ippo="318" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="18" ippo="18" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="50" ippo="50" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="80" ippo="80">
     <d>
      <invs>
       <arg a="4" i="129,243,298"/>
       <arg a="3" i="61,196,296,366"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="301" ippo="301" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="f" id="104" invs="364" ippo="104" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo id="302" ippo="302">
     <d>
      <invs>
       <arg a="3" i="55"/>
       <arg a="2" i="122,240,293"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="354" ippo="354" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="188" ippo="188" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="219" invs="281" ippo="219" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="f" id="258" invs="100" ippo="258" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="a" id="103" ids="1" invs="60" ippo="103" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="189" ippo="189" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="102" invs="295" ippo="102" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="f" id="272" invs="360" ippo="272" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="145" ippo="145" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="f" id="378" invs="381" ippo="378" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="221" invs="348" ippo="221" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="180" ippo="180" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="275" ippo="275" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="400" ippo="400" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="121" ippo="121" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="141" ippo="141" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="216" ippo="216" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="168" ippo="168" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="152" invs="374" ippo="152" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="205" ippo="205" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="385" invs="310" ippo="385" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="160" ippo="160"/>
    <ppo deps="s" id="204" ippo="204" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="a" id="235" ids="1" invs="25" ippo="235" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="f" id="246" invs="337" ippo="246" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="335" ippo="335" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="195" ippo="195" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="54" invs="267" ippo="54" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="305" ippo="305" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="124" invs="274" ippo="124" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo id="370" ippo="370">
     <d>
      <invs>
       <arg a="1" i="73"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="140" ippo="140" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="403" invs="321" ippo="403" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="77" invs="196" ippo="77" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="242" ippo="242" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="332" invs="370" ippo="332" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="343" ippo="343" s="g">
     <e txt="upperbound of constant string argument: %%%02X"/>
    </ppo>
    <ppo deps="s" id="159" ippo="159" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="16" ippo="16">
     <d>
      <invs>
       <arg a="1" i="21,167,336"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="21" invs="21" ippo="21" s="g" ts="2018-01-09 15:49:28">
     <e txt="upper-bound value is initial value of parameter input satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="null pointer is a non-local address"/>
    </ppo>
    <ppo deps="s" id="131" ippo="131" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="231" ippo="231" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="68" invs="343" ippo="68" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="213" ippo="213" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="323" ippo="323" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="122" ippo="122" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="181" ippo="181"/>
    <ppo deps="f" id="237" invs="102" ippo="237" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="f" id="306" invs="312" ippo="306" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="382" ippo="382" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="85" ippo="85"/>
    <ppo id="100" ippo="100"/>
    <ppo deps="f" id="402" invs="266" ippo="402" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="s" id="26" ippo="26" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="105" invs="126" ippo="105" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="296" ippo="296" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="225" ippo="225" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="247" invs="99" ippo="247" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="f" id="377" invs="308" ippo="377" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="f" id="135" invs="273" ippo="135" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="279" invs="286" ippo="279" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="a" id="307" ids="1" invs="78" ippo="307" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo id="176" ippo="176">
     <d>
      <invs>
       <arg a="4" i="82,214,263"/>
       <arg a="3" i="2,151,261,317"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="186" invs="83" ippo="186" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="357" ippo="357" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="297" ippo="297" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="192" invs="304" ippo="192" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="f" id="211" invs="107" ippo="211" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo id="259" ippo="259">
     <d>
      <invs>
       <arg a="4" i="100,226,276"/>
       <arg a="3" i="24,169,338"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="a" id="271" ids="1" invs="49" ippo="271" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="f" id="125" invs="162" ippo="125" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo id="320" ippo="320">
     <d>
      <invs>
       <arg a="4" i="140,250,306"/>
       <arg a="3" i="70,206,305,376"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="143" ippo="143" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="326" invs="289" ippo="326" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="f" id="392" invs="285" ippo="392" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="f" id="19" invs="336" ippo="19" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="227" ippo="227" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="17" ippo="17" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="172" invs="263" ippo="172" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="f" id="228" invs="313" ippo="228" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="f" id="391" invs="284" ippo="391" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="s" id="349" ippo="349" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="226" ippo="226" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="313" ippo="313" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="199" ids="1" invs="56" ippo="199" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="f" id="264" invs="302" ippo="264" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="s" id="269" ippo="269" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo id="295" ippo="295">
     <d>
      <invs>
       <arg a="4" i="116,234,287"/>
       <arg a="3" i="41,185,356"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="117" invs="134" ippo="117" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="f" id="208" invs="282" ippo="208" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo id="328" ippo="328">
     <d>
      <invs>
       <arg a="3" i="48"/>
       <arg a="2" i="117,235,289"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="60" ippo="60" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="150" invs="303" ippo="150" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="353" ippo="353" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="187" ippo="187">
     <d>
      <invs>
       <arg a="4" i="83,215,262"/>
       <arg a="3" i="6,152,318"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="244" invs="277" ippo="244" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="s" id="161" ippo="161" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="381" ippo="381" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="405" invs="9" ippo="405" s="g" ts="2018-01-09 15:49:28">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="404" ippo="404"/>
    <ppo deps="s" id="142" ippo="142" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="144" invs="311" ippo="144" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="f" id="137" invs="332" ippo="137" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="262" ippo="262" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="389" ippo="389" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="243" invs="275" ippo="243" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="s" id="157" ippo="157" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="194" ippo="194">
     <d>
      <invs>
       <arg a="3" i="68"/>
       <arg a="2" i="138,249,304"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="289" ippo="289"/>
    <ppo id="334" ippo="334">
     <d>
      <invs>
       <arg a="4" i="132,245,300"/>
       <arg a="3" i="63,200,299,370"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="212" ippo="212">
     <d>
      <invs>
       <arg a="4" i="107,229,282"/>
       <arg a="3" i="30,176,280,347"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="319" invs="140" ippo="319" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="f" id="395" invs="112" ippo="395" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="f" id="87" invs="297" ippo="87" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="84" ippo="84" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="183" invs="262" ippo="183" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="f" id="171" invs="261" ippo="171" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="274" ippo="274">
     <d>
      <invs>
       <arg a="4" i="119,236,290"/>
       <arg a="3" i="49,189,360"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="364" ippo="364" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="241" ippo="241" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="251" ippo="251" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="330" invs="300" ippo="330" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="s" id="169" ippo="169" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="281" invs="184" ippo="281" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="127" invs="95" ippo="127" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="a" id="359" ids="1" invs="37" ippo="359" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="f" id="317" invs="206" ippo="317" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="22" invs="291" ippo="22" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="215" ippo="215" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="222" invs="108" ippo="222" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="286" ippo="286" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="298" ippo="298" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="355" ippo="355"/>
    <ppo deps="f" id="28" invs="271" ippo="28" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225(rv:malloc)"/>
    </ppo>
    <ppo id="148" ippo="148"/>
    <ppo deps="s" id="65" ippo="65" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="280" invs="288" ippo="280" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="s" id="325" ippo="325" s="g">
     <e txt="casting constant value 43 to char"/>
    </ppo>
    <ppo deps="f" id="379" invs="74" ippo="379" s="g" ts="2018-01-09 15:49:28">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="44" invs="378" ippo="44" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="120" ippo="120" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="a" id="184" ids="1" invs="6" ippo="184" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="365" ippo="365" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="162" invs="268" ippo="162" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="72" ippo="72" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="261" ippo="261" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo id="64" ippo="64"/>
    <ppo deps="f" id="394" invs="353" ippo="394" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="a" id="292" ids="1" invs="41" ippo="292" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="93" ippo="93" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="119" ippo="119" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="175" invs="82" ippo="175" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="s" id="338" ippo="338" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="276" ippo="276" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="233" ippo="233" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="92" ippo="92" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="309" invs="146" ippo="309" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="10" ippo="10" s="g">
     <e txt="null pointer is a non-local address"/>
    </ppo>
    <ppo deps="s" id="224" ippo="224" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="361" invs="110" ippo="361" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="a" id="136" ids="1" invs="20" ippo="136" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="254" ippo="254" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="153" invs="137" ippo="153" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="207" invs="280" ippo="207" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo id="387" ippo="387">
     <d>
      <invs>
       <arg a="3" i="76"/>
       <arg a="2" i="143,252,310"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="a" id="88" ids="1" invs="62" ippo="88" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="398" ippo="398" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="174" invs="317" ippo="174" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="f" id="367" invs="73" ippo="367" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_expansion_149"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable temp_expansion is not null"/>
    </ppo>
    <ppo deps="f" id="126" invs="331" ippo="126" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="179" ippo="179" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="329" invs="299" ippo="329" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="s" id="350" ippo="350" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="20" invs="21" ippo="20" s="g" ts="2018-01-09 15:49:28">
     <e txt="initial value of parameter input satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="315" invs="305" ippo="315" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="f" id="294" invs="116" ippo="294" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="352" ippo="352" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="129" ippo="129" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="397" ippo="397" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="108" ippo="108" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="166" ippo="166">
     <d>
      <invs>
       <arg a="4" i="92,222,268"/>
       <arg a="3" i="13,158,325"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="358" invs="283" ippo="358" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="376" ippo="376" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="130" ippo="130" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="310" ippo="310">
     <d>
      <invs>
       <arg a="4" i="146,254,312"/>
       <arg a="3" i="78,212,382"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="371" invs="211" ippo="371" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="49" ippo="49" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="52" ippo="52"/>
    <ppo id="369" ippo="369">
     <d>
      <invs>
       <arg a="3" i="73"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="200" invs="362" ippo="200" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="f" id="333" invs="132" ippo="333" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="s" id="250" ippo="250" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="30" invs="269" ippo="30" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="s" id="62" ippo="62" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="185" invs="318" ippo="185" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo id="284" ippo="284">
     <d>
      <invs>
       <arg a="4" i="115,233,288"/>
       <arg a="3" i="40,184,286,355"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="106" ippo="106">
     <d>
      <invs>
       <arg a="4" i="126,242,295"/>
       <arg a="3" i="60,194,364"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="206" ippo="206" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="14" ippo="14">
     <d>
      <invs>
       <arg a="1" i="21,167,336"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="111" ippo="111" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo id="266" ippo="266">
     <d>
      <invs>
       <arg a="3" i="66"/>
       <arg a="2" i="135,247,302"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="277" ippo="277" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="82" ippo="82" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="133" ippo="133"/>
    <ppo deps="f" id="89" invs="367" ippo="89" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="f" id="291" invs="287" ippo="291" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="f" id="56" invs="322" ippo="56" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="f" id="79" invs="129" ippo="79" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo id="217" ippo="217"/>
    <ppo deps="f" id="270" invs="290" ippo="270" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="f" id="164" invs="325" ippo="164" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="341" ippo="341" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="12" ippo="12" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="209" invs="176" ippo="209" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="69" invs="104" ippo="69" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="f" id="201" invs="124" ippo="201" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="366" ippo="366" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="346" ippo="346">
     <d>
      <invs>
       <arg a="3" i="34"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="203" ippo="203" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="96" invs="292" ippo="96" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="s" id="288" ippo="288" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="396" ippo="396">
     <d>
      <invs>
       <arg a="4" i="112,232,285"/>
       <arg a="3" i="38,182,284,353"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="45" invs="142" ippo="45" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="f" id="78" invs="366" ippo="78" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo id="118" ippo="118">
     <d>
      <invs>
       <arg a="4" i="134,246,301"/>
       <arg a="3" i="65,202,372"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="303" ippo="303" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="81" ippo="81" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="128" ippo="128">
     <d>
      <invs>
       <arg a="4" i="95,223,274"/>
       <arg a="3" i="19,162,272,331"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="236" invs="341" ippo="236" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo id="356" ippo="356"/>
    <ppo deps="s" id="23" ippo="23" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="285" ippo="285" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="273" invs="119" ippo="273" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo id="70" ippo="70">
     <d>
      <invs>
       <arg a="4" i="104,228,279"/>
       <arg a="3" i="26,174,343"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="134" ippo="134" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="337" ippo="337" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="399" ippo="399" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="24" ippo="24" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="351" ippo="351" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="94" ippo="94" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="109" ippo="109" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="190" ippo="190" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="167" ippo="167" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="393" invs="182" ippo="393" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="76" invs="298" ippo="76" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo deps="s" id="197" ippo="197" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="245" invs="168" ippo="245" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="57" invs="90" ippo="57" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="156" ippo="156" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="257" invs="338" ippo="257" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="f" id="360" invs="351" ippo="360" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="299" ippo="299" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="98" ippo="98">
     <d>
      <invs>
       <arg a="3" i="54"/>
       <arg a="2" i="121,239,292"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="214" ippo="214" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="202" ippo="202">
     <d>
      <invs>
       <arg a="4" i="124,241,294"/>
       <arg a="3" i="56,192,362"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="9" ippo="9" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="a" id="13" ids="1" invs="21" ippo="13" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="a" id="220" ids="1" invs="31" ippo="220" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="344" ippo="344" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="51" ippo="51" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="107" ippo="107" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="312" ippo="312" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="347" ippo="347" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="375" ippo="375"/>
    <ppo id="146" ippo="146">
     <d>
      <invs>
       <arg a="3" i="77"/>
       <arg a="2" i="144,253,311"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="390" ippo="390">
     <d>
      <invs>
       <arg a="3" i="8"/>
       <arg a="2" i="87,219,265"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="249" ippo="249" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="316" invs="306" ippo="316" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo id="304" ippo="304"/>
    <ppo deps="f" id="90" invs="130" ippo="90" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="322" ippo="322" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="331" invs="200" ippo="331" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo id="268" ippo="268"/>
    <ppo deps="f" id="388" invs="265" ippo="388" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo id="40" ippo="40"/>
    <ppo deps="f" id="210" invs="347" ippo="210" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="a" id="67" ids="1" invs="26" ippo="67" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="a" id="55" ids="1" invs="10" ippo="55" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="132" ippo="132" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="110" ippo="110" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="193" ippo="193" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="339" ippo="339" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="345" invs="34" ippo="345" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_expansion_149"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable temp_expansion is not null"/>
    </ppo>
    <ppo deps="s" id="59" ippo="59" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="165" invs="92" ippo="165" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="321" ippo="321" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="196" ippo="196"/>
    <ppo id="223" ippo="223">
     <d>
      <invs>
       <arg a="4" i="108,230,281"/>
       <arg a="3" i="31,177,348"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="314" ippo="314" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="401" ippo="401" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="155" ippo="155" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="308" invs="382" ippo="308" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="383" ippo="383" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="116" invs="372" ippo="116" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="f" id="300" invs="293" ippo="300" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229_xx_assignedAt#4234_xx_assignedAt#4240_xx_assignedAt#4248"/>
    </ppo>
    <ppo id="154" ippo="154">
     <d>
      <invs>
       <arg a="4" i="137,248,303"/>
       <arg a="3" i="67,204,374"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="a" id="151" ids="1" invs="67" ippo="151" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="342" ippo="342" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="348" ippo="348" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="384" ippo="384" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="406" invs="9" ippo="406" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="61" ippo="61" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="158" ippo="158" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="113" ippo="113" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="138" invs="96" ippo="138" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="a" id="256" ids="1" invs="24" ippo="256" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo id="374" ippo="374">
     <d>
      <invs>
       <arg a="3" i="74,211,309,381"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="278" ippo="278" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="58" ippo="58">
     <d>
      <invs>
       <arg a="4" i="90,221,267"/>
       <arg a="3" i="10,156,322"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="170" ippo="170" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="74" ippo="74" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="112" ippo="112"/>
    <ppo deps="s" id="178" ippo="178" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="255" invs="276" ippo="255" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="f" id="75" invs="296" ippo="75" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="f" id="123" invs="272" ippo="123" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4225"/>
    </ppo>
    <ppo deps="s" id="267" ippo="267" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="362" ippo="362">
     <d>
      <invs>
       <arg a="4" i="110,231,283"/>
       <arg a="3" i="37,180,351"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="139" ippo="139">
     <d>
      <invs>
       <arg a="4" i="96,224,273"/>
       <arg a="3" i="20,163,332"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="147" ippo="147" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="234" invs="278" ippo="234" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="f" id="173" invs="151" ippo="173" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="293" invs="356" ippo="293" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_2_)#init"/>
    </ppo>
    <ppo deps="s" id="260" ippo="260" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="53" ippo="53" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="240" ippo="240" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="372" ippo="372" s="g">
     <e txt="addition of null-terminator-positions is non-negative"/>
    </ppo>
    <ppo deps="f" id="380" invs="74" ippo="380" s="g" ts="2018-01-09 15:49:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="191" ippo="191" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="218" ippo="218" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="311" ippo="311" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="47" ippo="47" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="373" ippo="373"/>
    <ppo id="91" ippo="91">
     <d>
      <invs>
       <arg a="4" i="130,244,297"/>
       <arg a="3" i="62,197,367"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="282" invs="355" ippo="282" s="g" ts="2018-01-09 15:49:28">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="97" ippo="97" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="a" id="163" ids="1" invs="13" ippo="163" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo id="230" ippo="230">
     <d>
      <invs>
       <arg a="3" i="79"/>
       <arg a="2" i="147,255,313"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="114" invs="301" ippo="114" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="37" ippo="37" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="368" ippo="368">
     <d>
      <invs>
       <arg a="1" i="73"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_expansion_149"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="252" ippo="252" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="265" ippo="265" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo id="248" ippo="248">
     <d>
      <invs>
       <arg a="4" i="99,225,277"/>
       <arg a="3" i="23,168,275,337"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="327" ippo="327" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="283" invs="115" ippo="283" s="g" ts="2018-01-09 15:49:28">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="s" id="95" ippo="95" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="149" ippo="149" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="198" invs="294" ippo="198" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo id="232" ippo="232"/>
    <ppo deps="a" id="115" ids="1" invs="65" ippo="115" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="290" ippo="290" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="f" id="42" invs="307" ippo="42" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo id="253" ippo="253"/>
    <ppo deps="s" id="287" ippo="287" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="324" ippo="324" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="229" ippo="229" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo id="46" ippo="46">
     <d>
      <invs>
       <arg a="4" i="142,251,307"/>
       <arg a="3" i="71,208,378"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="177" ippo="177" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="66" invs="279" ippo="66" s="g" ts="2018-01-09 15:49:28">
     <e txt="assignedAt#4229"/>
    </ppo>
    <ppo deps="s" id="83" ippo="83" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="363" ippo="363" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="340" ippo="340" s="g">
     <e txt="%%%02X is a string literal"/>
    </ppo>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="263" ippo="263" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="336" ippo="336" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="238" ippo="238">
     <d>
      <invs>
       <arg a="4" i="102,227,278"/>
       <arg a="3" i="25,172,341"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (input_2_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="a" id="43" ids="1" invs="71" ippo="43" s="g" ts="2018-01-09 15:49:28">
     <e txt="condition not-null(input) delegated to api"/>
    </ppo>
    <ppo deps="s" id="86" ippo="86" s="g">
     <e txt="input is a function parameter"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
