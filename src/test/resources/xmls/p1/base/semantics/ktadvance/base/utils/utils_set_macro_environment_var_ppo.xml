<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:30:16">
   <application file="base/utils.c"/>
  </header>
  <function fname="set_macro_environment_var">
   <ppos>
    <ppo deps="s" id="18" ippo="18" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="19" ippo="19" s="g">
     <e txt="name is a function parameter"/>
    </ppo>
    <ppo deps="f" id="32" invs="108" ippo="32" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526"/>
    </ppo>
    <ppo id="17" ippo="17">
     <d>
      <invs>
       <arg a="1" i="37,80,139"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="50" ippo="155" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="80" invs="41" ippo="80" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="90" ippo="90" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="108" invs="59" ippo="108" s="g" ts="2018-01-09 15:50:49">
     <e txt="lower-bound value is address of string literal ; or value of parameter value (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="f" id="104" invs="18" ippo="104" s="g" ts="2018-01-09 15:50:49">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="40" invs="70" ippo="40" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="49" ippo="156" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="52" ippo="52" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="67" ids="1" invs="43" ippo="67" s="g" ts="2018-01-09 15:50:49">
     <e txt="condition not-null(name) delegated to api"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="name is a function parameter"/>
    </ppo>
    <ppo deps="s" id="55" ippo="55" s="g">
     <e txt="one of the arguments is a string literal: NAGIOS_"/>
    </ppo>
    <ppo deps="f" id="117" invs="3" ippo="117" s="g" ts="2018-01-09 15:50:49">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="110" invs="68" ippo="110" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="30" invs="109" ippo="30" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526(rv:malloc)"/>
    </ppo>
    <ppo deps="f" id="62" invs="52" ippo="62" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="103" invs="127" ippo="103" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="f" id="60" invs="147" ippo="60" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="f" id="102" invs="102" ippo="102" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526"/>
    </ppo>
    <ppo deps="f" id="106" invs="103" ippo="106" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2537"/>
    </ppo>
    <ppo deps="a" id="14" ids="1" invs="37" ippo="14" s="g" ts="2018-01-09 15:50:49">
     <e txt="condition not-null(name) delegated to api"/>
    </ppo>
    <ppo deps="f" id="59" invs="114" ippo="59" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526"/>
    </ppo>
    <ppo id="111" ippo="111">
     <d>
      <invs>
       <arg a="1" i="3,68,98,121"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="15" ippo="15">
     <d>
      <invs>
       <arg a="1" i="37,80,139"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="82" ippo="82" s="g">
     <e txt="name is a function parameter"/>
    </ppo>
    <ppo deps="f" id="116" invs="121" ippo="116" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="89" ippo="89" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="38" ippo="157" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="56" invs="87" ippo="56" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="61" invs="52" ippo="61" s="g" ts="2018-01-09 15:50:49">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="79" invs="41" ippo="79" s="g" ts="2018-01-09 15:50:49">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="87" ippo="87" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="113" ippo="113">
     <d>
      <invs>
       <arg a="1" i="3,68,98,121"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="121" invs="106" ippo="121" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526"/>
    </ppo>
    <ppo deps="s" id="12" ippo="12" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="58" ippo="58" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="84" invs="43" ippo="84" s="g" ts="2018-01-09 15:50:49">
     <e txt="initial value of parameter name satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="69" ippo="69" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="74" ippo="74">
     <d>
      <invs>
       <arg a="3" i="41,83,111,143"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="112" ippo="112" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="75" ippo="75"/>
    <ppo deps="f" id="123" invs="26" ippo="123" s="g" ts="2018-01-09 15:50:49">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="48" ippo="158" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="96" ippo="96">
     <d>
      <invs>
       <arg a="1" i="59,58,103,126"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="71" invs="83" ippo="71" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="22" invs="37" ippo="22" s="g" ts="2018-01-09 15:50:49">
     <e txt="upper-bound value is initial value of parameter name satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="45" invs="12" ippo="45" s="g" ts="2018-01-09 15:50:49">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="54" ippo="54" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="78" invs="143" ippo="78" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="f" id="124" invs="26" ippo="124" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="118" invs="3" ippo="118" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="53" ippo="53" s="g">
     <e txt="upperbound of constant string argument: NAGIOS_"/>
    </ppo>
    <ppo deps="s" id="81" ippo="81" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="23" invs="112" ippo="23" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="65" ippo="65" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="77" invs="110" ippo="77" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526"/>
    </ppo>
    <ppo deps="s" id="47" ippo="159" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="73" ippo="73"/>
    <ppo deps="f" id="44" invs="123" ippo="44" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="70" ippo="70">
     <d>
      <invs>
       <arg a="1" i="43,84,144"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="91" ippo="91" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="120" ippo="120" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="f" id="97" invs="72" ippo="97" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="24" invs="113" ippo="24" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="72" ippo="72" s="g">
     <e txt="addition of null-terminator-positions is non-negative"/>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="114" ippo="114" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="21" invs="37" ippo="21" s="g" ts="2018-01-09 15:50:49">
     <e txt="initial value of parameter name satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="37" ippo="160" s="g">
     <e txt="upperbound of constant string argument: "/>
    </ppo>
    <ppo deps="s" id="64" ippo="64" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="94" ippo="94">
     <d>
      <invs>
       <arg a="1" i="59,58,103,126"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="109" invs="58" ippo="109" s="g" ts="2018-01-09 15:50:49">
     <e txt="upper-bound value is address of string literal ; or value of parameter value (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="36" ippo="161" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="76" ippo="76" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="93" invs="126" ippo="93" s="g" ts="2018-01-09 15:50:49">
     <e txt="all targets are non-null: [basevar (value_2_)#init,]"/>
    </ppo>
    <ppo deps="f" id="119" invs="132" ippo="119" s="g" ts="2018-01-09 15:50:49">
     <e txt="all regions pointed at are heap-allocated: [heap-allocated-region created by malloc at line 2526]"/>
    </ppo>
    <ppo id="41" ippo="162">
     <d>
      <invs>
       <arg a="4" i="16"/>
       <arg a="3" i="12,70,100,123"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="57" ippo="57">
     <d>
      <invs>
       <arg a="4" i="51"/>
       <arg a="3" i="52,87,115,147"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (malloc(_)#return"/>
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="68" ippo="68">
     <d>
      <invs>
       <arg a="1" i="43,84,144"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="122" invs="132" ippo="122" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="f" id="85" invs="43" ippo="85" s="g" ts="2018-01-09 15:50:49">
     <e txt="upper-bound value is initial value of parameter name satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="95" ippo="95">
     <d>
      <invs>
       <arg a="3" i="59,58,103,126"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="92" ippo="92" s="g">
     <e txt="value is a function parameter"/>
    </ppo>
    <ppo id="100" ippo="100">
     <d>
      <invs>
       <arg a="1" i="18,72,104,127"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="115" invs="97" ippo="115" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526"/>
    </ppo>
    <ppo deps="s" id="10" ippo="10" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="26" ippo="26" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="42" ippo="42" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="98" ippo="98">
     <d>
      <invs>
       <arg a="1" i="18,72,104,127"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="105" invs="18" ippo="105" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="9" ippo="9" s="g">
     <e txt="upperbound of constant string argument: NAGIOS_"/>
    </ppo>
    <ppo deps="f" id="46" invs="12" ippo="46" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function malloc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="13" ippo="13" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="39" ippo="163" s="g">
     <e txt="one of the arguments is a string literal: "/>
    </ppo>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="66" ippo="66" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="83" invs="144" ippo="83" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(name_4_)#init"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="value is a function parameter"/>
    </ppo>
    <ppo deps="s" id="35" ippo="164" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="51" ippo="51" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="107" invs="126" ippo="107" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(value_2_)#init, addrof_string_"/>
    </ppo>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="43" invs="99" ippo="43" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#2526"/>
    </ppo>
    <ppo deps="s" id="86" ippo="86" s="g">
     <e txt="set is a function parameter"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="20" invs="139" ippo="20" s="g" ts="2018-01-09 15:50:49">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(name_4_)#init"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
