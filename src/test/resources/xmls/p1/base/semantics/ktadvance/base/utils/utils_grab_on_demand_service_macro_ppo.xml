<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:29:20">
   <application file="base/utils.c"/>
  </header>
  <function fname="grab_on_demand_service_macro">
   <ppos>
    <ppo deps="s" id="386" ippo="386" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1392" ippo="1392" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1113" ippo="1113" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="1460" ippo="1460">
     <d>
      <invs>
       <arg a="3" i="830,1068"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="588" ippo="588" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="80" ippo="80" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="302" invs="962" ippo="302" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1627(rv:strcmp)"/>
    </ppo>
    <ppo id="1317" ippo="1317">
     <d>
      <invs>
       <arg a="4" i="163"/>
       <arg a="3" i="839,1084"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="988" ippo="988" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="1457" ippo="1457">
     <d>
      <invs>
       <arg a="1" i="831,1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="188" ids="1" invs="426" ippo="188" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1241" invs="1512" ippo="1241" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1190" ippo="1190" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="488" ippo="488" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="913" ippo="913" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="102" ippo="102" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1072" ippo="1072" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo id="654" ippo="654"/>
    <ppo deps="f" id="834" invs="1171" ippo="834" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1646]"/>
    </ppo>
    <ppo deps="s" id="439" ippo="439" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="559" invs="124" ippo="559" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="744" invs="999" ippo="744" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1666"/>
    </ppo>
    <ppo deps="s" id="585" ippo="585" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="a" id="465" ids="2" invs="101" ippo="465" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;description) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1288" invs="225" ippo="1288" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="746" invs="1002" ippo="746" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1670"/>
    </ppo>
    <ppo deps="s" id="901" ippo="901" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1344" ippo="1344" s="g">
     <e txt="constant value 32 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1091" ippo="1091" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="425" ippo="425" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="780" ippo="780" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1206" ippo="1206" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1323" ippo="1323" s="g">
     <e txt="constant value 2 fits in type unsigned long"/>
    </ppo>
    <ppo deps="a" id="1238" ids="3" invs="101" ippo="1238" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;execution_time) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1529" invs="498" ippo="1529" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1395" ippo="1395" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1465" ippo="1465" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="385" ippo="385" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1077" invs="1226" ippo="1077" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_16"/>
    </ppo>
    <ppo deps="f" id="160" invs="1536" ippo="160" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="235" ippo="235" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="246" invs="121" ippo="246" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1018" ippo="1018" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="a" id="1377" ids="4" invs="101" ippo="1377" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1396" ippo="1396" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1554" ippo="1554">
     <d>
      <invs>
       <arg a="1" i="585"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="305" ippo="305" s="g">
     <e txt="upperbound of constant string argument: SERVICEDOWNTIME"/>
    </ppo>
    <ppo deps="f" id="622" invs="185" ippo="622" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="756" ippo="756" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="791" ippo="791" s="g">
     <e txt="add non-negative number:  value is 16"/>
    </ppo>
    <ppo deps="s" id="403" ippo="403" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="691" ippo="691"/>
    <ppo deps="f" id="77" invs="519" ippo="77" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1511" invs="326" ippo="1511" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1215" ippo="1215">
     <d>
      <invs>
       <arg a="1" i="330,704,927,1201"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1550" ippo="1550" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="242" ippo="242">
     <d>
      <invs>
       <arg a="1" i="121,621,1465"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="159" ippo="159" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1309" ippo="1309" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="781" ippo="781" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="21" ippo="21" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="484" ippo="484" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="521" ippo="521" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="1271" invs="1130" ippo="1271" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1556]"/>
    </ppo>
    <ppo id="1338" ippo="1338">
     <d>
      <invs>
       <arg a="4" i="399"/>
       <arg a="3" i="958,1240"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1119" ippo="1119" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo id="1227" ippo="1227">
     <d>
      <invs>
       <arg a="4" i="301"/>
       <arg a="3" i="908,1180"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="237" ippo="237" s="g">
     <e txt="upperbound of constant string argument: LASTSERVICEOK"/>
    </ppo>
    <ppo deps="s" id="767" ippo="767" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1349" invs="1239" ippo="1349" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_22"/>
    </ppo>
    <ppo id="563" ippo="563"/>
    <ppo deps="f" id="1388" invs="1337" ippo="1388" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1532]"/>
    </ppo>
    <ppo deps="s" id="1497" ippo="1497" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="619" invs="853" ippo="619" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1694(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="f" id="923" invs="446" ippo="923" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="279" invs="1506" ippo="279" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo id="776" ippo="776">
     <d>
      <invs>
       <arg a="4" i="177"/>
       <arg a="3" i="850,1095"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="176" ippo="176" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="186" ippo="186" s="g">
     <e txt="upperbound of constant string argument: SERVICELATENCY"/>
    </ppo>
    <ppo id="668" ippo="668">
     <d>
      <invs>
       <arg a="1" i="951"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1289" ippo="1289" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="211" invs="1498" ippo="211" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="433" invs="318" ippo="433" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="634" invs="187" ippo="634" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-41_807_)#init,(memref-42_809_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1175" ippo="1175" s="g">
     <e txt="%.3f is a string literal"/>
    </ppo>
    <ppo deps="s" id="1546" ippo="1546" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="326" ippo="326" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="a" id="392" ids="1" invs="510" ippo="392" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="430" ippo="430" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="627" ippo="627"/>
    <ppo deps="s" id="17" ippo="17" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="391" ippo="391" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="686" invs="867" ippo="686" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1488"/>
    </ppo>
    <ppo deps="s" id="640" ippo="640" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1110" ippo="1110" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="226" ippo="226" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="313" invs="1476" ippo="313" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="758" ippo="758" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="889" ippo="889" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="1474" invs="324" ippo="1474" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="295" ippo="295" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="930" ippo="930" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="1468" invs="1069" ippo="1468" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_string_HARD, addrof_string_SOFT"/>
    </ppo>
    <ppo deps="a" id="1541" ids="5" invs="145" ippo="1541" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1340" ippo="1340" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="a" id="1539" ids="6" invs="101" ippo="1539" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;plugin_output) delegated to api"/>
    </ppo>
    <ppo deps="f" id="787" invs="848" ippo="787" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1488"/>
    </ppo>
    <ppo deps="a" id="1330" ids="5" invs="169" ippo="1330" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1526" ippo="1526" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="550" invs="552" ippo="550" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1132" ippo="1132" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1200" invs="1334" ippo="1200" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1574]"/>
    </ppo>
    <ppo deps="f" id="404" invs="878" ippo="404" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1685(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="911" ippo="911" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="1197" invs="341" ippo="1197" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="142" ippo="142" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="f" id="416" invs="407" ippo="416" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="926" ippo="926" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="262" invs="1538" ippo="262" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo id="27" ippo="27">
     <d>
      <invs>
       <arg a="3" i="578"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:lower-bound expr: (memref-96_917_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="645" ippo="645"/>
    <ppo deps="s" id="755" ippo="755" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="334" ippo="334" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="212" invs="235" ippo="212" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="395" ippo="395">
     <d>
      <invs>
       <arg a="1" i="510,757,1562"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="460" invs="410" ippo="460" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1518" ippo="1518" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="1334" ippo="1334" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="364" invs="1463" ippo="364" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="251" invs="1028" ippo="251" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1600(rv:strcmp)"/>
    </ppo>
    <ppo deps="f" id="432" invs="1514" ippo="432" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo id="562" ippo="562"/>
    <ppo id="359" ippo="359">
     <d>
      <invs>
       <arg a="1" i="117,619,1463"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="946" ippo="946" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="987" ippo="987" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="1090" ippo="1090">
     <d>
      <invs>
       <arg a="4" i="126"/>
       <arg a="3" i="818,1057"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="222" ids="1" invs="375" ippo="222" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="580" ippo="580" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="617" invs="909" ippo="617" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1725(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="1230" ippo="1230" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="441" ippo="441" s="g">
     <e txt="upperbound of constant string argument: SERVICENOTES"/>
    </ppo>
    <ppo id="482" ippo="482">
     <d>
      <invs>
       <arg a="1" i="209,655,1489"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="829" ids="5" invs="454" ippo="829" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="892" invs="640" ippo="892" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="f" id="1226" invs="1180" ippo="1226" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1565]"/>
    </ppo>
    <ppo deps="s" id="1312" ippo="1312" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="943" ippo="943" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="596" ippo="596">
     <d>
      <invs>
       <arg a="1" i="386"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="365" invs="117" ippo="365" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="933" ippo="933" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1282" ippo="1282" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="162" invs="417" ippo="162" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="993" ippo="993" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="33" invs="948" ippo="33" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1491(globalservicegroup_list9061)_xx_assignedAt#1491(fieldnext159)"/>
    </ppo>
    <ppo id="564" ippo="564"/>
    <ppo id="673" ippo="673"/>
    <ppo deps="s" id="1085" ippo="1085" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="1506" ids="7" invs="101" ippo="1506" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;perf_data) delegated to api"/>
    </ppo>
    <ppo deps="s" id="175" ippo="175" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1292" ippo="1292" s="g">
     <e txt="add non-negative number:  value is 7"/>
    </ppo>
    <ppo deps="s" id="1390" ippo="1390" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="651" ippo="651">
     <d>
      <invs>
       <arg a="2" i="896"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="92" invs="1542" ippo="92" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="790" ippo="790" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1039" ippo="1039" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1512" ippo="1512" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="10" ippo="10" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="916" ippo="916" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="224" ippo="224" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="846" invs="314" ippo="846" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1082" ippo="1082" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1313" ippo="1313" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1533" invs="596" ippo="1533" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter memref-86 satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="417" invs="407" ippo="417" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="804" ippo="804">
     <d>
      <invs>
       <arg a="1" i="535,768,1016,1323"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1476" invs="1198" ippo="1476" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_24"/>
    </ppo>
    <ppo id="1523" ippo="1523">
     <d>
      <invs>
       <arg a="1" i="596"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="153" ippo="153" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="727" ippo="727" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1198" invs="341" ippo="1198" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="39" invs="379" ippo="39" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="1150" ids="5" invs="247" ippo="1150" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1209" ippo="1209" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo deps="f" id="1380" invs="1565" ippo="1380" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="a" id="605" ids="1" invs="491" ippo="605" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo id="671" ippo="671"/>
    <ppo deps="f" id="968" invs="293" ippo="968" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="948" ippo="948" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="826" ippo="826" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="126" invs="1520" ippo="126" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="689" ippo="689" s="g">
     <e txt="value is 86400"/>
    </ppo>
    <ppo deps="s" id="591" ippo="591" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1157" ippo="1157" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="f" id="315" invs="160" ippo="315" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="807" ippo="807" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="294" ippo="294" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="492" ippo="492">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="877" invs="350" ippo="877" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1229" ippo="1229" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="108" ippo="108" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo id="310" ippo="310">
     <d>
      <invs>
       <arg a="1" i="160,634,1476"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1224" ippo="1224" s="g">
     <e txt="upperbound of constant string argument: %.3f"/>
    </ppo>
    <ppo deps="s" id="1551" ippo="1551" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="623" invs="185" ippo="623" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-41_807_)#init,(memref-42_809_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1059" invs="1500" ippo="1059" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="565" ippo="565" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="894" ippo="894">
     <d>
      <invs>
       <arg a="1" i="170,640,842,1087"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1242" invs="308" ippo="1242" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="185" ippo="185" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="707" ippo="707" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="883" ippo="883" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="1350" ippo="1350">
     <d>
      <invs>
       <arg a="1" i="397,724,957,1239"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1174" ippo="1174" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="14" ippo="14" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="f" id="111" invs="270" ippo="111" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="950" ippo="950" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="a" id="1482" ids="8" invs="101" ippo="1482" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;check_type) delegated to api"/>
    </ppo>
    <ppo deps="s" id="551" ippo="551" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="729" ippo="729" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="82" ippo="82" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="487" invs="209" ippo="487" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="728" ippo="728" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="920" ids="5" invs="446" ippo="920" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1074" invs="946" ippo="1074" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1592(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="1339" ippo="1339" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1483" ippo="1483" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="578" ippo="578" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1123" invs="1235" ippo="1123" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_17"/>
    </ppo>
    <ppo deps="s" id="1311" ippo="1311" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="534" ippo="534" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="977" ippo="977" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="270" ippo="270" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="857" ippo="857" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1513" ippo="1513" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="810" ippo="810" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="554" invs="952" ippo="554" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1711(rv:strcmp)"/>
    </ppo>
    <ppo deps="f" id="893" invs="1087" ippo="893" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_12"/>
    </ppo>
    <ppo deps="s" id="12" ippo="12" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="209" ippo="209" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="366" invs="117" ippo="366" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1431" ippo="1431" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1434" ippo="1434" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1106" invs="133" ippo="1106" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="835" ippo="835" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1177" ippo="1177" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1064" ippo="1064" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="556" invs="812" ippo="556" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1694(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo id="642" ippo="642"/>
    <ppo deps="s" id="1264" ippo="1264" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="128" invs="354" ippo="128" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="285" invs="933" ippo="285" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1618(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="958" ippo="958" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1026" ippo="1026" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1462" ippo="1462" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1275" ippo="1275" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="399" invs="510" ippo="399" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1534" ippo="1534" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="a" id="1283" ids="9" invs="101" ippo="1283" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;current_attempt) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1332" invs="169" ippo="1332" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1544" invs="145" ippo="1544" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="94" invs="430" ippo="94" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="109" invs="1508" ippo="109" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="1153" invs="247" ippo="1153" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1442" invs="1312" ippo="1442" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_23"/>
    </ppo>
    <ppo id="543" ippo="543">
     <d>
      <invs>
       <arg a="1" i="552,772,1333"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="610" ippo="610" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="f" id="922" invs="446" ippo="922" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1142" ippo="1142" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1430" ippo="1430" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1496" ippo="1496" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="902" ippo="902" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="421" invs="1013" ippo="421" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1691(rv:strcmp)"/>
    </ppo>
    <ppo id="257" ippo="257">
     <d>
      <invs>
       <arg a="1" i="421,735,1538"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="899" ippo="899" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="529" ippo="529" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1490" ippo="1490" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="932" ippo="932" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1173" ippo="1173" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1421" ippo="1421" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1076" invs="716" ippo="1076" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="485" invs="1489" ippo="485" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:find_serviceextinfo @-1 r:1,freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="535" ippo="535" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="1199" ippo="1199" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1184" ippo="1184" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="a" id="375" ids="1" invs="262" ippo="375" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1187" ippo="1187" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="390" ippo="390" s="g">
     <e txt="upperbound of constant string argument: SERVICEGROUPALIAS"/>
    </ppo>
    <ppo deps="f" id="1485" invs="1552" ippo="1485" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1016" ippo="1016" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="821" ippo="821" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="249" ippo="249" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1013" invs="1510" ippo="1013" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="824" ippo="824" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="1056" ids="10" invs="101" ippo="1056" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;last_time_ok) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1333" invs="169" ippo="1333" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1171" ippo="1171" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="210" ippo="210" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo id="685" ippo="685"/>
    <ppo deps="s" id="738" ippo="738" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="339" ippo="339" s="g">
     <e txt="upperbound of constant string argument: SERVICEDURATIONSEC"/>
    </ppo>
    <ppo deps="s" id="345" ippo="345" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="827" ids="11" invs="101" ippo="827" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;percent_state_change) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1509" invs="1516" ippo="1509" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="321" ippo="321" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="667" ippo="667">
     <d>
      <invs>
       <arg a="1" i="951"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="762" invs="764" ippo="762" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 17"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(17)#return (17)"/>
    </ppo>
    <ppo deps="f" id="1211" invs="926" ippo="1211" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1565(rv:malloc)"/>
    </ppo>
    <ppo deps="f" id="196" invs="426" ippo="196" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="681" ippo="681" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1423" ippo="1423" s="g">
     <e txt="upperbound of constant string argument: UNKNOWN"/>
    </ppo>
    <ppo id="308" ippo="308">
     <d>
      <invs>
       <arg a="1" i="160,634,1476"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="592" ippo="592" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="116" ippo="116" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="945" ippo="945" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="1192" ippo="1192" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="348" invs="366" ippo="348" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="384" ippo="384" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="38" invs="1525" ippo="38" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1127" ippo="1127" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="907" ippo="907" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="940" ippo="940">
     <d>
      <invs>
       <arg a="1" i="470,750,980,1283"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="522" ippo="522" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="178" invs="413" ippo="178" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1400" ippo="1400" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="75" invs="1564" ippo="75" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo id="635" ippo="635"/>
    <ppo deps="s" id="1164" ippo="1164" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="362" ippo="362" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="558" ippo="558">
     <d>
      <invs>
       <arg a="1" i="124,602,622,812,1050"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:process_macros @-1 r:38"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="921" invs="1548" ippo="921" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="f" id="800" invs="1015" ippo="800" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1646(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="1007" ippo="1007" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1371" ippo="1371" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="139" ippo="139" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="147" ippo="147" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1562" invs="383" ippo="1562" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="867" ippo="867" s="g">
     <e txt="constant value 3 fits in type unsigned long"/>
    </ppo>
    <ppo id="649" ippo="649">
     <d>
      <invs>
       <arg a="1" i="896"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1005" ippo="1005" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1160" ippo="1160" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="1257" invs="229" ippo="1257" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="53" ippo="53">
     <d>
      <invs>
       <arg a="1" i="481,752,1555"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="372" ippo="372" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="859" ippo="859" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="752" ippo="752">
     <d>
      <invs>
       <arg a="4" i="504"/>
       <arg a="3" i="997,1301"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1248" ippo="1248">
     <d>
      <invs>
       <arg a="4" i="370"/>
       <arg a="3" i="944,1221"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="373" ippo="373" s="g">
     <e txt="upperbound of constant string argument: SERVICEGROUPNAME"/>
    </ppo>
    <ppo deps="s" id="851" ippo="851" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="765" ippo="765" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="896" ippo="896" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1337" ippo="1337" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="1417" ippo="1417" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="842" ippo="842" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1138" ippo="1138" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1053" ippo="1053" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1363" ippo="1363" s="g">
     <e txt="upperbound of constant string argument: OK"/>
    </ppo>
    <ppo deps="f" id="1151" invs="1499" ippo="1151" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="a" id="1484" ids="5" invs="464" ippo="1484" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1048" ippo="1048" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="461" invs="410" ippo="461" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1559" ippo="1559" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="647" ippo="647"/>
    <ppo deps="s" id="283" ippo="283" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="95" ippo="95" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="149" invs="940" ippo="149" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1546(rv:strcmp)"/>
    </ppo>
    <ppo deps="a" id="874" ids="5" invs="350" ippo="874" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1201" ippo="1201" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1424" ippo="1424" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="42" ippo="42"/>
    <ppo deps="s" id="253" ippo="253" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1542" invs="1474" ippo="1542" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1375" ippo="1375" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="766" ippo="766" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="229" invs="375" ippo="229" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1365" ippo="1365" s="g">
     <e txt="one of the arguments is a string literal: OK"/>
    </ppo>
    <ppo id="662" ippo="662"/>
    <ppo deps="s" id="1415" ippo="1415" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo id="928" ippo="928">
     <d>
      <invs>
       <arg a="4" i="526"/>
       <arg a="3" i="1008,1315"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="570" invs="274" ippo="570" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="784" ippo="784" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1268" ippo="1268" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1273" ippo="1273" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="239" ids="1" invs="121" ippo="239" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="318" ippo="318" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="823" ippo="823" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="50" ippo="50" s="g">
     <e txt="upperbound of constant string argument: SERVICEOUTPUT"/>
    </ppo>
    <ppo deps="s" id="806" ippo="806" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="104" ippo="104">
     <d>
      <invs>
       <arg a="1" i="270,677,1508"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="496" invs="110" ippo="496" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="512" ippo="512" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="568" invs="680" ippo="568" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="1561" invs="1526" ippo="1561" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1068" ippo="1068" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="797" ippo="797" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1218" ippo="1218" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1358" invs="1473" ippo="1358" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="f" id="749" invs="1301" ippo="749" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1664]"/>
    </ppo>
    <ppo deps="s" id="863" ippo="863" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1545" ippo="1545" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="103" ids="1" invs="270" ippo="103" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="453" ippo="453" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="862" ippo="862" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="378" ippo="378">
     <d>
      <invs>
       <arg a="1" i="262,673,1504"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="444" ippo="444">
     <d>
      <invs>
       <arg a="1" i="258,671,1502"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="900" ippo="900" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="733" ippo="733">
     <d>
      <invs>
       <arg a="4" i="512"/>
       <arg a="3" i="1004,1308"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1406" ippo="1406" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1255" ippo="1255" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1397" ippo="1397" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1481" ippo="1481" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1376" ippo="1376" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="984" invs="726" ippo="984" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="s" id="180" ippo="180" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1381" invs="528" ippo="1381" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="400" invs="510" ippo="400" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1125" ippo="1125" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="523" ippo="523" s="g">
     <e txt="maximum constant value 1024 fits in type int"/>
    </ppo>
    <ppo deps="s" id="481" ippo="481" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="690" invs="1019" ippo="690" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1488"/>
    </ppo>
    <ppo deps="s" id="141" ippo="141" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="774" ippo="774" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="204" ippo="204" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="502" ippo="502" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="959" ippo="959" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1097" ippo="1097" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="335" ippo="335" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="560" invs="124" ippo="560" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-41_807_)#init,(memref-42_809_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1343" ippo="1343" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="195" invs="426" ippo="195" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="553" ippo="553" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="124" ippo="124" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="370" invs="937" ippo="370" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1663(rv:strcmp)"/>
    </ppo>
    <ppo deps="f" id="474" invs="910" ippo="474" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1694(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="814" ippo="814" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="985" invs="1243" ippo="985" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_14"/>
    </ppo>
    <ppo deps="f" id="803" invs="1323" ippo="803" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_10"/>
    </ppo>
    <ppo deps="s" id="757" ippo="757" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1205" ippo="1205" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="613" invs="491" ippo="613" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="332" invs="190" ippo="332" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1258" invs="662" ippo="1258" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 8"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(8)#return (8)"/>
    </ppo>
    <ppo deps="s" id="1263" ippo="1263" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="1553" ids="12" invs="585" ippo="1553" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc-&gt;plugin_output) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1453" invs="435" ippo="1453" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="419" ippo="419" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="753" ippo="753" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="843" ippo="843" s="g">
     <e txt="constant value 3 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1035" ippo="1035" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="717" ippo="717">
     <d>
      <invs>
       <arg a="3" i="329"/>
       <arg a="2" i="925"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="981" ippo="981" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1131" ippo="1131" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1411" ippo="1411">
     <d>
      <invs>
       <arg a="4" i="466"/>
       <arg a="3" i="978,1280"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="323" ippo="323" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="644" ippo="644"/>
    <ppo deps="s" id="1233" ippo="1233" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="122" ippo="122" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="306" ippo="306" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="382" invs="262" ippo="382" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="638" ippo="638" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1154" ippo="1154" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1477" ippo="1477">
     <d>
      <invs>
       <arg a="1" i="324,701,923,1198"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="412" ippo="412">
     <d>
      <invs>
       <arg a="1" i="407,728,1531"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1143" ippo="1143" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1422" ippo="1422" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="658" ippo="658" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="307" ids="1" invs="160" ippo="307" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="463" ippo="463" s="g">
     <e txt="field host_name (162) is assigned a value with a valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="513" ippo="513" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="793" ippo="793" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="980" ippo="980" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="192" ippo="192" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1478" ippo="1478" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="259" ippo="259">
     <d>
      <invs>
       <arg a="1" i="421,735,1538"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="271" ippo="271" s="g">
     <e txt="upperbound of constant string argument: LASTSERVICEUNKNOWN"/>
    </ppo>
    <ppo id="561" ippo="561"/>
    <ppo deps="s" id="320" ippo="320" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1277" ippo="1277" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="143" invs="1529" ippo="143" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1070" ippo="1070" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1185" ippo="1185" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1261" ippo="1261" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="19" ippo="19"/>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="172" ippo="172">
     <d>
      <invs>
       <arg a="1" i="413,731,1534"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="228" invs="1524" ippo="228" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="497" invs="110" ippo="497" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-41_807_)#init,(memref-42_809_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="545" ippo="545">
     <d>
      <invs>
       <arg a="1" i="552,772,1333"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1046" ippo="1046" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="503" ippo="503">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="514" ippo="514" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="838" ippo="838" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="60" invs="481" ippo="60" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1502" invs="1188" ippo="1502" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addrof_string_ACTIVE, addrof_string_PASSIVE"/>
    </ppo>
    <ppo deps="s" id="1115" ippo="1115" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="759" ippo="759" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="144" invs="390" ippo="144" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="706" ippo="706">
     <d>
      <invs>
       <arg a="3" i="368"/>
       <arg a="2" i="943"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1043" invs="1147" ippo="1043" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1601]"/>
    </ppo>
    <ppo deps="f" id="1075" invs="377" ippo="1075" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1459" invs="1068" ippo="1459" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1525]"/>
    </ppo>
    <ppo id="629" ippo="629">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="702" invs="942" ippo="702" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1667"/>
    </ppo>
    <ppo deps="s" id="741" ippo="741" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="1450" ids="5" invs="435" ippo="1450" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo id="1470" ippo="1470">
     <d>
      <invs>
       <arg a="2" i="831,1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1186" ippo="1186" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="1565" invs="585" ippo="1565" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter memref-85 satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="171" ids="1" invs="413" ippo="171" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo id="34" ippo="34">
     <d>
      <invs>
       <arg a="1" i="1461,948"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="1285" ids="5" invs="225" ippo="1285" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1445" ippo="1445" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1235" ippo="1235" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1265" ippo="1265" s="g">
     <e txt="%d is a string literal"/>
    </ppo>
    <ppo deps="f" id="127" invs="354" ippo="127" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="614" ippo="614" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="748" ippo="748" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="855" ippo="855" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1276" ippo="1276" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1296" ippo="1296" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1286" invs="1494" ippo="1286" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo id="1136" ippo="1136">
     <d>
      <invs>
       <arg a="4" i="240"/>
       <arg a="3" i="886,1143"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1364" ippo="1364" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1463" ippo="1463" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="298" invs="461" ippo="298" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="576" ippo="576" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="998" ippo="998">
     <d>
      <invs>
       <arg a="4" i="277"/>
       <arg a="3" i="895,1163"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="servicegroup_list is global"/>
    </ppo>
    <ppo deps="s" id="903" ippo="903" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="1291" ippo="1291" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo id="325" ippo="325">
     <d>
      <invs>
       <arg a="1" i="190,649,1485"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="379" ippo="379" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1552" ippo="1552" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="440" ippo="440" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="974" ippo="974">
     <d>
      <invs>
       <arg a="4" i="403"/>
       <arg a="3" i="961,1244"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="184" ippo="184" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="976" ippo="976" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1505" ippo="1505" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="72" ippo="72">
     <d>
      <invs>
       <arg a="1" i="519,759,1564"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="261" ippo="261" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="f" id="93" invs="430" ippo="93" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="970" ippo="970" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="701" ippo="701" s="g">
     <e txt="value is 3600"/>
    </ppo>
    <ppo deps="s" id="1108" ippo="1108" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="1403" invs="469" ippo="1403" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="832" invs="454" ippo="832" s="g" ts="2018-01-09 15:49:57">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1407" ippo="1407" s="g">
     <e txt="upperbound of constant string argument: CRITICAL"/>
    </ppo>
    <ppo deps="s" id="254" ippo="254" s="g">
     <e txt="upperbound of constant string argument: LASTSERVICEWARNING"/>
    </ppo>
    <ppo deps="s" id="817" ippo="817" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1047" ippo="1047" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="a" id="1520" ids="13" invs="596" ippo="1520" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc-&gt;perf_data) delegated to api"/>
    </ppo>
    <ppo deps="s" id="989" ippo="989" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="207" ippo="207" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="a" id="456" ids="14" invs="101" ippo="456" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;host_name) delegated to api"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1320" ippo="1320" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="a" id="1448" ids="15" invs="101" ippo="1448" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;state_type) delegated to api"/>
    </ppo>
    <ppo id="655" ippo="655"/>
    <ppo deps="a" id="20" ids="16" invs="101" ippo="20" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;last_state_change) delegated to api"/>
    </ppo>
    <ppo id="1504" ippo="1504">
     <d>
      <invs>
       <arg a="2" i="917,1188"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1405" ippo="1405" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="409" ids="1" invs="407" ippo="409" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo id="625" ippo="625"/>
    <ppo deps="s" id="1435" ippo="1435" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="1009" ids="17" invs="575" ippo="1009" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_warning: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1412" ippo="1412" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="166" invs="983" ippo="166" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1555(rv:strcmp)"/>
    </ppo>
    <ppo id="376" ippo="376">
     <d>
      <invs>
       <arg a="1" i="262,673,1504"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1225" ippo="1225" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="1347" invs="397" ippo="1347" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1438" ippo="1438" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="a" id="479" ids="1" invs="209" ippo="479" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo id="653" ippo="653"/>
    <ppo deps="s" id="1004" ippo="1004" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1236" ippo="1236" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1426" invs="1291" ippo="1426" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1532]"/>
    </ppo>
    <ppo id="1521" ippo="1521">
     <d>
      <invs>
       <arg a="1" i="596"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="49" ippo="49" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="908" ippo="908" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1362" ippo="1362" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1203" ippo="1203">
     <d>
      <invs>
       <arg a="4" i="555"/>
       <arg a="3" i="1029,1334"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="62" ippo="62" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="284" ippo="284" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="106" ippo="106">
     <d>
      <invs>
       <arg a="1" i="270,677,1508"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="1055" ids="18" invs="573" ippo="1055" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_ok: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="266" ippo="266" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="688" ippo="688" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1116" ippo="1116" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="1010" ids="19" invs="101" ippo="1010" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;last_time_warning) delegated to api"/>
    </ppo>
    <ppo deps="a" id="1560" ids="5" invs="383" ippo="1560" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="493" invs="809" ippo="493" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1694(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="56" ippo="56" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="914" ippo="914" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1161" ippo="1161" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="422" ippo="422" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="443" ids="1" invs="258" ippo="443" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="f" id="732" invs="1308" ippo="732" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1664]"/>
    </ppo>
    <ppo deps="f" id="967" invs="1511" ippo="967" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1094" ippo="1094" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1299" ippo="1299" s="g">
     <e txt="constant value 2 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="772" ippo="772" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1352" ippo="1352" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1557" ippo="1557" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="919" ippo="919" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="840" ippo="840" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1366" invs="1072" ippo="1366" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1532]"/>
    </ppo>
    <ppo id="849" ippo="849">
     <d>
      <invs>
       <arg a="1" i="314,695,919,1190"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1536" ippo="1536" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="201" ippo="201" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="574" ippo="574"/>
    <ppo deps="s" id="346" ippo="346" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="f" id="1335" invs="1240" ippo="1335" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1547]"/>
    </ppo>
    <ppo deps="s" id="1306" ippo="1306" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="288" ippo="288" s="g">
     <e txt="upperbound of constant string argument: LASTSERVICECRITICAL"/>
    </ppo>
    <ppo deps="s" id="828" ippo="828" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="844" ippo="844" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="956" ippo="956" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1139" ippo="1139" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="761" invs="529" ippo="761" s="g" ts="2018-01-09 15:49:57">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="45" ippo="45">
     <d>
      <invs>
       <arg a="1" i="1023"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="78" ippo="78" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1014" invs="282" ippo="1014" s="g" ts="2018-01-09 15:49:57">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="616" ippo="616" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="966" ids="5" invs="293" ippo="966" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="23" invs="1173" ippo="23" s="g" ts="2018-01-09 15:49:57">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1024" ippo="1024" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1432" ippo="1432" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="696" ippo="696" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="a" id="1148" ids="20" invs="101" ippo="1148" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition initialized(svc-&gt;last_check) delegated to api"/>
    </ppo>
    <ppo deps="s" id="337" ippo="337" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1305" ippo="1305">
     <d>
      <invs>
       <arg a="1" i="272,679,891,1157"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="351" ippo="351" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1159" ippo="1159" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="1303" invs="679" ippo="1303" s="g" ts="2018-01-09 15:49:57">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 2"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(2)#return (2)"/>
    </ppo>
    <ppo id="393" ippo="393">
     <d>
      <invs>
       <arg a="1" i="510,757,1562"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1389" ippo="1389">
     <d>
      <invs>
       <arg a="4" i="558"/>
       <arg a="3" i="1031,1337"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="197" ippo="197" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1568" ippo="1568" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="360" ippo="360" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="526" ippo="526" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="566" ippo="566">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="839" ippo="839" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1567" ippo="1567" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="747" invs="1003" ippo="747" s="g" ts="2018-01-09 15:49:57">
     <e txt="assignedAt#1672"/>
    </ppo>
    <ppo deps="s" id="794" ippo="794" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1011" ippo="1011" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1262" ippo="1262" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="202" ippo="202" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1135" invs="1143" ippo="1135" s="g" ts="2018-01-09 15:49:57">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1583]"/>
    </ppo>
    <ppo deps="a" id="1527" ids="5" invs="498" ippo="1527" s="g" ts="2018-01-09 15:49:57">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="9" ippo="9" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="1021" ippo="1021" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1499" ippo="1499" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="719" ippo="719" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="220" ippo="220" s="g">
     <e txt="upperbound of constant string argument: 22-character string"/>
    </ppo>
    <ppo deps="s" id="888" ippo="888" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="312" ippo="312" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1341" ippo="1341" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="347" invs="1522" ippo="347" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="735" ippo="735" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1183" ippo="1183" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="146" ippo="146" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="852" ippo="852" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1386" ippo="1386" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="500" ippo="500"/>
    <ppo deps="f" id="938" invs="750" ippo="938" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="a" id="1508" ids="5" invs="326" ippo="1508" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="316" ippo="316" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1081" ippo="1081" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1239" ippo="1239" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="304" ippo="304" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="582" ippo="582" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="322" ippo="322" s="g">
     <e txt="upperbound of constant string argument: SERVICEPERCENTCHANGE"/>
    </ppo>
    <ppo deps="s" id="1342" ippo="1342" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1034" ippo="1034" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="268" invs="934" ippo="268" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1609(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="773" ippo="773" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="856" ippo="856" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="1195" ids="5" invs="341" ippo="1195" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo id="55" ippo="55">
     <d>
      <invs>
       <arg a="1" i="481,752,1555"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1066" ippo="1066">
     <d>
      <invs>
       <arg a="4" i="332"/>
       <arg a="3" i="928,1202"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1429" ippo="1429" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="990" ippo="990" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="657" invs="835" ippo="657" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1491(globalservicegroup_list9061)_xx_assignedAt#1491(fieldnext159)"/>
    </ppo>
    <ppo deps="a" id="1399" ids="4" invs="101" ippo="1399" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo deps="f" id="59" invs="481" ippo="59" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="165" ippo="165" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="445" ippo="445" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="466" ippo="466" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="698" invs="974" ippo="698" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1667"/>
    </ppo>
    <ppo deps="s" id="809" ippo="809" s="g">
     <e txt="%.2f is a string literal"/>
    </ppo>
    <ppo id="223" ippo="223">
     <d>
      <invs>
       <arg a="1" i="375,714,1524"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="401" ippo="401" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="609" ippo="609" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="438" invs="1026" ippo="438" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1691(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="934" ippo="934" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="300" ippo="300" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="151" ippo="151" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="158" ippo="158" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1295" ippo="1295" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="575" ippo="575" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="697" ippo="697"/>
    <ppo id="1455" ippo="1455">
     <d>
      <invs>
       <arg a="1" i="831,1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="138" ippo="138">
     <d>
      <invs>
       <arg a="1" i="390,720,1529"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="278" ippo="278" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="584" ippo="584" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="1232" ippo="1232" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="58" invs="1555" ippo="58" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="170" ippo="170" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1244" ippo="1244" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1370" ippo="1370" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="255" ippo="255" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="468" invs="1532" ippo="468" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="963" ids="21" invs="577" ippo="963" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_unknown: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1517" ippo="1517" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1100" ippo="1100" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="536" ippo="536" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="1570" ippo="1570" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="173" ippo="173" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="442" ippo="442" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1222" ippo="1222" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1237" ippo="1237" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="260" ippo="260" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="820" ippo="820" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="586" ippo="586" s="g">
     <e txt="maximum constant value 1024 fits in type int"/>
    </ppo>
    <ppo deps="s" id="1189" ippo="1189" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1439" invs="1005" ippo="1439" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1525(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="282" ippo="282" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="408" ippo="408" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="516" ippo="516" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1134" ippo="1134" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1325" ippo="1325" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="873" ippo="873" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1069" ippo="1069" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1126" ippo="1126" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="567" invs="892" ippo="567" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1694(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="f" id="969" invs="293" ippo="969" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="680" ippo="680">
     <d>
      <invs>
       <arg a="1" i="531,766,1012,1321"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="979" ippo="979" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="265" ippo="265" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="687" ippo="687" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="716" invs="925" ippo="716" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1670"/>
    </ppo>
    <ppo deps="s" id="854" ippo="854" s="g">
     <e txt="%d is a string literal"/>
    </ppo>
    <ppo deps="s" id="641" ippo="641" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1516" ippo="1516" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="198" ippo="198" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="290" ids="1" invs="461" ippo="290" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="742" ippo="742" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1564" ippo="1564">
     <d>
      <invs>
       <arg a="1" i="585"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="597" ippo="597" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1111" ippo="1111" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="f" id="1451" invs="1547" ippo="1451" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="909" ippo="909" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="983" invs="401" ippo="983" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="46" ippo="46">
     <d>
      <invs>
       <arg a="2" i="1023"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1316" invs="1084" ippo="1316" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1547]"/>
    </ppo>
    <ppo deps="a" id="1058" ids="5" invs="254" ippo="1058" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1152" invs="247" ippo="1152" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1168" invs="770" ippo="1168" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 10"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(10)#return (10)"/>
    </ppo>
    <ppo deps="s" id="1310" ippo="1310" s="g">
     <e txt="%d is a string literal"/>
    </ppo>
    <ppo id="35" ippo="35">
     <d>
      <invs>
       <arg a="2" i="1461,948"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="603" ippo="603" s="g">
     <e txt="upperbound of constant string argument: SERVICENOTES"/>
    </ppo>
    <ppo deps="s" id="664" ippo="664" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1196" invs="1517" ippo="1196" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="f" id="451" invs="258" ippo="451" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="43" invs="1023" ippo="43" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1491(globalservicegroup_list9061)_xx_assignedAt#1491(fieldnext159)"/>
    </ppo>
    <ppo deps="s" id="1128" ippo="1128" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1443" ippo="1443">
     <d>
      <invs>
       <arg a="1" i="521,761,1006,1312"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="182" ippo="182" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="427" ippo="427">
     <d>
      <invs>
       <arg a="1" i="318,697,1514"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1269" ippo="1269" s="g">
     <e txt="upperbound of constant string argument: %d"/>
    </ppo>
    <ppo deps="a" id="964" ids="22" invs="101" ippo="964" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;last_time_unknown) delegated to api"/>
    </ppo>
    <ppo deps="s" id="778" ippo="778" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1052" ippo="1052" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1112" ippo="1112">
     <d>
      <invs>
       <arg a="4" i="474"/>
       <arg a="3" i="982,1284"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="354" ippo="354" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="557" invs="622" ippo="557" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo id="1124" ippo="1124">
     <d>
      <invs>
       <arg a="1" i="393,722,954,1235"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1491" ippo="1491">
     <d>
      <invs>
       <arg a="1" i="917,1188"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1062" ippo="1062" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1117" ippo="1117" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="219" ippo="219" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="459" invs="1532" ippo="459" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="777" ippo="777" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="272" ippo="272" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="624" ippo="624"/>
    <ppo deps="s" id="799" ippo="799" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="145" invs="390" ippo="145" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="789" invs="1330" ippo="789" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1655]"/>
    </ppo>
    <ppo deps="s" id="604" ippo="604" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1057" ippo="1057" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1315" ippo="1315" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1466" ippo="1466" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="1503" ippo="1503">
     <d>
      <invs>
       <arg a="2" i="917,1188"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1532" invs="596" ippo="1532" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter memref-86 satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="221" ippo="221" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1054" ippo="1054" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="639" invs="1017" ippo="639" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1491(globalservicegroup_list9061)_xx_assignedAt#1491(fieldnext159)"/>
    </ppo>
    <ppo id="121" ippo="121">
     <d>
      <invs>
       <arg a="1" i="354,710,1520"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="740" ippo="740" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1037" ippo="1037" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo id="548" ippo="548">
     <d>
      <invs>
       <arg a="1" i="552,772,1333"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:find_serviceextinfo @-1 r:1,freed(by:is_service_member_of_servicegroup @-1 r:1,freed(by:process_macros @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="152" ippo="152" s="g">
     <e txt="upperbound of constant string argument: SERVICEATTEMPT"/>
    </ppo>
    <ppo deps="a" id="205" ids="1" invs="235" ippo="205" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="a" id="918" ids="23" invs="101" ippo="918" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;last_time_critical) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1452" invs="435" ippo="1452" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="429" ippo="429">
     <d>
      <invs>
       <arg a="1" i="318,697,1514"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1487" invs="464" ippo="1487" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="437" ippo="437" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="579" ippo="579" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="1121" invs="393" ippo="1121" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1464" ippo="1464" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="54" ippo="54" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="1107" invs="133" ippo="1107" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="140" ippo="140">
     <d>
      <invs>
       <arg a="1" i="390,720,1529"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="581" ippo="581" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="628" ippo="628" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="449" invs="1502" ippo="449" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="720" ippo="720" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="995" ippo="995" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="f" id="1028" invs="873" ippo="1028" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1601(rv:malloc)"/>
    </ppo>
    <ppo id="1556" ippo="1556">
     <d>
      <invs>
       <arg a="1" i="585"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="953" ippo="953" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="954" ippo="954" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="131" ippo="131" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="231" ippo="231" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="68" ippo="68" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1393" ippo="1393" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="1360" invs="137" ippo="1360" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="85" ippo="85" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="808" ippo="808" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1247" ippo="1247" s="g">
     <e txt="add non-negative number:  value is 9"/>
    </ppo>
    <ppo deps="s" id="1194" ippo="1194" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1270" ippo="1270" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="105" ippo="105" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="519" ippo="519" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="871" ippo="871" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1535" ippo="1535" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1297" ippo="1297" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1519" ippo="1519" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="f" id="247" invs="121" ippo="247" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="377" ippo="377" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="650" ippo="650">
     <d>
      <invs>
       <arg a="1" i="896"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1319" ippo="1319" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="880" ippo="880" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1025" ippo="1025" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="357" ippo="357" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="764" ippo="764">
     <d>
      <invs>
       <arg a="1" i="529,764,1010,1319"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="297" invs="461" ippo="297" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="812" ippo="812" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1510" invs="326" ippo="1510" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="615" ippo="615" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1524" ippo="1524" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="555" ippo="555">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="786" ippo="786" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1120" invs="953" ippo="1120" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1583(rv:malloc)"/>
    </ppo>
    <ppo id="569" ippo="569">
     <d>
      <invs>
       <arg a="1" i="274,610,680,892,1158"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:process_macros @-1 r:38"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="999" ippo="999" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1454" invs="1069" ippo="1454" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [HARD,SOFT]"/>
    </ppo>
    <ppo deps="s" id="944" ippo="944" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="962" ippo="962" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="349" invs="366" ippo="349" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="434" invs="318" ippo="434" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="710" invs="803" ippo="710" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1669"/>
    </ppo>
    <ppo deps="s" id="1027" ippo="1027" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="199" ippo="199" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="264" invs="421" ippo="264" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1419" ippo="1419" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="328" ippo="328" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="792" ippo="792">
     <d>
      <invs>
       <arg a="4" i="548"/>
       <arg a="3" i="1027,1330"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1063" invs="1202" ippo="1063" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1601]"/>
    </ppo>
    <ppo deps="s" id="754" ippo="754" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="1020" ippo="1020">
     <d>
      <invs>
       <arg a="4" i="173"/>
       <arg a="3" i="845,1090"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1427" ippo="1427">
     <d>
      <invs>
       <arg a="4" i="483"/>
       <arg a="3" i="986,1291"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="353" invs="976" ippo="353" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1654(rv:strcmp)"/>
    </ppo>
    <ppo id="499" ippo="499"/>
    <ppo deps="s" id="1314" ippo="1314" s="g">
     <e txt="upperbound of constant string argument: %d"/>
    </ppo>
    <ppo deps="s" id="187" ippo="187" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="381" invs="1504" ippo="381" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="587" invs="1297" ippo="587" s="g" ts="2018-01-09 15:49:58">
     <e txt="all regions pointed at are heap-allocated: [heap-allocated-region created by strdup at line 1706,heap-allocated-region created by strdup at line 1714]"/>
    </ppo>
    <ppo deps="s" id="1378" ippo="1378" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="511" ippo="511"/>
    <ppo deps="s" id="389" ippo="389" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1130" ippo="1130" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="157" ippo="157">
     <d>
      <invs>
       <arg a="1" i="417,733,1536"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="289" ippo="289" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1414" ippo="1414" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="490" ippo="490" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1555" ippo="1555">
     <d>
      <invs>
       <arg a="3" i="585"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="730" ippo="730" s="g">
     <e txt="upperbound of constant string argument: %dd %dh %dm %ds"/>
    </ppo>
    <ppo id="1044" ippo="1044">
     <d>
      <invs>
       <arg a="4" i="248"/>
       <arg a="3" i="889,1147"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1300" ippo="1300" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="1213" invs="704" ippo="1213" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 10"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(10)#return (10)"/>
    </ppo>
    <ppo deps="s" id="1223" ippo="1223" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="982" invs="959" ippo="982" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1610(rv:malloc)"/>
    </ppo>
    <ppo deps="f" id="1563" invs="383" ippo="1563" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="241" ippo="241" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="330" invs="1485" ippo="330" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="1302" invs="272" ippo="1302" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="169" ippo="169" s="g">
     <e txt="upperbound of constant string argument: SERVICEEXECUTIONTIME"/>
    </ppo>
    <ppo id="480" ippo="480">
     <d>
      <invs>
       <arg a="1" i="209,655,1489"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="317" ippo="317" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="22" ids="5" invs="298" ippo="22" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="215" ippo="215" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="286" ippo="286" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="355" ippo="355" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="813" ippo="813" s="g">
     <e txt="upperbound of constant string argument: %.2f"/>
    </ppo>
    <ppo deps="s" id="1049" ippo="1049" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1114" ippo="1114" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="a" id="458" ids="5" invs="410" ippo="458" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1041" ippo="1041" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="1003" ippo="1003" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="65" ippo="65" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="280" invs="266" ippo="280" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="600" ippo="600" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="1144" ippo="1144" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="44" ippo="44">
     <d>
      <invs>
       <arg a="1" i="1023"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="837" ippo="837">
     <d>
      <invs>
       <arg a="4" i="294"/>
       <arg a="3" i="903,1171"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1281" ippo="1281" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="120" ids="1" invs="354" ippo="120" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo id="816" ippo="816">
     <d>
      <invs>
       <arg a="4" i="449"/>
       <arg a="3" i="973,1274"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="845" invs="918" ippo="845" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1637(rv:malloc)"/>
    </ppo>
    <ppo id="906" ippo="906">
     <d>
      <invs>
       <arg a="4" i="441"/>
       <arg a="3" i="970,1269"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1089" invs="1057" ippo="1089" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1592]"/>
    </ppo>
    <ppo deps="s" id="539" ippo="539" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="64" invs="1020" ippo="64" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1497(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="1479" ippo="1479" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="292" ippo="292" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="593" invs="386" ippo="593" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_278"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable temp_buffer is not null"/>
    </ppo>
    <ppo id="276" ippo="276">
     <d>
      <invs>
       <arg a="1" i="266,675,1506"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="986" ippo="986">
     <d>
      <invs>
       <arg a="1" i="401,726,960,1243"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="841" ippo="841" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="1355" ids="4" invs="101" ippo="1355" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo deps="s" id="885" ippo="885" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1140" ippo="1140" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo id="1494" ippo="1494">
     <d>
      <invs>
       <arg a="3" i="916,1187"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="540" ippo="540" s="g">
     <e txt="upperbound of constant string argument: SERVICENOTESURL"/>
    </ppo>
    <ppo deps="s" id="853" ippo="853" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1369" ippo="1369" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="1528" invs="1560" ippo="1528" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="1038" ippo="1038" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1163" ippo="1163" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="1543" invs="145" ippo="1543" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="387" invs="881" ippo="387" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1679(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="1274" ippo="1274" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="1290" invs="1174" ippo="1290" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1556]"/>
    </ppo>
    <ppo deps="f" id="398" invs="1562" ippo="398" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="878" ippo="878" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="1382" invs="528" ippo="1382" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="498" ippo="498"/>
    <ppo deps="s" id="583" ippo="583" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="1367" ippo="1367">
     <d>
      <invs>
       <arg a="4" i="148"/>
       <arg a="3" i="833,1072"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="721" ippo="721">
     <d>
      <invs>
       <arg a="3" i="801"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="637" ippo="637"/>
    <ppo id="1489" ippo="1489">
     <d>
      <invs>
       <arg a="1" i="917,1188"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="577" ippo="577" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="868" ippo="868" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="371" ippo="371" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="939" invs="1283" ippo="939" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_13"/>
    </ppo>
    <ppo deps="s" id="1118" ippo="1118" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="a" id="52" ids="1" invs="481" ippo="52" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="f" id="491" invs="965" ippo="491" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1697(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="785" ippo="785" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1408" ippo="1408" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="333" ippo="333" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="703" ippo="703"/>
    <ppo deps="s" id="1178" ippo="1178" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="250" ippo="250" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="626" ippo="626"/>
    <ppo deps="f" id="30" invs="981" ippo="30" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1491(globalservicegroup_list9061)_xx_assignedAt#1491(fieldnext159)"/>
    </ppo>
    <ppo deps="s" id="1093" ippo="1093" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1433" ippo="1433" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1441" invs="761" ippo="1441" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 24"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(24)#return (24)"/>
    </ppo>
    <ppo id="206" ippo="206">
     <d>
      <invs>
       <arg a="1" i="235,664,1498"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="446" ippo="446">
     <d>
      <invs>
       <arg a="1" i="258,671,1502"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="783" ippo="783" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="937" invs="470" ippo="937" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1098" ippo="1098" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="1240" ids="5" invs="308" ippo="1240" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1284" ippo="1284" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="277" ippo="277" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="89" ippo="89">
     <d>
      <invs>
       <arg a="1" i="430,739,1542"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="695" ippo="695" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="291" ippo="291">
     <d>
      <invs>
       <arg a="1" i="461,746,1551"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1061" invs="254" ippo="1061" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="79" ippo="79" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="217" invs="975" ippo="217" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1582(rv:strcmp)"/>
    </ppo>
    <ppo deps="f" id="470" invs="410" ippo="470" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="833" ippo="833" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="866" ippo="866" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1548" ippo="1548" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="573" ippo="573"/>
    <ppo deps="f" id="666" invs="951" ippo="666" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1491(globalservicegroup_list9061)_xx_assignedAt#1491(fieldnext159)"/>
    </ppo>
    <ppo id="715" ippo="715"/>
    <ppo deps="s" id="1322" ippo="1322" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="699" ippo="699" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1416" ippo="1416" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="590" ippo="590" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo id="665" ippo="665"/>
    <ppo deps="s" id="1547" ippo="1547" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="476" ippo="476" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="303" ippo="303" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="712" ippo="712" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1065" ippo="1065" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="f" id="81" invs="819" ippo="81" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1507(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="356" ippo="356" s="g">
     <e txt="upperbound of constant string argument: SERVICEDURATION"/>
    </ppo>
    <ppo id="672" ippo="672"/>
    <ppo deps="a" id="273" ids="1" invs="266" ippo="273" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo id="70" ippo="70">
     <d>
      <invs>
       <arg a="1" i="519,759,1564"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1029" invs="217" ippo="1029" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="898" ippo="898" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="134" ippo="134" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="509" ippo="509"/>
    <ppo deps="f" id="24" invs="298" ippo="24" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1087" ippo="1087" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="1374" ippo="1374" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="167" ippo="167" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="407" ippo="407" s="g">
     <e txt="upperbound of constant string argument: SERVICEACTIONURL"/>
    </ppo>
    <ppo deps="s" id="798" ippo="798" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1172" ippo="1172" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="415" invs="1531" ippo="415" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="507" invs="186" ippo="507" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="245" invs="1465" ippo="245" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="750" ippo="750" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="830" invs="1549" ippo="830" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="a" id="917" ids="24" invs="591" ippo="917" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_critical: unsigned long) delegated to api"/>
    </ppo>
    <ppo id="1272" ippo="1272">
     <d>
      <invs>
       <arg a="4" i="220"/>
       <arg a="3" i="876,1130"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="57" ippo="57" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="156" ippo="156" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="975" ippo="975" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="669" ippo="669">
     <d>
      <invs>
       <arg a="2" i="951"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1326" ippo="1326" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="941" ippo="941" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1001" ippo="1001" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="420" ippo="420" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1418" ippo="1418" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="344" ippo="344">
     <d>
      <invs>
       <arg a="1" i="366,712,1522"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="552" ippo="552" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="518" ippo="518" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1500" ippo="1500" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="517" ippo="517" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1361" ippo="1361" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1501" invs="915" ippo="1501" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1520"/>
    </ppo>
    <ppo deps="f" id="971" invs="1244" ippo="971" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1619]"/>
    </ppo>
    <ppo deps="s" id="457" ippo="457" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="725" ippo="725" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="997" invs="1163" ippo="997" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1610]"/>
    </ppo>
    <ppo deps="s" id="1146" ippo="1146" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="331" invs="190" ippo="331" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="965" ippo="965" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="693" ippo="693">
     <d>
      <invs>
       <arg a="3" i="539"/>
       <arg a="2" i="1018"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1384" ippo="1384" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="388" ippo="388" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="887" ippo="887" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="40" invs="379" ippo="40" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="599" ippo="599" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="67" ippo="67" s="g">
     <e txt="upperbound of constant string argument: SERVICEPERFDATA"/>
    </ppo>
    <ppo deps="s" id="1099" ippo="1099" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="110" invs="270" ippo="110" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="779" ippo="779" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="994" ippo="994" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="314" invs="160" ippo="314" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="931" ippo="931" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="1012" ids="5" invs="282" ippo="1012" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo id="155" ippo="155">
     <d>
      <invs>
       <arg a="1" i="417,733,1536"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="483" ippo="483" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1030" invs="659" ippo="1030" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="f" id="530" invs="213" ippo="530" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_278"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable temp_buffer is not null"/>
    </ppo>
    <ppo deps="s" id="1307" ippo="1307" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="342" ippo="342">
     <d>
      <invs>
       <arg a="1" i="366,712,1522"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="675" ippo="675" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1071" ippo="1071" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo id="1522" ippo="1522">
     <d>
      <invs>
       <arg a="3" i="596"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1022" ippo="1022" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1019" ippo="1019" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="s" id="1202" ippo="1202" s="g">
     <e txt="add non-negative number:  value is 9"/>
    </ppo>
    <ppo deps="s" id="1444" ippo="1444" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="a" id="256" ids="1" invs="421" ippo="256" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="374" ippo="374" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="495" invs="1041" ippo="495" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo deps="f" id="505" invs="646" ippo="505" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="801" invs="535" ippo="801" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1280" ippo="1280" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="74" ippo="74" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo id="123" ippo="123">
     <d>
      <invs>
       <arg a="1" i="354,710,1520"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1088" ippo="1088" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="a" id="1357" ids="5" invs="137" ippo="1357" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1472" ippo="1472" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="724" ippo="724" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="234" invs="945" ippo="234" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1591(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="713" ippo="713" s="g">
     <e txt="value is 60"/>
    </ppo>
    <ppo id="293" ippo="293">
     <d>
      <invs>
       <arg a="1" i="461,746,1551"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1015" invs="282" ippo="1015" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1158" ippo="1158">
     <d>
      <invs>
       <arg a="4" i="543"/>
       <arg a="3" i="1024,1326"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1308" ippo="1308" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1383" ippo="1383" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="240" ippo="240">
     <d>
      <invs>
       <arg a="1" i="121,621,1465"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="380" ippo="380" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="f" id="1256" invs="879" ippo="1256" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1556(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="218" ippo="218" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="802" invs="768" ippo="802" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 8"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(8)#return (8)"/>
    </ppo>
    <ppo deps="s" id="1294" ippo="1294" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="723" ippo="723" s="g">
     <e txt="%dd %dh %dm %ds is a string literal"/>
    </ppo>
    <ppo deps="f" id="1181" invs="1208" ippo="1181" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1574]"/>
    </ppo>
    <ppo deps="s" id="163" ippo="163" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="230" invs="375" ippo="230" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1155" invs="1326" ippo="1155" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1583]"/>
    </ppo>
    <ppo deps="s" id="114" ippo="114" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1217" ippo="1217" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1391" ippo="1391" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="368" ippo="368" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="252" ippo="252" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1356" ippo="1356" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1428" ippo="1428" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="547" ippo="547" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="782" ippo="782" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo deps="f" id="1060" invs="254" ippo="1060" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1180" ippo="1180" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1372" ippo="1372" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1373" ippo="1373" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="1558" ids="6" invs="101" ippo="1558" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;plugin_output) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1413" ippo="1413" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="660" ippo="660"/>
    <ppo deps="s" id="538" ippo="538" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="636" ippo="636"/>
    <ppo deps="s" id="1145" ippo="1145" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="533" ippo="533">
     <d>
      <invs>
       <arg a="1" i="213"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="631" invs="647" ippo="631" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo id="1293" ippo="1293">
     <d>
      <invs>
       <arg a="4" i="299"/>
       <arg a="3" i="904,1174"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1461" ippo="1461" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="324" ids="1" invs="190" ippo="324" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="736" ippo="736" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="447" ippo="447" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="677" invs="531" ippo="677" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="66" ippo="66" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="363" ippo="363" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1456" ippo="1456" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="340" ippo="340" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="745" invs="1000" ippo="745" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1668"/>
    </ppo>
    <ppo deps="s" id="811" ippo="811" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1080" ippo="1080" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="f" id="1486" invs="464" ippo="1486" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1493" invs="1187" ippo="1493" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1518]"/>
    </ppo>
    <ppo deps="s" id="1471" ippo="1471" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="f" id="678" invs="766" ippo="678" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 17"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(17)#return (17)"/>
    </ppo>
    <ppo deps="s" id="795" ippo="795" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="865" ippo="865" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1345" ippo="1345" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1207" ippo="1207" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="1328" ids="4" invs="101" ippo="1328" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo deps="s" id="464" ippo="464" s="g">
     <e txt="field host_name (162) is assigned a value with a valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="589" ippo="589" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="737" ippo="737" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="949" ippo="949" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo id="18" ippo="18"/>
    <ppo deps="s" id="1425" ippo="1425" s="g">
     <e txt="one of the arguments is a string literal: UNKNOWN"/>
    </ppo>
    <ppo deps="s" id="301" ippo="301" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="905" invs="1269" ippo="905" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1628]"/>
    </ppo>
    <ppo deps="s" id="452" ippo="452" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1122" invs="722" ippo="1122" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="f" id="1169" invs="1325" ippo="1169" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_18"/>
    </ppo>
    <ppo id="532" ippo="532">
     <d>
      <invs>
       <arg a="3" i="213"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="537" ippo="537" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="1254" ippo="1254" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="726" ippo="726" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="258" ippo="258" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="897" ippo="897" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1249" ippo="1249" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1351" ippo="1351" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="189" ippo="189">
     <d>
      <invs>
       <arg a="1" i="426,737,1540"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="694" ippo="694">
     <d>
      <invs>
       <arg a="3" i="539"/>
       <arg a="2" i="1018"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="942" ippo="942" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1208" ippo="1208" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1079" ippo="1079" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="508" invs="186" ippo="508" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-41_807_)#init,(memref-42_809_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="544" ippo="544" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="477" ippo="477" s="g">
     <e txt="upperbound of constant string argument: SERVICEACTIONURL"/>
    </ppo>
    <ppo deps="f" id="1031" invs="1126" ippo="1031" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_15"/>
    </ppo>
    <ppo deps="s" id="1234" ippo="1234" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1549" ippo="1549" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="478" ippo="478" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1318" ippo="1318" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="743" ippo="743" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="879" invs="1114" ippo="879" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1637]"/>
    </ppo>
    <ppo deps="s" id="929" ippo="929" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="275" ippo="275" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="1179" ippo="1179" s="g">
     <e txt="upperbound of constant string argument: %.3f"/>
    </ppo>
    <ppo deps="s" id="428" ippo="428" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="1278" ippo="1278" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1298" ippo="1298" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="528" ippo="528" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="768" ippo="768" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="818" ippo="818" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="1023" ippo="1023" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="216" ippo="216" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="414" ippo="414" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="682" ippo="682" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="168" ippo="168" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="520" ippo="520" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="1032" ippo="1032">
     <d>
      <invs>
       <arg a="1" i="217,659,874,1126"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="489" ippo="489" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1538" ippo="1538" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="a" id="1101" ids="25" invs="564" ippo="1101" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_state_change: unsigned long) delegated to api"/>
    </ppo>
    <ppo id="1182" ippo="1182">
     <d>
      <invs>
       <arg a="4" i="334"/>
       <arg a="3" i="932,1208"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="426" ids="1" invs="318" ippo="426" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="431" ippo="431" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="475" ippo="475" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="831" invs="454" ippo="831" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1436" ippo="1436" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1488" invs="1188" ippo="1488" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [ACTIVE,PASSIVE]"/>
    </ppo>
    <ppo deps="s" id="731" ippo="731" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="1167" invs="541" ippo="1167" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="504" invs="854" ippo="504" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1694(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="1084" ippo="1084" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1129" ippo="1129" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="1446" ippo="1446" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1133" ippo="1133" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="1267" ippo="1267" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="882" ippo="882">
     <d>
      <invs>
       <arg a="4" i="203"/>
       <arg a="3" i="866,1114"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1191" ippo="1191" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="860" invs="1212" ippo="860" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1637]"/>
    </ppo>
    <ppo deps="s" id="1051" ippo="1051" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1467" invs="829" ippo="1467" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1527"/>
    </ppo>
    <ppo deps="s" id="656" ippo="656" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="947" ippo="947" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1252" ippo="1252" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="343" ippo="343" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="608" ippo="608">
     <d>
      <invs>
       <arg a="1" i="491,754,1295"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1073" ippo="1073" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo id="1469" ippo="1469">
     <d>
      <invs>
       <arg a="2" i="831,1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="448" ippo="448" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="541" ippo="541" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="1212" invs="330" ippo="1212" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="506" invs="1101" ippo="506" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo deps="s" id="602" ippo="602" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="996" ippo="996" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1228" ippo="1228" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="36" ippo="36">
     <d>
      <invs>
       <arg a="2" i="1461,948"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="213" invs="235" ippo="213" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="684" ippo="684" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1449" ippo="1449" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="1475" invs="701" ippo="1475" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 8"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(8)#return (8)"/>
    </ppo>
    <ppo deps="s" id="181" ippo="181" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="876" invs="350" ippo="876" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1216" ippo="1216" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="402" ippo="402" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="26" ippo="26">
     <d>
      <invs>
       <arg a="3" i="578"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (memref-96_917_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="1002" ippo="1002" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1354" ippo="1354" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="861" ippo="861">
     <d>
      <invs>
       <arg a="4" i="345"/>
       <arg a="3" i="936,1212"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1033" ippo="1033" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="296" invs="1551" ippo="296" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="435" ippo="435" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1387" ippo="1387" s="g">
     <e txt="one of the arguments is a string literal: WARNING"/>
    </ppo>
    <ppo id="225" ippo="225">
     <d>
      <invs>
       <arg a="1" i="375,714,1524"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="875" invs="1518" ippo="875" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="135" ippo="135" s="g">
     <e txt="upperbound of constant string argument: SERVICESTATEID"/>
    </ppo>
    <ppo deps="s" id="850" ippo="850" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="955" ippo="955" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="a" id="1379" ids="5" invs="528" ippo="1379" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1385" ippo="1385" s="g">
     <e txt="upperbound of constant string argument: WARNING"/>
    </ppo>
    <ppo deps="s" id="881" ippo="881" s="g">
     <e txt="add non-negative number:  value is 2"/>
    </ppo>
    <ppo id="1260" ippo="1260">
     <d>
      <invs>
       <arg a="1" i="229,662,880,1134"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1437" ippo="1437" s="g">
     <e txt="constant value 24 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="125" ippo="125" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="515" ippo="515" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="676" invs="1011" ippo="676" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1664(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="973" ippo="973" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="s" id="1042" ippo="1042" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1095" ippo="1095" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="a" id="542" ids="1" invs="552" ippo="542" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1514" ippo="1514" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="227" ippo="227" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="454" ippo="454" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1266" ippo="1266" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1394" ippo="1394" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="606" ippo="606">
     <d>
      <invs>
       <arg a="1" i="491,754,1295"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="935" ippo="935" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1219" ippo="1219" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1402" invs="1553" ippo="1402" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="269" ippo="269" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1156" ippo="1156" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="117" ippo="117" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="208" ippo="208">
     <d>
      <invs>
       <arg a="1" i="235,664,1498"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1092" ippo="1092" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="525" ippo="525" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="546" ippo="546" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="150" ippo="150" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="912" ippo="912" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="244" ippo="244" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="607" ippo="607" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="161" invs="417" ippo="161" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="405" ippo="405" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1447" ippo="1447" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="137" ids="1" invs="390" ippo="137" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1530" invs="498" ippo="1530" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="243" ippo="243" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="194" invs="1540" ippo="194" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="f" id="319" invs="856" ippo="319" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1636(rv:strcmp)"/>
    </ppo>
    <ppo id="87" ippo="87">
     <d>
      <invs>
       <arg a="1" i="430,739,1542"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="683" ippo="683" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="751" ippo="751" s="g">
     <e txt="add non-negative number:  value is 16"/>
    </ppo>
    <ppo deps="f" id="815" invs="1274" ippo="815" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1646]"/>
    </ppo>
    <ppo deps="f" id="1109" invs="1284" ippo="1109" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1592]"/>
    </ppo>
    <ppo deps="f" id="1243" invs="308" ippo="1243" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="84" ippo="84" s="g">
     <e txt="upperbound of constant string argument: SERVICECHECKTYPE"/>
    </ppo>
    <ppo deps="f" id="183" invs="824" ippo="183" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1564(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="1086" ippo="1086" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1246" ippo="1246" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1336" ippo="1336" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo id="274" ippo="274">
     <d>
      <invs>
       <arg a="1" i="266,675,1506"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="418" ippo="418" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1165" ippo="1165" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="281" invs="266" ippo="281" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="705" ippo="705">
     <d>
      <invs>
       <arg a="3" i="368"/>
       <arg a="2" i="943"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="413" ippo="413" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="708" ippo="708" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="805" ippo="805" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="788" ippo="788" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="700" ippo="700" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="890" invs="841" ippo="890" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1628(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="148" ippo="148" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1096" ippo="1096" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1250" ippo="1250" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="1473" invs="922" ippo="1473" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1518(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="884" ippo="884" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1220" ippo="1220" s="g">
     <e txt="%.3f is a string literal"/>
    </ppo>
    <ppo deps="s" id="1050" ippo="1050" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="423" ippo="423" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1188" ippo="1188" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="424" ippo="424" s="g">
     <e txt="upperbound of constant string argument: SERVICENOTESURL"/>
    </ppo>
    <ppo deps="s" id="1507" ippo="1507" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1006" ippo="1006" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1304" invs="1157" ippo="1304" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_21"/>
    </ppo>
    <ppo deps="s" id="394" ippo="394" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="a" id="1193" ids="26" invs="101" ippo="1193" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;latency) delegated to api"/>
    </ppo>
    <ppo deps="s" id="119" ippo="119" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="338" ippo="338" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1346" invs="956" ippo="1346" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1532(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="233" ippo="233" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1440" invs="521" ippo="1440" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="924" ippo="924" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="309" ippo="309" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="571" invs="274" ippo="571" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-41_807_)#init,(memref-42_809_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="763" invs="1319" ippo="763" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_9"/>
    </ppo>
    <ppo id="361" ippo="361">
     <d>
      <invs>
       <arg a="1" i="117,619,1463"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="633" invs="187" ippo="633" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="661" ippo="661"/>
    <ppo deps="s" id="136" ippo="136" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1204" ippo="1204" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="1331" invs="1477" ippo="1331" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo deps="s" id="819" ippo="819" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1495" ippo="1495" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="1147" ids="27" invs="571" ippo="1147" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_check: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1404" invs="469" ippo="1404" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="1525" ids="7" invs="101" ippo="1525" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;perf_data) delegated to api"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="501" ippo="501"/>
    <ppo id="174" ippo="174">
     <d>
      <invs>
       <arg a="1" i="413,731,1534"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="367" ippo="367" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="179" invs="413" ippo="179" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="886" ippo="886" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1176" ippo="1176" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="329" ippo="329" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="350" ippo="350" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="692" invs="1018" ippo="692" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1666"/>
    </ppo>
    <ppo deps="f" id="1214" invs="1201" ippo="1214" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_19"/>
    </ppo>
    <ppo deps="s" id="1480" ippo="1480" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="352" ippo="352" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="129" ippo="129" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="397" ippo="397" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="a" id="358" ids="1" invs="117" ippo="358" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="130" ippo="130" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="25" invs="298" ippo="25" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="910" ippo="910" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="369" ippo="369" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="200" invs="949" ippo="200" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1573(rv:strcmp)"/>
    </ppo>
    <ppo id="632" ippo="632">
     <d>
      <invs>
       <arg a="1" i="187,1339,647,855,1102"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:process_macros @-1 r:38"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="925" invs="1315" ippo="925" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1628]"/>
    </ppo>
    <ppo deps="s" id="436" ippo="436" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1279" ippo="1279" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="869" ippo="869" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1458" ippo="1458"/>
    <ppo deps="f" id="760" invs="1009" ippo="760" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1655(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="978" ippo="978" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="133" ippo="133" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="864" ippo="864" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="796" ippo="796" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="825" ippo="825" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="618" ippo="618">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1259" invs="1134" ippo="1259" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_20"/>
    </ppo>
    <ppo deps="f" id="1287" invs="225" ippo="1287" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="704" invs="943" ippo="704" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1668"/>
    </ppo>
    <ppo deps="f" id="951" invs="1168" ippo="951" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1619]"/>
    </ppo>
    <ppo deps="s" id="991" ippo="991" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="164" ippo="164" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="341" ids="1" invs="366" ippo="341" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo id="718" ippo="718">
     <d>
      <invs>
       <arg a="3" i="329"/>
       <arg a="2" i="925"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="upperbound of constant string argument: SERVICESTATETYPE"/>
    </ppo>
    <ppo deps="a" id="69" ids="1" invs="519" ippo="69" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1251" ippo="1251" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="674" ippo="674" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="203" ippo="203" s="g">
     <e txt="upperbound of constant string argument: LASTSERVICECHECK"/>
    </ppo>
    <ppo deps="s" id="96" ippo="96" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="396" ippo="396" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="870" ippo="870" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="848" invs="1190" ippo="848" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_11"/>
    </ppo>
    <ppo deps="f" id="1301" invs="890" ippo="1301" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1547(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="1368" ippo="1368" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1045" ippo="1045" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="118" ippo="118" s="g">
     <e txt="upperbound of constant string argument: SERVICESTATE"/>
    </ppo>
    <ppo deps="s" id="236" ippo="236" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="411" ippo="411" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="572" ippo="572"/>
    <ppo deps="s" id="646" ippo="646" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="952" ippo="952">
     <d>
      <invs>
       <arg a="4" i="286"/>
       <arg a="3" i="900,1168"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1036" ippo="1036" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="190" ippo="190" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="1008" ippo="1008" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1327" ippo="1327" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="76" invs="519" ippo="76" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1321" ippo="1321" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="858" ippo="858" s="g">
     <e txt="upperbound of constant string argument: %d"/>
    </ppo>
    <ppo deps="s" id="1537" ippo="1537" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="663" ippo="663"/>
    <ppo deps="f" id="847" invs="695" ippo="847" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 3"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(3)#return (3)"/>
    </ppo>
    <ppo deps="s" id="1324" ippo="1324" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1398" ippo="1398" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="299" ippo="299" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1040" ippo="1040" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="98" invs="1014" ippo="98" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1517(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="214" ippo="214" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="630" invs="855" ippo="630" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1694(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="711" ippo="711" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="769" ippo="769" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="1515" ippo="1515" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="450" invs="258" ippo="450" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="13" ippo="13" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="734" ippo="734" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="51" ippo="51" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="107" ippo="107" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="1401" ids="5" invs="469" ippo="1401" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo id="1531" ippo="1531">
     <d>
      <invs>
       <arg a="1" i="596"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="473" ippo="473" s="g">
     <e txt="field description (162) is assigned a value with a valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1253" ippo="1253" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="612" invs="491" ippo="612" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="836" ippo="836" s="g">
     <e txt="add non-negative number:  value is 7"/>
    </ppo>
    <ppo deps="a" id="1104" ids="5" invs="133" ippo="1104" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo id="611" ippo="611">
     <d>
      <invs>
       <arg a="1" i="491,754,1295"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:find_serviceextinfo @-1 r:1,freed(by:is_service_member_of_servicegroup @-1 r:1,freed(by:process_macros @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="904" ippo="904" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="648" invs="896" ippo="648" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1491(globalservicegroup_list9061)_xx_assignedAt#1491(fieldnext159)"/>
    </ppo>
    <ppo deps="f" id="1245" invs="1221" ippo="1245" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1565]"/>
    </ppo>
    <ppo deps="s" id="90" ippo="90" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="601" ippo="601" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="822" ippo="822" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="598" ippo="598" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="1137" ippo="1137" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1231" ippo="1231" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1409" ippo="1409" s="g">
     <e txt="one of the arguments is a string literal: CRITICAL"/>
    </ppo>
    <ppo deps="f" id="132" invs="989" ippo="132" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1531(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="193" ippo="193" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="527" ippo="527" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="659" ippo="659" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="960" ippo="960" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="992" ippo="992" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1149" ippo="1149" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1083" ippo="1083" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo id="670" ippo="670">
     <d>
      <invs>
       <arg a="2" i="951"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="915" ippo="915" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="383" invs="262" ippo="383" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter macro satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1221" ippo="1221" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="410" ippo="410">
     <d>
      <invs>
       <arg a="1" i="407,728,1531"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="467" ids="5" invs="410" ippo="467" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="679" invs="1321" ippo="679" s="g" ts="2018-01-09 15:49:58">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_8"/>
    </ppo>
    <ppo deps="f" id="549" invs="552" ippo="549" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1017" invs="1090" ippo="1017" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1610]"/>
    </ppo>
    <ppo deps="a" id="154" ids="1" invs="417" ippo="154" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1162" ippo="1162" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="406" ippo="406" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="61" ippo="61" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="472" ippo="472" s="g">
     <e txt="field description (162) is assigned a value with a valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="595" ippo="595">
     <d>
      <invs>
       <arg a="3" i="386"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="770" ippo="770" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1498" ippo="1498" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="1000" ippo="1000" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo deps="s" id="113" ippo="113" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="471" ippo="471">
     <d>
      <invs>
       <arg a="1" i="588,1568"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="531" ippo="531">
     <d>
      <invs>
       <arg a="1" i="213"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_278"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="1141" ippo="1141" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="1170" ippo="1170">
     <d>
      <invs>
       <arg a="1" i="541,770,1022,1325"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1420" ippo="1420" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="709" ippo="709"/>
    <ppo deps="s" id="1329" ippo="1329" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="112" ippo="112" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="267" ippo="267" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="494" invs="617" ippo="494" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="f" id="1166" invs="1021" ippo="1166" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1574(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="462" ippo="462">
     <d>
      <invs>
       <arg a="1" i="587,1569"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="524" invs="1260" ippo="524" s="g" ts="2018-01-09 15:49:58">
     <e txt="all regions pointed at are heap-allocated: [heap-allocated-region created by strdup at line 1700]"/>
    </ppo>
    <ppo id="1492" ippo="1492"/>
    <ppo deps="s" id="972" ippo="972" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="455" invs="994" ippo="455" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1691(rv:strcmp)"/>
    </ppo>
    <ppo deps="f" id="775" invs="1095" ippo="775" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1655]"/>
    </ppo>
    <ppo deps="f" id="1410" invs="1280" ippo="1410" s="g" ts="2018-01-09 15:49:58">
     <e txt="all targets are non-null: [heap-allocated-region created by malloc at line 1532]"/>
    </ppo>
    <ppo id="191" ippo="191">
     <d>
      <invs>
       <arg a="1" i="426,737,1540"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="311" ippo="311" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="722" invs="801" ippo="722" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1671"/>
    </ppo>
    <ppo deps="a" id="1102" ids="16" invs="101" ippo="1102" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;last_state_change) delegated to api"/>
    </ppo>
    <ppo id="47" ippo="47">
     <d>
      <invs>
       <arg a="2" i="1023"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="961" ippo="961" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1105" invs="1472" ippo="1105" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:3"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_4_)#init"/>
    </ppo>
    <ppo id="1078" ippo="1078">
     <d>
      <invs>
       <arg a="1" i="377,716,947,1226"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="91" ippo="91" s="g">
     <e txt="macro is a function parameter"/>
    </ppo>
    <ppo deps="s" id="97" ippo="97" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="739" ippo="739" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo id="510" ippo="510"/>
    <ppo id="594" ippo="594">
     <d>
      <invs>
       <arg a="1" i="386"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_278"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="37" ippo="37" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="652" ippo="652">
     <d>
      <invs>
       <arg a="2" i="896"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="872" ids="28" invs="101" ippo="872" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition initialized(svc-&gt;scheduled_downtime_depth) delegated to api"/>
    </ppo>
    <ppo deps="s" id="248" ippo="248" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="327" ippo="327">
     <d>
      <invs>
       <arg a="1" i="190,649,1485"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="41" invs="991" ippo="41" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1492(rv:is_service_member_of_servicegroup)"/>
    </ppo>
    <ppo deps="s" id="1103" ippo="1103" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="1348" invs="724" ippo="1348" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 32"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(32)#return (32)"/>
    </ppo>
    <ppo deps="f" id="486" invs="209" ippo="486" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="643" ippo="643"/>
    <ppo deps="s" id="895" ippo="895" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="957" ippo="957" s="g">
     <e txt="global variable macro_ondemand is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="232" ippo="232" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="927" ippo="927" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="s" id="1210" ippo="1210" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="115" invs="860" ippo="115" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1524(rv:strcmp)"/>
    </ppo>
    <ppo deps="f" id="714" invs="924" ippo="714" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1669"/>
    </ppo>
    <ppo deps="s" id="771" ippo="771" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="936" invs="979" ippo="936" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1619(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="287" ippo="287" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="469" invs="410" ippo="469" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="891" invs="170" ippo="891" s="g" ts="2018-01-09 15:49:58">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="177" invs="1534" ippo="177" s="g" ts="2018-01-09 16:55:48">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(macro_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1353" ippo="1353" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="83" ippo="83" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="263" invs="421" ippo="263" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter macro satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="336" invs="988" ippo="336" s="g" ts="2018-01-09 15:49:58">
     <e txt="assignedAt#1645(rv:strcmp)"/>
    </ppo>
    <ppo deps="s" id="238" ippo="238" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="621" ippo="621">
     <d>
      <invs>
       <arg a="1" i="185,1338,645,853,1100"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:process_macros @-1 r:38"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="1540" ippo="1540" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1067" ippo="1067" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="1359" invs="137" ippo="1359" s="g" ts="2018-01-09 15:49:58">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="86" ids="1" invs="430" ippo="86" s="g" ts="2018-01-09 15:49:58">
     <e txt="condition not-null(macro) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1566" invs="585" ippo="1566" s="g" ts="2018-01-09 15:49:58">
     <e txt="upper-bound value is initial value of parameter memref-85 satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="620" invs="645" ippo="620" s="g" ts="2018-01-09 15:49:58">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="1569" ippo="1569" s="g">
     <e txt="global variable macro_ondemand valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
