<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:28:53">
   <application file="base/utils.c"/>
  </header>
  <function fname="sighandler">
   <ppos>
    <ppo deps="s" id="22" ippo="22" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="45" ippo="45"/>
    <ppo deps="s" id="54" ippo="54" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="18" ippo="18"/>
    <ppo deps="s" id="19" ippo="19" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="adding the size of a variable to the start of the same variable buffer"/>
    </ppo>
    <ppo deps="f" id="17" invs="44" ippo="17" s="g" ts="2018-01-09 15:49:32">
     <e txt="assignedAt#3401"/>
    </ppo>
    <ppo deps="s" id="50" ippo="50" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="sigshutdown is global"/>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="53" ippo="53" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="23" ippo="23"/>
    <ppo id="25" ippo="25"/>
    <ppo deps="s" id="40" ippo="40" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="47" ippo="47"/>
    <ppo deps="s" id="44" ippo="44" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo deps="s" id="49" ippo="49" s="g">
     <e txt="index value 1023 is less than bound 1024"/>
    </ppo>
    <ppo deps="s" id="52" ippo="52" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="55" ippo="55" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo deps="s" id="30" ippo="30" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo id="24" ippo="24"/>
    <ppo deps="s" id="14" ippo="14" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="21" ippo="21" s="g">
     <e txt="Caught SIG%s is a string literal"/>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="37" ippo="37" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="sigs is global"/>
    </ppo>
    <ppo id="15" ippo="15">
     <d>
      <invs>
       <arg a="3" i="27"/>
       <arg a="2" i="33,37,51"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="sigs is global"/>
    </ppo>
    <ppo deps="s" id="57" ippo="57" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="10" ippo="10" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="26" ippo="26"/>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="42" invs="18" ippo="42" s="g" ts="2018-01-09 15:49:32">
     <e txt="index value has non-negative lower bound: 11"/>
    </ppo>
    <ppo deps="s" id="56" ippo="56" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="9" invs="41" ippo="9" s="g" ts="2018-01-09 15:49:32">
     <e txt="assignedAt#3401"/>
    </ppo>
    <ppo deps="f" id="31" invs="20" ippo="31" s="g" ts="2018-01-09 15:49:32">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_buffer_30"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable buffer is not null"/>
    </ppo>
    <ppo deps="s" id="12" ippo="12" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="46" ippo="46" s="g">
     <e txt="global variable sigs with offset [sig] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="13" invs="51" ippo="13" s="g" ts="2018-01-09 15:49:32">
     <e txt="assignedAt#3401"/>
    </ppo>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="7" invs="29" ippo="7" s="g" ts="2018-01-09 15:49:32">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo id="8" ippo="8">
     <d>
      <invs/>
      <msgs>
       <msg t="array length is: 35; no index upper-bound value found for x; invariants: {assignedAt#3401}; [0 ; oo]; LB:[[[0]]; "/>
       <msg t="array length is: 35; no index upper-bound value found for x; invariants: {assignedAt#3401}; [0 ; oo]; LB:[[[0]];"/>
       <msg t="array length is: 35; no index upper-bound value found for x; invariants: {assignedAt#3401}; [0 ; oo]; LB:[[[0]];"/>
       <msg t="array length is: 35; no index upper-bound value found for x; invariants: {assignedAt#3401}; [0 ; oo]; LB:[[[0]];"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="51" ippo="51" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="unsigned value is always non-negative"/>
    </ppo>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="upperbound of constant string argument: Caught SIG%s"/>
    </ppo>
    <ppo deps="f" id="43" invs="18" ippo="43" s="g" ts="2018-01-09 15:49:32">
     <e txt="upper bound of index value: 11, is less than length: 35"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
    <ppo deps="s" id="20" ippo="20" s="g">
     <e txt="sig is a function parameter"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
