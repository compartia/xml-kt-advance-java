<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:29:29">
   <application file="base/utils.c"/>
  </header>
  <function fname="process_macros">
   <ppos>
    <ppo deps="s" id="386" ippo="386" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="182" invs="365,190" ippo="182" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of addition is less than MAX: satisfies((98 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo deps="s" id="427" ippo="427" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="588" ippo="588">
     <d>
      <invs>
       <arg a="1" i="216,493,1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="80" ippo="80" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="778" ippo="778" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="302" ippo="302" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="354" ippo="354" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="557" ippo="557" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="188" invs="831" ippo="188" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="219" ippo="219">
     <d>
      <invs>
       <arg a="1" i="368,367,679,823,986,985,991,1058"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @262 r:10"/>
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="459" ippo="459">
     <d>
      <invs>
       <arg a="4" i="192"/>
       <arg a="3" i="193,677,820"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (strstr(_^_)#return"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="488" ippo="834" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="777" ippo="777" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="102" ippo="102" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="272" ippo="272">
     <d>
      <invs>
       <arg a="1" i="422,421,717,867"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="624" ippo="624">
     <d>
      <invs>
       <arg a="1" i="156,475,1047"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="145" ippo="145" s="g">
     <e txt="macro_x_names is global"/>
    </ppo>
    <ppo deps="s" id="654" ippo="654" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="439" invs="701" ippo="439" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo id="559" ippo="559">
     <d>
      <invs>
       <arg a="1" i="62,452,1012"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="604" ippo="604" s="g">
     <e txt="one of the arguments is a string literal: $"/>
    </ppo>
    <ppo id="744" ippo="744">
     <d>
      <invs>
       <arg a="1" i="654"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="585" ippo="585" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="221" invs="367" ippo="221" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="465" ippo="465" s="g">
     <e txt="macro_contactaddress is global"/>
    </ppo>
    <ppo id="746" ippo="746">
     <d>
      <invs>
       <arg a="2" i="654"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="639" ippo="639" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="121" ippo="121" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="425" ippo="425" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="780" ippo="780" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="740" invs="148" ippo="740" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="548" invs="760" ippo="548" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="152" ippo="152"/>
    <ppo deps="f" id="205" invs="857" ippo="205" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="385" ippo="385" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="160" invs="688" ippo="160" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="235" invs="412" ippo="235" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="246" ippo="246" s="g">
     <e txt="upperbound of constant string argument: HOSTPERFDATA:"/>
    </ppo>
    <ppo deps="s" id="429" ippo="429" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="437" ippo="437">
     <d>
      <invs>
       <arg a="1" i="398,397,702,853"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="579" ippo="579">
     <d>
      <invs>
       <arg a="1" i="114,461,1031"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="54" ippo="54" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="305" invs="812" ippo="305" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="622" ippo="622">
     <d>
      <invs>
       <arg a="1" i="156,475,1047"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="756" ippo="756" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="140" ippo="140" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="403" ippo="403" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="581" ippo="581">
     <d>
      <invs>
       <arg a="4" i="112,534"/>
       <arg a="3" i="114,461,1031"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (output_buffer_6_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="628" invs="156" ippo="628" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="691" ids="1" invs="260" ippo="691" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="77" invs="68" ippo="77" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="449" invs="648" ippo="449" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="242" invs="712" ippo="242" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="720" invs="152" ippo="720" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="159" ippo="159" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="781" ippo="781" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="21" ippo="835" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="484" invs="681" ippo="484" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="521" invs="620" ippo="521" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#375(rv:strlen)"/>
    </ppo>
    <ppo deps="f" id="131" invs="572" ippo="131" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="231" ippo="231" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="68" ippo="68" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="237" ippo="237" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="767" ids="2" invs="130,128" ippo="767" s="g" ts="2018-01-09 15:50:06">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="4">
        <msg t="[4]:lower-bound expr: ((buffer_length_4_)#init - 1) is external"/>
       </arg>
      </amsgs>
     </d>
     <e txt="condition ptr-lowerbound(((output_buffer +i ((buffer_length - 1):int):char) delegated to api"/>
    </ppo>
    <ppo id="85" ippo="85">
     <d>
      <invs>
       <arg a="3" i="138,467,1039"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="105" ippo="105" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="f" id="519" invs="528" ippo="519" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 2 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="563" invs="609" ippo="563" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="247" ippo="247" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="377" invs="538" ippo="377" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper bound of index value: 31, is less than length: 32"/>
    </ppo>
    <ppo deps="f" id="650" invs="586" ippo="650" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#367(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="619" ippo="619" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="279" ippo="279" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="776" ippo="776" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="176" invs="588" ippo="176" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#287"/>
    </ppo>
    <ppo deps="s" id="186" ippo="186" s="g">
     <e txt="upperbound of constant string argument: HOST"/>
    </ppo>
    <ppo deps="f" id="357" invs="673" ippo="357" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#336(rv:strstr)"/>
    </ppo>
    <ppo deps="s" id="764" ippo="764" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo id="297" ippo="297">
     <d>
      <invs>
       <arg a="1" i="984,983,988,1013,312,311,612,762"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @262 r:10"/>
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="668" ippo="668">
     <d>
      <invs>
       <arg a="1" i="182,485,1052"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="615" ippo="615" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo id="211" ippo="211">
     <d>
      <invs>
       <arg a="1" i="406,405,706,857"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="433" ippo="433" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="555" ippo="555">
     <d>
      <invs>
       <arg a="3" i="62,452,1012"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="634" ids="1" invs="23" ippo="634" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="569" invs="610" ippo="569" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#377(rv:strlen)"/>
    </ppo>
    <ppo deps="f" id="326" invs="748" ippo="326" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="392" ippo="392">
     <d>
      <invs>
       <arg a="1" i="317,316,616,768"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="430" ippo="430" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="627" ippo="627">
     <d>
      <invs>
       <arg a="1" i="156,475,1047"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="17" invs="810" ippo="17" s="g" ts="2018-01-09 15:50:06">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(output_buffer_6_)#init"/>
    </ppo>
    <ppo deps="s" id="391" ippo="391" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="686" invs="667" ippo="686" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#391(rv:clean_macro_chars)"/>
    </ppo>
    <ppo deps="f" id="349" invs="703" ippo="349" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="434" invs="853" ippo="434" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="640" ippo="640" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="710" ippo="710" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="226" ippo="226" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="313" invs="354" ippo="313" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo id="758" ippo="758">
     <d>
      <invs>
       <arg a="1" i="723"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="199" ippo="199" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="264" ippo="264" s="g">
     <e txt="upperbound of constant string argument: SERVICE"/>
    </ppo>
    <ppo deps="f" id="295" invs="714" ippo="295" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#323(rv:strstr)"/>
    </ppo>
    <ppo deps="s" id="328" ippo="328" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="754" ippo="754" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo deps="s" id="353" ippo="353" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="499" invs="266" ippo="499" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="187" ippo="187" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="381" ippo="381" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="550" ippo="550" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="a" id="587" ids="1" invs="216" ippo="587" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="404" invs="639" ippo="404" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="142" ippo="142" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="416" ippo="416" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="511" ippo="511" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="262" ippo="262" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="389" invs="768" ippo="389" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="645" ippo="645" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="755" ippo="755"/>
    <ppo deps="s" id="157" ippo="157" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="289" ippo="289">
     <d>
      <invs>
       <arg a="1" i="394,393,695,848"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="334" invs="293" ippo="334" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="f" id="212" invs="406" ippo="212" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="395" ippo="395">
     <d>
      <invs>
       <arg a="1" i="317,316,616,768"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="460" ippo="460" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="490" ippo="836" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="730" ippo="730" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="364" ippo="364" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="241" ippo="241" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="251" ippo="251">
     <d>
      <invs>
       <arg a="1" i="361,360,675,819"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="330" ippo="330" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="432" ippo="432" s="g">
     <e txt="upperbound of constant string argument: CONTACTADDRESS"/>
    </ppo>
    <ppo id="169" ippo="169"/>
    <ppo id="480" ippo="480">
     <d>
      <invs>
       <arg a="1" i="371,370,682,828"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="562" ippo="562" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="359" invs="672" ippo="359" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="317" ippo="317" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="22" ippo="837" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="215" ippo="215" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="222" ippo="222" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="286" ippo="286">
     <d>
      <invs>
       <arg a="1" i="394,393,695,848"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="355" ippo="355" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="580" ids="2" invs="114,112" ippo="580" s="g" ts="2018-01-09 15:50:06">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="4">
        <msg t="[4]:lower-bound expr: ((buffer_length_4_)#init - 1) is external"/>
       </arg>
      </amsgs>
     </d>
     <e txt="condition ptr-lowerbound(((output_buffer +i ((buffer_length - 1):int):char) delegated to api"/>
    </ppo>
    <ppo deps="s" id="617" ippo="617" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="458" ippo="458" s="g">
     <e txt="add non-negative number:  value is 14"/>
    </ppo>
    <ppo deps="f" id="441" invs="398" ippo="441" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="482" ippo="482">
     <d>
      <invs>
       <arg a="1" i="371,370,682,828"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="65" invs="554" ippo="65" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 0 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="s" id="280" ippo="280" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="600" ids="1" invs="56" ippo="600" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo id="44" ippo="44">
     <d>
      <invs>
       <arg a="1" i="219,495,1073"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="120" ippo="120">
     <d>
      <invs>
       <arg a="1" i="211,490,1066"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="596" ippo="596" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="365" invs="630" ippo="365" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="162" invs="385" ippo="162" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="a" id="539" ids="1" invs="34" ippo="539" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="64" ippo="64" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="564" ippo="564">
     <d>
      <invs>
       <arg a="1" i="307,306,611,760"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="673" ippo="673">
     <d>
      <invs>
       <arg a="1" i="182,485,1052"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="292" ippo="292" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="175" invs="291" ippo="175" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper bound of index value: 98, is less than length: 99"/>
    </ppo>
    <ppo id="593" ippo="593">
     <d>
      <invs>
       <arg a="1" i="216,493,1069"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="276" ippo="276" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="651" ippo="651" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="92" ippo="92" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="10" ippo="838" s="g">
     <e txt="upperbound of constant string argument: "/>
    </ppo>
    <ppo deps="s" id="224" ippo="224" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="540" ippo="540">
     <d>
      <invs>
       <arg a="1" i="34,447,1006"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="417" ippo="417">
     <d>
      <invs>
       <arg a="2" i="224,844"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="153" ippo="153"/>
    <ppo deps="f" id="727" invs="635" ippo="727" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#268_xx_assignedAt#292_xx_assignedAt#313(globalmacro_ondemand8966)_xx_assignedAt#326(globalmacro_ondemand8966)_xx_assignedAt#339_xx_assignedAt#341_xx_assignedAt#348_xx_assignedAt#350_xx_assignedAt#357_xx_assignedAt#359_xx_assignedAt#387(rv:get_url_encoded_string)"/>
    </ppo>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="387" ippo="387" s="g">
     <e txt="upperbound of constant string argument: USER"/>
    </ppo>
    <ppo deps="s" id="398" ippo="398" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="605" ippo="605" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="671" ippo="671" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="498" ippo="498">
     <d>
      <invs>
       <arg a="1" i="266,504,1097"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="583" ippo="583" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="721" invs="152" ippo="721" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="126" invs="733" ippo="126" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="689" ippo="689" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="591" ippo="591" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="315" ippo="315" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="637" ippo="637">
     <d>
      <invs>
       <arg a="3" i="23,443,998"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="294" ippo="294" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="492" ids="1" invs="266" ippo="492" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="577" ippo="577" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="a" id="108" ids="1" invs="201" ippo="108" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="310" invs="670" ippo="310" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="371" ippo="371" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="623" ippo="623" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="52" invs="846" ippo="52" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="f" id="491" invs="727" ippo="491" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#363(rv:strcmp)"/>
    </ppo>
    <ppo deps="f" id="333" invs="294" ippo="333" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="f" id="703" invs="872" ippo="703" s="g" ts="2018-01-09 15:50:06">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(clean_macro_chars(_^_)#return, addrof_string_"/>
    </ppo>
    <ppo deps="s" id="250" ippo="250" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="565" invs="307" ippo="565" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="s" id="626" ippo="626" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="f" id="30" invs="215" ippo="30" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter input_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="185" ippo="185" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="707" ippo="707" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo id="206" ippo="206">
     <d>
      <invs>
       <arg a="1" i="406,405,706,857"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="446" ippo="446" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="a" id="14" ids="3" invs="170,174" ippo="839" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition ptr-upperbound(((output_buffer +i 0):char) delegated to api"/>
    </ppo>
    <ppo id="111" ippo="111">
     <d>
      <invs>
       <arg a="4" i="199,552"/>
       <arg a="3" i="201,487,1059"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (output_buffer_6_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="551" ippo="551">
     <d>
      <invs>
       <arg a="1" i="307,306,611,760"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="277" ippo="277" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="729" ippo="729">
     <d>
      <invs>
       <arg a="1" i="654"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="82" ids="1" invs="138" ippo="82" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="487" invs="370" ippo="487" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo id="728" ippo="728">
     <d>
      <invs>
       <arg a="1" i="654"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="578" ids="1" invs="114" ippo="578" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo id="89" ippo="89">
     <d>
      <invs>
       <arg a="1" i="138,467,1039"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="695" ippo="695"/>
    <ppo deps="f" id="291" invs="393" ippo="291" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo id="79" ippo="79">
     <d>
      <invs>
       <arg a="1" i="338,337,645,791"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="217" invs="668" ippo="217" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#310(rv:strstr)"/>
    </ppo>
    <ppo deps="s" id="470" ippo="470" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="534" ippo="534" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="270" ippo="270" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="573" ippo="573" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="31" invs="215" ippo="31" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter input_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="554" ippo="554"/>
    <ppo deps="s" id="12" ippo="840" s="g">
     <e txt="one of the arguments is a string literal: "/>
    </ppo>
    <ppo deps="s" id="666" ippo="666" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo deps="s" id="715" ippo="715" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="209" ippo="209" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="699" invs="260" ippo="699" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="366" invs="778" ippo="366" s="g" ts="2018-01-09 15:50:06">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: strstr"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="590" ippo="590">
     <d>
      <invs>
       <arg a="1" i="216,493,1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="665" ippo="665" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo id="556" ippo="556"/>
    <ppo deps="f" id="642" invs="23" ippo="642" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="476" ippo="841" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="303" ippo="303" s="g">
     <e txt="upperbound of constant string argument: SERVICEOUTPUT:"/>
    </ppo>
    <ppo deps="s" id="712" ippo="712" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="81" ippo="81">
     <d>
      <invs>
       <arg a="1" i="338,337,645,791"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="356" ippo="356" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="285" ippo="285" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="672" ippo="672" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="f" id="273" invs="422" ippo="273" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="70" ippo="70">
     <d>
      <invs>
       <arg a="1" i="68,454,1015"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="134" invs="271" ippo="134" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="399" ippo="399" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="509" ippo="509" s="g">
     <e txt="one of the arguments is a string literal: $"/>
    </ppo>
    <ppo deps="s" id="24" ippo="24" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="94" ippo="94">
     <d>
      <invs>
       <arg a="1" i="338,337,645,791"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="109" ippo="109">
     <d>
      <invs>
       <arg a="1" i="201,487,1059"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="167" invs="386" ippo="167" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper bound of index value: 98, is less than length: 99"/>
    </ppo>
    <ppo id="407" ippo="407">
     <d>
      <invs>
       <arg a="3" i="224,844"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="415" ippo="415" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="507" ippo="507"/>
    <ppo deps="s" id="543" ippo="543" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="610" ippo="610" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="245" ippo="245" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="750" ippo="750" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="57" invs="692" ippo="57" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo id="156" ippo="156">
     <d>
      <invs>
       <arg a="1" i="385,384,690,839"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="421" invs="550" ippo="421" s="g" ts="2018-01-09 15:50:06">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="257" ippo="257" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="529" ippo="529" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="669" ippo="669" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="11" ippo="842" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="485" ippo="485">
     <d>
      <invs>
       <arg a="1" i="371,370,682,828"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="535" ippo="535" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="420" ippo="420" s="g">
     <e txt="macro_user is global"/>
    </ppo>
    <ppo deps="f" id="344" invs="855" ippo="344" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="a" id="552" ids="1" invs="62" ippo="552" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="518" ippo="518" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="375" ippo="375" s="g">
     <e txt="macro_argv is global"/>
    </ppo>
    <ppo deps="s" id="517" ippo="517" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="390" ippo="390">
     <d>
      <invs>
       <arg a="1" i="317,316,616,768"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="457" ippo="457">
     <d>
      <invs>
       <arg a="1" i="193,677,820"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="725" ippo="725" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="249" ippo="249">
     <d>
      <invs>
       <arg a="1" i="361,360,675,819"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="331" invs="592" ippo="331" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo id="693" ippo="693"/>
    <ppo deps="s" id="388" ippo="388" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="40" ippo="40" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="210" invs="705" ippo="210" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="599" ippo="599" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="67" invs="557,228" ippo="67" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((1 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo deps="s" id="685" ippo="685" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="738" ippo="738" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="a" id="110" ids="2" invs="201,199" ippo="110" s="g" ts="2018-01-09 15:50:06">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="4">
        <msg t="[4]:lower-bound expr: ((buffer_length_4_)#init - 1) is external"/>
       </arg>
      </amsgs>
     </d>
     <e txt="condition ptr-lowerbound(((output_buffer +i ((buffer_length - 1):int):char) delegated to api"/>
    </ppo>
    <ppo deps="s" id="339" ippo="339" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo id="345" ippo="345">
     <d>
      <invs>
       <arg a="1" i="402,401,704,855"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="321" ippo="321" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo deps="a" id="667" ids="1" invs="182" ippo="667" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="762" ippo="762" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="779" ippo="779" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="196" invs="379" ippo="196" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="314" ippo="314" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="681" ippo="681">
     <d>
      <invs>
       <arg a="1" i="990,637"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="155" invs="839" ippo="155" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="308" ippo="308">
     <d>
      <invs>
       <arg a="1" i="355,354,671,812"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="483" ippo="483" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="592" ippo="592" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="116" ippo="116" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="a" id="530" ids="1" invs="73" ippo="530" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="342" ippo="342" s="g">
     <e txt="upperbound of constant string argument: ARG"/>
    </ppo>
    <ppo deps="s" id="348" ippo="348" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="384" ippo="384" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="675" invs="182" ippo="675" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="256" invs="360" ippo="256" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="f" id="374" invs="623" ippo="374" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#337(rv:atoi)"/>
    </ppo>
    <ppo deps="s" id="522" ippo="522" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="495" ippo="495">
     <d>
      <invs>
       <arg a="1" i="266,504,1097"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="505" ids="1" invs="87" ippo="505" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="74" ippo="74" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="f" id="178" invs="708" ippo="178" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#287"/>
    </ppo>
    <ppo id="75" ippo="75">
     <d>
      <invs>
       <arg a="1" i="68,454,1015"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="123" ippo="123">
     <d>
      <invs>
       <arg a="1" i="211,490,1066"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="635" ippo="635"/>
    <ppo id="362" ippo="362">
     <d>
      <invs>
       <arg a="3" i="111,780"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="558" ippo="558" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="f" id="139" invs="530" ippo="139" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 0 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="147" invs="366" ippo="147" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper bound of index value: 98, is less than length: 99"/>
    </ppo>
    <ppo deps="s" id="724" ippo="724" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="234" invs="413" ippo="234" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="a" id="713" ids="1" invs="152" ippo="713" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="293" ippo="293" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="649" ippo="649" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo id="53" ippo="53">
     <d>
      <invs>
       <arg a="1" i="390,389,693,846"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="240" invs="713" ippo="240" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#316(rv:strstr)"/>
    </ppo>
    <ppo id="372" ippo="372">
     <d>
      <invs>
       <arg a="2" i="111,780"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="380" ippo="380" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="f" id="218" invs="679" ippo="218" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="752" ippo="752" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="373" invs="629" ippo="373" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#337(rv:atoi)"/>
    </ppo>
    <ppo deps="a" id="765" ids="1" invs="130" ippo="765" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="723" invs="641" ippo="723" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#268_xx_assignedAt#292_xx_assignedAt#313(globalmacro_ondemand8966)_xx_assignedAt#326(globalmacro_ondemand8966)_xx_assignedAt#339_xx_assignedAt#341_xx_assignedAt#348_xx_assignedAt#350_xx_assignedAt#357_xx_assignedAt#359_xx_assignedAt#387(rv:get_url_encoded_string)"/>
    </ppo>
    <ppo deps="f" id="163" invs="384" ippo="163" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo id="230" ippo="230">
     <d>
      <invs>
       <arg a="1" i="413,412,710,859"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="114" ippo="114" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="368" ippo="368" s="g">
     <e txt="add non-negative number:  value is 3"/>
    </ppo>
    <ppo deps="s" id="252" ippo="252" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="461" ippo="461" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="547" invs="34" ippo="547" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="782" ippo="782" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="647" ippo="647" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="283" invs="848" ippo="283" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="f" id="660" invs="633" ippo="660" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#268_xx_assignedAt#292_xx_assignedAt#313(globalmacro_ondemand8966)_xx_assignedAt#326(globalmacro_ondemand8966)_xx_assignedAt#339_xx_assignedAt#341_xx_assignedAt#348_xx_assignedAt#350_xx_assignedAt#357_xx_assignedAt#359"/>
    </ppo>
    <ppo deps="f" id="95" invs="338" ippo="95" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="s" id="149" ippo="149" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="538" ippo="538" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo id="636" ippo="636"/>
    <ppo deps="f" id="42" invs="707" ippo="42" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#253_xx_assignedAt#280_xx_assignedAt#408"/>
    </ppo>
    <ppo deps="f" id="253" invs="674" ippo="253" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo id="533" ippo="533">
     <d>
      <invs>
       <arg a="4" i="71,524"/>
       <arg a="3" i="73,455,1016"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (output_buffer_6_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="631" ippo="631" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="324" ippo="324" s="g">
     <e txt="upperbound of constant string argument: SERVICEPERFDATA:"/>
    </ppo>
    <ppo id="736" ippo="736"/>
    <ppo id="766" ippo="766">
     <d>
      <invs>
       <arg a="1" i="130,464,1034"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="229" ippo="229" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="447" invs="649" ippo="447" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#354(rv:strstr)"/>
    </ppo>
    <ppo deps="f" id="677" invs="669" ippo="677" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#268_xx_assignedAt#292_xx_assignedAt#313(globalmacro_ondemand8966)_xx_assignedAt#326(globalmacro_ondemand8966)_xx_assignedAt#339_xx_assignedAt#341_xx_assignedAt#348_xx_assignedAt#350_xx_assignedAt#357_xx_assignedAt#359_xx_assignedAt#387(rv:get_url_encoded_string)"/>
    </ppo>
    <ppo deps="s" id="66" ippo="66" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo id="363" ippo="363">
     <d>
      <invs>
       <arg a="1" i="111,780"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="340" ippo="340" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="662" ippo="662">
     <d>
      <invs>
       <arg a="2" i="633,989"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="745" ippo="745">
     <d>
      <invs>
       <arg a="2" i="654"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="570" ippo="570" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="678" ippo="678" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="239" ippo="239" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="318" invs="647" ippo="318" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#329(rv:strstr)"/>
    </ppo>
    <ppo deps="f" id="464" invs="656" ippo="464" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#355(rv:atoi)"/>
    </ppo>
    <ppo deps="s" id="589" ippo="589" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="737" ippo="737" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="18" invs="170" ippo="18" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="50" invs="219" ippo="50" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="301" ippo="301" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="104" ippo="104" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="496" ippo="496" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="512" ippo="512">
     <d>
      <invs>
       <arg a="1" i="87,459,1025"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="568" ippo="568" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo id="452" ippo="452">
     <d>
      <invs>
       <arg a="3" i="194,822"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="532" ids="2" invs="73,71" ippo="532" s="g" ts="2018-01-09 15:50:06">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="4">
        <msg t="[4]:lower-bound expr: ((buffer_length_4_)#init - 1) is external"/>
       </arg>
      </amsgs>
     </d>
     <e txt="condition ptr-lowerbound(((output_buffer +i ((buffer_length - 1):int):char) delegated to api"/>
    </ppo>
    <ppo deps="s" id="537" ippo="537" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="726" ippo="726" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="258" ippo="258" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="749" invs="652" ippo="749" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#395(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="103" ippo="103" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="189" ippo="189">
     <d>
      <invs>
       <arg a="1" i="380,379,685,831"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="453" ippo="453">
     <d>
      <invs>
       <arg a="1" i="194,822"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="694" ippo="694">
     <d>
      <invs>
       <arg a="3" i="260,502,1095"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="378" invs="638" ippo="378" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#337(rv:atoi)"/>
    </ppo>
    <ppo deps="s" id="444" ippo="444" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="508" ippo="508">
     <d>
      <invs>
       <arg a="3" i="87,459,1025"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="544" ippo="544" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo id="733" ippo="733"/>
    <ppo deps="s" id="477" ippo="843" s="g">
     <e txt="upperbound of constant string argument: "/>
    </ppo>
    <ppo deps="s" id="478" ippo="844" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="743" invs="653" ippo="743" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#395"/>
    </ppo>
    <ppo deps="f" id="180" invs="676" ippo="180" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#287"/>
    </ppo>
    <ppo deps="s" id="275" ippo="275" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="400" ippo="400" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="428" ippo="428" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="523" ippo="523" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="481" ippo="481" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="528" invs="525,72" ippo="528" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((2 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo id="690" ippo="690">
     <d>
      <invs>
       <arg a="1" i="426,425,721,872"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="768" ippo="768">
     <d>
      <invs>
       <arg a="4" i="128,540"/>
       <arg a="3" i="130,464,1034"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (output_buffer_6_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="141" invs="533,103" ippo="141" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((1 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo deps="s" id="216" ippo="216" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="414" ippo="414">
     <d>
      <invs>
       <arg a="4" i="222"/>
       <arg a="3" i="223,691,842"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (strstr(_^_)#return"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="682" ippo="682">
     <d>
      <invs>
       <arg a="2" i="990,637"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="168" invs="689" ippo="168" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#287"/>
    </ppo>
    <ppo deps="s" id="520" ippo="520" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="489" ippo="845" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="774" ippo="774" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="8" ippo="846" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="204" ippo="204" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="502" ippo="502" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="335" ippo="335" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="426" ippo="426" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="560" invs="62" ippo="560" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="431" ippo="431" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="475" ippo="847" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="195" invs="380" ippo="195" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="731" ippo="731">
     <d>
      <invs>
       <arg a="1" i="654"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="504" ippo="504" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="553" ippo="553"/>
    <ppo deps="f" id="124" invs="211" ippo="124" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="370" ippo="370" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="474" ippo="474" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="757" invs="722" ippo="757" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#268_xx_assignedAt#292_xx_assignedAt#313(globalmacro_ondemand8966)_xx_assignedAt#326(globalmacro_ondemand8966)_xx_assignedAt#339_xx_assignedAt#341_xx_assignedAt#348_xx_assignedAt#350_xx_assignedAt#357_xx_assignedAt#359_xx_assignedAt#387(rv:get_url_encoded_string)"/>
    </ppo>
    <ppo deps="f" id="656" invs="700" ippo="656" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#268_xx_assignedAt#292_xx_assignedAt#313(globalmacro_ondemand8966)_xx_assignedAt#326(globalmacro_ondemand8966)_xx_assignedAt#339_xx_assignedAt#341_xx_assignedAt#348_xx_assignedAt#350_xx_assignedAt#357_xx_assignedAt#359"/>
    </ppo>
    <ppo deps="s" id="613" ippo="613" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="332" ippo="332">
     <d>
      <invs>
       <arg a="1" i="294,293,593,748"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @-1 r:10,freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="343" ippo="343" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="608" invs="56" ippo="608" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="448" ippo="448" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="419" invs="605" ippo="419" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#346(rv:atoi)"/>
    </ppo>
    <ppo deps="s" id="753" ippo="753" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="541" ippo="541" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="506" ippo="506"/>
    <ppo id="602" ippo="602"/>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="717" ippo="717" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="213" invs="405" ippo="213" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="323" ippo="323" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="644" ippo="644" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="684" ippo="684" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo deps="s" id="122" ippo="122" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="181" ippo="181" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo id="306" ippo="306">
     <d>
      <invs>
       <arg a="1" i="355,354,671,812"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="382" ippo="382" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="638" ippo="638" s="g">
     <e txt="one of the arguments is a string literal: $"/>
    </ppo>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="402" invs="640" ippo="402" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#345(rv:strstr)"/>
    </ppo>
    <ppo deps="s" id="26" ippo="26" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="412" ippo="412">
     <d>
      <invs>
       <arg a="1" i="223,691,842"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="296" invs="612" ippo="296" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo id="435" ippo="435">
     <d>
      <invs>
       <arg a="1" i="398,397,702,853"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="225" ippo="225" s="g">
     <e txt="upperbound of constant string argument: HOSTOUTPUT:"/>
    </ppo>
    <ppo deps="f" id="135" invs="627" ippo="135" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#284(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="658" ippo="658" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="307" ippo="307" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="463" invs="619" ippo="463" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#355(rv:atoi)"/>
    </ppo>
    <ppo deps="f" id="513" invs="87" ippo="513" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="192" ippo="192" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="259" ippo="259" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="271" invs="716" ippo="271" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="561" invs="62" ippo="561" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="125" invs="211" ippo="125" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="320" invs="646" ippo="320" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="515" ippo="515" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="676" ippo="676" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="542" ippo="542">
     <d>
      <invs>
       <arg a="1" i="34,447,1006"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="143" invs="724" ippo="143" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#287"/>
    </ppo>
    <ppo deps="f" id="19" invs="170" ippo="19" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="227" invs="859" ippo="227" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="f" id="172" invs="725" ippo="172" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#290(rv:strcmp)"/>
    </ppo>
    <ppo id="228" ippo="228">
     <d>
      <invs>
       <arg a="1" i="413,412,710,859"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="454" ippo="454" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="497" ippo="497" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo id="545" ippo="545">
     <d>
      <invs>
       <arg a="1" i="34,447,1006"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="606" ippo="606" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo id="269" ippo="269">
     <d>
      <invs>
       <arg a="1" i="422,421,717,867"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="117" ids="1" invs="211" ippo="117" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="503" ippo="503" s="g">
     <e txt="upperbound of constant string argument: $"/>
    </ppo>
    <ppo deps="f" id="514" invs="87" ippo="514" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="208" ippo="208">
     <d>
      <invs>
       <arg a="1" i="406,405,706,857"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="525" ippo="525" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="546" invs="34" ippo="546" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="60" invs="389" ippo="60" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="150" ippo="150" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="244" ippo="244" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="607" ippo="607">
     <d>
      <invs>
       <arg a="1" i="56,450,1008"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="161" ippo="161">
     <d>
      <invs>
       <arg a="1" i="385,384,690,839"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="405" ippo="405" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="759" ippo="759">
     <d>
      <invs>
       <arg a="2" i="723"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="144" ippo="144" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="706" invs="562" ippo="706" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 2 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="s" id="137" ippo="137" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="243" ippo="243" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo id="194" ippo="194">
     <d>
      <invs>
       <arg a="1" i="380,379,685,831"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="629" invs="156" ippo="629" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="702" invs="720" ippo="702" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#391"/>
    </ppo>
    <ppo deps="f" id="741" invs="148" ippo="741" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="319" ippo="319" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="87" ippo="87" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="683" ippo="683">
     <d>
      <invs>
       <arg a="2" i="990,637"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="751" ippo="751" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="84" ippo="84"/>
    <ppo deps="f" id="183" invs="650" ippo="183" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#269_xx_assignedAt#293"/>
    </ppo>
    <ppo id="171" ippo="171"/>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="274" invs="421" ippo="274" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="f" id="418" invs="655" ippo="418" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#346(rv:atoi)"/>
    </ppo>
    <ppo deps="s" id="281" ippo="281" s="g">
     <e txt="upperbound of constant string argument: :"/>
    </ppo>
    <ppo id="127" ippo="127">
     <d>
      <invs>
       <arg a="1" i="272,271,573,733"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="614" invs="516" ippo="614" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 2 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="705" invs="425" ippo="705" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from clean_macro_chars (IH); or address of string literal ; all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="748" ippo="748" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="413" ippo="413" s="g">
     <e txt="add non-negative number:  value is 4"/>
    </ppo>
    <ppo deps="f" id="708" invs="719" ippo="708" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#391(rv:strlen)"/>
    </ppo>
    <ppo deps="f" id="298" invs="312" ippo="298" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="f" id="576" invs="535,113" ippo="576" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((2 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo deps="f" id="700" invs="260" ippo="700" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="input_buffer is a function parameter"/>
    </ppo>
    <ppo deps="f" id="148" invs="678" ippo="148" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#287"/>
    </ppo>
    <ppo deps="s" id="325" ippo="325" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="379" invs="539,123" ippo="379" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((1 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo id="440" ippo="440">
     <d>
      <invs>
       <arg a="1" i="398,397,702,853"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="423" invs="662" ippo="423" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#346(rv:atoi)"/>
    </ppo>
    <ppo deps="s" id="184" ippo="184" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="424" invs="551,164" ippo="424" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((1 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo id="72" ippo="72">
     <d>
      <invs>
       <arg a="1" i="68,454,1015"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="261" ippo="261" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo deps="f" id="394" invs="615" ippo="394" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="93" invs="643" ippo="93" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="119" ippo="119" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="338" invs="726" ippo="338" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#329(rv:strstr)"/>
    </ppo>
    <ppo deps="s" id="701" ippo="701" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="233" ippo="233">
     <d>
      <invs>
       <arg a="1" i="413,412,710,859"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @-1 r:10,freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="309" ippo="309" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="571" ippo="571" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="763" invs="541,129" ippo="763" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((2 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo id="361" ippo="361">
     <d>
      <invs>
       <arg a="1" i="111,780"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="633" ippo="633" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="661" ippo="661">
     <d>
      <invs>
       <arg a="1" i="633,989"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="136" invs="628" ippo="136" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#284(rv:strlen)"/>
    </ppo>
    <ppo id="254" ippo="254">
     <d>
      <invs>
       <arg a="1" i="361,360,675,819"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @-1 r:10,freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="207" ippo="207" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="456" invs="820" ippo="456" s="g" ts="2018-01-09 15:50:06">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: strstr"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="501" ippo="501" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="174" invs="291" ippo="174" s="g" ts="2018-01-09 15:50:06">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo id="367" ippo="367">
     <d>
      <invs>
       <arg a="1" i="110,630,778"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="179" ippo="179" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo id="329" ippo="329">
     <d>
      <invs>
       <arg a="1" i="294,293,593,748"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="350" ippo="350">
     <d>
      <invs>
       <arg a="1" i="402,401,704,855"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="655" ippo="655" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="692" ippo="692"/>
    <ppo deps="s" id="20" ippo="848" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="352" invs="401" ippo="352" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="409" ippo="409" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="625" ippo="625" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="129" ippo="129">
     <d>
      <invs>
       <arg a="1" i="272,271,573,733"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="397" invs="316" ippo="397" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="f" id="166" invs="386" ippo="166" s="g" ts="2018-01-09 15:50:06">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="358" ippo="358" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="376" invs="538" ippo="376" s="g" ts="2018-01-09 15:50:06">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="130" ippo="130" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="input_buffer is a function parameter"/>
    </ppo>
    <ppo deps="f" id="479" invs="828" ippo="479" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="653" ippo="653" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="49" ippo="49">
     <d>
      <invs>
       <arg a="1" i="219,495,1073"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="369" ippo="369">
     <d>
      <invs>
       <arg a="4" i="109"/>
       <arg a="3" i="110,630,778"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (strstr(_^_)#return"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="200" invs="621" ippo="200" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#310(rv:strstr)"/>
    </ppo>
    <ppo deps="s" id="632" ippo="632" s="g">
     <e txt="upperbound of constant string argument: $"/>
    </ppo>
    <ppo deps="s" id="436" ippo="436" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="62" invs="697" ippo="62" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#273(rv:strlen)"/>
    </ppo>
    <ppo id="284" ippo="284">
     <d>
      <invs>
       <arg a="1" i="394,393,695,848"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="106" invs="553,200" ippo="106" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((2 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo deps="f" id="266" invs="867" ippo="266" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="688" ippo="688">
     <d>
      <invs>
       <arg a="1" i="426,425,721,872"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="760" ippo="760">
     <d>
      <invs>
       <arg a="2" i="723"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="133" invs="272" ippo="133" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="493" ippo="493">
     <d>
      <invs>
       <arg a="1" i="266,504,1097"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="618" ippo="618" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="56" ippo="56" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="422" invs="550" ippo="422" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper bound of index value: 255, is less than length: 256"/>
    </ppo>
    <ppo deps="s" id="443" ippo="443" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="704" invs="426" ippo="704" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from clean_macro_chars (IH); or address of string literal ; all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="s" id="164" ippo="164" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="341" ippo="341" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="a" id="732" ids="1" invs="148" ippo="732" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="718" ippo="718" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="772" ippo="772" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="a" id="69" ids="1" invs="68" ippo="69" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="s" id="201" ippo="201" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="574" ippo="574" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="346" ippo="346" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="674" invs="182" ippo="674" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="203" ippo="203" s="g">
     <e txt="upperbound of constant string argument: :"/>
    </ppo>
    <ppo deps="f" id="96" invs="337" ippo="96" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="f" id="288" invs="694" ippo="288" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="396" invs="317" ippo="396" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="s" id="761" ippo="761" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="45" ippo="45" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="78" invs="791" ippo="78" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="118" ippo="118">
     <d>
      <invs>
       <arg a="1" i="211,490,1066"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="616" invs="608" ippo="616" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#379(rv:strlen)"/>
    </ppo>
    <ppo deps="s" id="236" ippo="236" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="23" ippo="849" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="411" invs="842" ippo="411" s="g" ts="2018-01-09 15:50:06">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: strstr"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="572" ippo="572" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="646" ippo="646" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="696" ippo="696" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="337" ippo="337" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="351" invs="402" ippo="351" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="s" id="190" ippo="190" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="393" ippo="393" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="76" invs="68" ippo="76" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="197" ippo="197" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="663" ippo="663">
     <d>
      <invs>
       <arg a="2" i="633,989"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="360" ippo="360" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="526" ippo="526" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="f" id="566" invs="306" ippo="566" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="f" id="299" invs="311" ippo="299" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="98" ippo="98" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="214" ippo="214" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="630" ippo="630" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="747" invs="548" ippo="747" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 2 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="s" id="711" ippo="711" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="769" ippo="769" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="202" ippo="202" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="9" ippo="850" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="450" ippo="450" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="719" ippo="719">
     <d>
      <invs>
       <arg a="1" i="152,473,1045"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="a" id="13" ids="1" invs="170" ippo="13" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="220" invs="368" ippo="220" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="734" ippo="734"/>
    <ppo deps="f" id="51" invs="219" ippo="51" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="107" ippo="107" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="f" id="312" invs="355" ippo="312" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="347" ippo="347">
     <d>
      <invs>
       <arg a="1" i="402,401,704,855"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="735" ippo="735">
     <d>
      <invs>
       <arg a="3" i="148,471,1043"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="146" invs="366" ippo="146" s="g" ts="2018-01-09 15:50:06">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="473" ippo="473" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="500" invs="266" ippo="500" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="316" ippo="316" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="612" ippo="612" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="611" ippo="611" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="304" ippo="304" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="582" ippo="582" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="648" invs="509" ippo="648" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 2 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="90" invs="138" ippo="90" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="322" ippo="322" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="601" ippo="601"/>
    <ppo deps="s" id="268" ippo="268" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="773" ippo="773" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="598" ippo="598" s="g">
     <e txt="upperbound of constant string argument: $"/>
    </ppo>
    <ppo id="55" ippo="55">
     <d>
      <invs>
       <arg a="1" i="390,389,693,846"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="132" ippo="132">
     <d>
      <invs>
       <arg a="1" i="272,271,573,733"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="193" invs="684" ippo="193" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="527" ippo="527" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="659" ippo="659" s="g">
     <e txt="options is a function parameter"/>
    </ppo>
    <ppo deps="s" id="657" ippo="657" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="59" invs="390" ippo="59" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="s" id="165" ippo="165" s="g">
     <e txt="macro_x_names is global"/>
    </ppo>
    <ppo deps="s" id="445" ippo="445" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="466" invs="558" ippo="466" s="g" ts="2018-01-09 15:50:06">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo id="698" ippo="698">
     <d>
      <invs>
       <arg a="1" i="260,502,1095"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="223" ippo="223" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="401" ippo="401" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="670" ippo="670">
     <d>
      <invs>
       <arg a="1" i="182,485,1052"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="383" ippo="383" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="609" invs="56" ippo="609" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="410" invs="691" ippo="410" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="438" ippo="438" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="467" invs="558" ippo="467" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper bound of index value: 5, is less than length: 6"/>
    </ppo>
    <ppo deps="s" id="679" ippo="679" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="300" ippo="300" s="g">
     <e txt="macro_ondemand is global"/>
    </ppo>
    <ppo id="549" ippo="549">
     <d>
      <invs>
       <arg a="1" i="307,306,611,760"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="154" ippo="154"/>
    <ppo id="151" ippo="151"/>
    <ppo id="406" ippo="406">
     <d>
      <invs>
       <arg a="1" i="224,844"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="61" invs="696" ippo="61" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#273(rv:strlen)"/>
    </ppo>
    <ppo id="158" ippo="158">
     <d>
      <invs>
       <arg a="1" i="385,384,690,839"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="472" ippo="472" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="595" invs="216" ippo="595" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="770" ippo="770" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="575" ippo="575" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="697" ippo="697" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="113" ippo="113" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="138" ippo="138" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="471" ippo="471" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="278" invs="680" ippo="278" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#323(rv:strstr)"/>
    </ppo>
    <ppo id="531" ippo="531">
     <d>
      <invs>
       <arg a="1" i="73,455,1016"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="584" ippo="584" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="58" ippo="58">
     <d>
      <invs>
       <arg a="1" i="390,389,693,846"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="170" ippo="170" s="g">
     <e txt="global variable macro_x_names with offset [x] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="709" ippo="709" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="112" ippo="112" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="255" invs="361" ippo="255" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="f" id="468" invs="715" ippo="468" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#355(rv:atoi)"/>
    </ppo>
    <ppo id="267" ippo="267">
     <d>
      <invs>
       <arg a="1" i="422,421,717,867"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="output_buffer is a function parameter"/>
    </ppo>
    <ppo deps="s" id="494" ippo="494" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo id="462" ippo="462">
     <d>
      <invs>
       <arg a="2" i="194,822"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="536" ippo="536" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="524" ippo="524" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="173" ippo="173" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="442" invs="397" ippo="442" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="f" id="260" invs="698" ippo="260" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#316(rv:strstr)"/>
    </ppo>
    <ppo deps="f" id="455" invs="677" ippo="455" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="586" ippo="586" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="775" ippo="775" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="191" ippo="191">
     <d>
      <invs>
       <arg a="1" i="380,379,685,831"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="311" ippo="311">
     <d>
      <invs>
       <arg a="1" i="355,354,671,812"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @-1 r:10,freed(by:my_strtok @-1 r:10"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="722" ippo="722" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="47" ippo="47" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="91" invs="138" ippo="91" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="282" ippo="282" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="408" ippo="408">
     <d>
      <invs>
       <arg a="1" i="224,844"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="97" invs="544" ippo="97" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 2 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="s" id="516" ippo="516" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="739" ippo="739">
     <d>
      <invs>
       <arg a="1" i="148,471,1043"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="510" ippo="510" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="594" invs="216" ippo="594" s="g" ts="2018-01-09 15:50:06">
     <e txt="initial value of parameter output_buffer satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="99" invs="644" ippo="99" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#274(rv:strlen)"/>
    </ppo>
    <ppo deps="f" id="37" invs="711" ippo="37" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="f" id="567" invs="521" ippo="567" s="g" ts="2018-01-09 15:50:06">
     <e txt="value 2 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="s" id="652" ippo="652" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="680" invs="637" ippo="680" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#268_xx_assignedAt#292_xx_assignedAt#313(globalmacro_ondemand8966)_xx_assignedAt#326(globalmacro_ondemand8966)_xx_assignedAt#339_xx_assignedAt#341_xx_assignedAt#348_xx_assignedAt#350_xx_assignedAt#357_xx_assignedAt#359_xx_assignedAt#387(rv:get_url_encoded_string)"/>
    </ppo>
    <ppo deps="s" id="265" ippo="265" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="248" invs="819" ippo="248" s="g" ts="2018-01-09 15:50:06">
     <e txt="all targets are non-null: [basevar (my_strtok(_^_)#return]"/>
    </ppo>
    <ppo id="327" ippo="327">
     <d>
      <invs>
       <arg a="1" i="294,293,593,748"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="687" ippo="687">
     <d>
      <invs>
       <arg a="1" i="426,425,721,872"/>
      </invs>
      <msgs>
       <msg t="unable to exclude null return value from clean_macro_chars"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="716" ippo="716">
     <d>
      <invs>
       <arg a="1" i="152,473,1045"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="486" invs="371" ippo="486" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="641" ippo="641">
     <d>
      <invs>
       <arg a="1" i="23,443,998"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:grab_on_demand_macro @312 r:1,freed(by:grab_on_demand_macro @325 r:1,freed(by:my_strtok @262 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clean_macro_chars @-1 r:1,freed(by:get_url_encoded_string @-1 r:1,freed(by:grab_on_demand_macro @-1 r:1,freed(by:my_strtok @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="643" invs="23" ippo="643" s="g" ts="2018-01-09 15:50:06">
     <e txt="upper-bound value is initial value of parameter output_buffer satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="198" ippo="198" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="232" invs="709" ippo="232" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#262(rv:my_strtok)"/>
    </ppo>
    <ppo deps="s" id="115" ippo="115" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="290" invs="394" ippo="290" s="g" ts="2018-01-09 15:50:06">
     <e txt="lower-bound value is return value from my_strtok (IH); or return value from my_strtok (IH); all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="714" ippo="714">
     <d>
      <invs>
       <arg a="1" i="152,473,1045"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="742" ippo="742" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="597" ippo="597" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="771" ippo="771" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="287" ippo="287" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="469" invs="559,251" ippo="469" s="g" ts="2018-01-09 15:50:06">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((1 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo id="46" ippo="46">
     <d>
      <invs>
       <arg a="1" i="219,495,1073"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="177" invs="665" ippo="177" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#287"/>
    </ppo>
    <ppo id="83" ippo="83"/>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="263" ippo="263" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="336" ippo="336" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="603" ippo="603">
     <d>
      <invs>
       <arg a="3" i="56,450,1008"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="238" ippo="238" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="a" id="621" ids="1" invs="156" ippo="621" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo deps="f" id="664" invs="683" ippo="664" s="g" ts="2018-01-09 15:50:06">
     <e txt="assignedAt#270_xx_assignedAt#297_xx_assignedAt#317_xx_assignedAt#330"/>
    </ppo>
    <ppo deps="f" id="29" invs="835" ippo="29" s="g" ts="2018-01-09 15:50:06">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(input_buffer_8_)#init"/>
    </ppo>
    <ppo id="451" ippo="451">
     <d>
      <invs>
       <arg a="1" i="194,822"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="43" ids="1" invs="219" ippo="43" s="g" ts="2018-01-09 15:50:06">
     <e txt="condition not-null(output_buffer) delegated to api"/>
    </ppo>
    <ppo id="86" ippo="86"/>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="620" ippo="620" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
