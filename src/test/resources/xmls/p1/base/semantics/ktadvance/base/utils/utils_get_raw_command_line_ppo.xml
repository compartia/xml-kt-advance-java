<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:30:18">
   <application file="base/utils.c"/>
  </header>
  <function fname="get_raw_command_line">
   <ppos>
    <ppo deps="s" id="239" ippo="239" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="182" ippo="182"/>
    <ppo deps="s" id="18" ippo="18" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo deps="s" id="50" ippo="50" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="80" ippo="80" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="104" invs="242" ippo="104" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984_xx_assignedAt#2988"/>
    </ppo>
    <ppo id="188" ippo="188">
     <d>
      <invs>
       <arg a="4" i="134,202,248"/>
       <arg a="3" i="65,171,368"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="219" invs="219" ippo="219" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018"/>
    </ppo>
    <ppo deps="s" id="258" ippo="258" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="103" ippo="103" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="189" ippo="189" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="102" ippo="102" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="272" ippo="272" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="f" id="145" invs="10" ippo="145" s="g" ts="2018-01-09 15:50:51">
     <e txt="return value from function find_command satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="15" ids="1" invs="67" ippo="15" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(raw_command) delegated to api"/>
    </ppo>
    <ppo id="221" ippo="221">
     <d>
      <invs>
       <arg a="1" i="24,156,363"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:process_macros @3028 r:3"/>
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:find_command @2993 r:3,freed(by:process_macros @3028 r:3,freed(by:strip @3001 r:3,freed(by:strip @3030 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="180" ippo="180" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="275" invs="106" ippo="275" s="g" ts="2018-01-09 15:50:51">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="121" ippo="121" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo id="141" ippo="141">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_command"/>
       <msg t="no function summary for find_command"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="216" ippo="216" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="168" invs="40" ippo="168" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper-bound value is initial value of parameter raw_command satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="152" ippo="152" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo deps="s" id="205" ippo="205" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="160" ippo="160" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="204" ippo="204">
     <d>
      <invs>
       <arg a="4" i="83,182,213"/>
       <arg a="3" i="16,148,357"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="235" ippo="235">
     <d>
      <invs>
       <arg a="4" i="140,205,252"/>
       <arg a="3" i="77,176,370"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="a" id="246" ids="2" invs="27" ippo="246" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo id="195" ippo="195">
     <d>
      <invs>
       <arg a="3" i="64"/>
       <arg a="2" i="132,201,247"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="54" invs="109,38" ippo="54" s="g" ts="2018-01-09 15:50:51">
     <e txt="result of addition is less than MAX: satisfies((31 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo deps="f" id="124" invs="66" ippo="124" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper-bound value is initial value of parameter raw_command satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="140" ippo="140" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="77" invs="89" ippo="77" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="f" id="242" invs="223" ippo="242" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018_xx_assignedAt#3022"/>
    </ppo>
    <ppo id="159" ippo="159">
     <d>
      <invs>
       <arg a="4" i="17,184"/>
       <arg a="3" i="20,150,267"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (raw_command_3_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="16" ids="3" invs="67,71" ippo="319" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition ptr-upperbound(((raw_command +i 0):char) delegated to api"/>
    </ppo>
    <ppo deps="f" id="21" invs="67" ippo="21" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper-bound value is initial value of parameter raw_command satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="macro_argv is global"/>
    </ppo>
    <ppo id="131" ippo="131">
     <d>
      <invs>
       <arg a="4" i="12,178"/>
       <arg a="3" i="14,147,261"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (raw_command_3_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="231" invs="252" ippo="231" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018"/>
    </ppo>
    <ppo deps="s" id="68" ippo="68" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="213" invs="244" ippo="213" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018_xx_assignedAt#3022"/>
    </ppo>
    <ppo id="122" ippo="122">
     <d>
      <invs>
       <arg a="1" i="66,173,296,372,374,375"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="181" ippo="181" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="237" ippo="237" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="a" id="85" ids="1" invs="45" ippo="85" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(raw_command) delegated to api"/>
    </ppo>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="26" invs="233" ippo="26" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2975"/>
    </ppo>
    <ppo deps="s" id="105" ippo="105" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="225" ippo="225" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="247" ippo="247">
     <d>
      <invs>
       <arg a="1" i="27,158,365"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:process_macros @3028 r:3"/>
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:find_command @2993 r:3,freed(by:process_macros @3028 r:3,freed(by:strip @3001 r:3,freed(by:strip @3030 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="135" ippo="135" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="63" ids="2" invs="29" ippo="63" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo id="279" ippo="279">
     <d>
      <invs>
       <arg a="1" i="35"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_arg_buffer_137"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="176" ippo="176">
     <d>
      <invs>
       <arg a="4" i="93,188,216"/>
       <arg a="3" i="23,154,361"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="186" ippo="186">
     <d>
      <invs>
       <arg a="1" i="65,171,368"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3"/>
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:find_command @2993 r:3,freed(by:strip @3001 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="192" ippo="192" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="211" ippo="211">
     <d>
      <invs>
       <arg a="3" i="39"/>
       <arg a="2" i="112,193,234"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="259" ippo="259">
     <d>
      <invs>
       <arg a="3" i="56"/>
       <arg a="2" i="122,198,241"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="271" ippo="271" s="g">
     <e txt="macro_options is a function parameter"/>
    </ppo>
    <ppo deps="s" id="125" ippo="125" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="143" invs="146" ippo="143" s="g" ts="2018-01-09 15:50:51">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_command"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo id="19" ippo="19">
     <d>
      <invs>
       <arg a="1" i="67,175,298"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="227" ippo="227" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="17" ippo="17" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="172" invs="216" ippo="172" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3004"/>
    </ppo>
    <ppo deps="s" id="228" ippo="228" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="226" ippo="226" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="199" ippo="199" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo deps="s" id="264" ippo="264" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="269" ippo="269" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="117" ippo="117" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="208" ippo="208" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="60" ippo="60"/>
    <ppo deps="f" id="150" invs="179" ippo="150" s="g" ts="2018-01-09 15:50:51">
     <e txt="value 1 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="187" invs="134" ippo="187" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for arg_index is 0"/>
    </ppo>
    <ppo deps="s" id="244" ippo="244" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo deps="s" id="161" ippo="161" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="142" invs="209" ippo="142" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2993(rv:find_command)"/>
    </ppo>
    <ppo deps="f" id="144" invs="260" ippo="144" s="g" ts="2018-01-09 15:50:51">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_command(_)#return"/>
    </ppo>
    <ppo id="137" ippo="137">
     <d>
      <invs>
       <arg a="1" i="14,147,261"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1,freed(by:find_command @2993 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="262" invs="230" ippo="262" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018_xx_assignedAt#3022"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="243" ippo="243"/>
    <ppo id="157" ippo="157">
     <d>
      <invs>
       <arg a="1" i="20,150,267"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1,freed(by:find_command @2993 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="194" ippo="194" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="f" id="212" invs="130" ippo="212" s="g" ts="2018-01-09 15:50:51">
     <e txt="value 0 is non-negative and target type maximum value is larger than or equal to source type maximum value"/>
    </ppo>
    <ppo deps="f" id="87" invs="117" ippo="87" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="f" id="84" invs="237" ippo="84" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984_xx_assignedAt#2988"/>
    </ppo>
    <ppo deps="s" id="183" ippo="183" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo deps="s" id="171" ippo="171" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo id="34" ippo="34"/>
    <ppo deps="s" id="274" ippo="274" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="241" invs="100" ippo="241" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper bound of index value: 8190, is less than length: 8192"/>
    </ppo>
    <ppo deps="s" id="251" ippo="251" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="169" ippo="169" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo id="281" ippo="281">
     <d>
      <invs>
       <arg a="1" i="35"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="127" ippo="127" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="22" ippo="320" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="215" ippo="215" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="222" invs="95" ippo="222" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for arg_index is 1"/>
    </ppo>
    <ppo deps="f" id="286" invs="246" ippo="286" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3010"/>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="macro_argv is global"/>
    </ppo>
    <ppo id="148" ippo="148"/>
    <ppo deps="f" id="65" invs="104" ippo="65" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo id="280" ippo="280">
     <d>
      <invs>
       <arg a="3" i="35"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="44" invs="119" ippo="44" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper bound of index value: 31, is less than length: 32"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="120" ippo="120" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="184" invs="248" ippo="184" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3004"/>
    </ppo>
    <ppo deps="s" id="162" ippo="162" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="72" ippo="72"/>
    <ppo deps="f" id="261" invs="108" ippo="261" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper bound of index value: 8191, is less than length: 8192"/>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="64" ippo="64">
     <d>
      <invs>
       <arg a="1" i="29,160,282"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="93" ippo="93"/>
    <ppo deps="s" id="119" ippo="119" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="175" invs="93" ippo="175" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for arg_index is 0"/>
    </ppo>
    <ppo deps="f" id="276" invs="106" ippo="276" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper bound of index value: 31, is less than length: 32"/>
    </ppo>
    <ppo id="233" ippo="233">
     <d>
      <invs>
       <arg a="1" i="77,176,370"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:process_macros @3028 r:3"/>
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:find_command @2993 r:3,freed(by:process_macros @3028 r:3,freed(by:strip @3001 r:3,freed(by:strip @3030 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="92" ippo="92" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="10" ippo="321" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="224" ippo="224" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="136" ippo="136" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo deps="f" id="254" invs="225" ippo="254" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018_xx_assignedAt#3022"/>
    </ppo>
    <ppo deps="s" id="153" ippo="153" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="f" id="39" invs="221" ippo="39" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2975"/>
    </ppo>
    <ppo deps="s" id="207" ippo="207" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="88" ippo="88">
     <d>
      <invs>
       <arg a="4" i="117,116,194,237"/>
       <arg a="3" i="45,165,288"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (raw_command_3_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="174" ippo="174">
     <d>
      <invs>
       <arg a="1" i="23,154,361"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3"/>
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:find_command @2993 r:3,freed(by:strip @3001 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="126" invs="235" ippo="126" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2993(rv:find_command)"/>
    </ppo>
    <ppo deps="s" id="179" ippo="179" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="20" invs="67" ippo="20" s="g" ts="2018-01-09 15:50:51">
     <e txt="initial value of parameter raw_command satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="129" ippo="129"/>
    <ppo deps="s" id="108" ippo="108" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo id="166" ippo="166">
     <d>
      <invs>
       <arg a="1" i="40,162,284,346,351,367"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1"/>
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1,freed(by:find_command @2993 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="a" id="130" ids="1" invs="14" ippo="130" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(raw_command) delegated to api"/>
    </ppo>
    <ppo deps="s" id="25" ippo="322" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="49" ippo="49" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="52" invs="232" ippo="52" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2975"/>
    </ppo>
    <ppo deps="f" id="200" invs="213" ippo="200" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3004_xx_assignedAt#3018"/>
    </ppo>
    <ppo deps="s" id="250" ippo="250" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="30" invs="105" ippo="30" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper bound of index value: 31, is less than length: 32"/>
    </ppo>
    <ppo deps="f" id="62" invs="226" ippo="62" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984"/>
    </ppo>
    <ppo deps="a" id="185" ids="2" invs="65" ippo="185" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo deps="s" id="284" ippo="284" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="a" id="106" ids="4" invs="124,57" ippo="106" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition int-overflow(((((buffer_length - 2):int + 1):int, int) delegated to api"/>
    </ppo>
    <ppo deps="s" id="206" ippo="206" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="14" ippo="323" s="g">
     <e txt="one of the arguments is a string literal: "/>
    </ppo>
    <ppo deps="f" id="111" invs="243" ippo="111" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984_xx_assignedAt#2988"/>
    </ppo>
    <ppo deps="s" id="266" ippo="266" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="277" invs="229" ippo="277" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3010"/>
    </ppo>
    <ppo deps="s" id="82" ippo="82" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="133" ippo="133">
     <d>
      <invs>
       <arg a="4" i="12,178"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="89" ippo="89" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="56" ippo="56" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="79" ippo="79" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="217" ippo="217"/>
    <ppo deps="s" id="270" ippo="270" s="g">
     <e txt="maximum constant value 8192 fits in type int"/>
    </ppo>
    <ppo deps="s" id="164" ippo="164" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="31" invs="227" ippo="31" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2975"/>
    </ppo>
    <ppo deps="s" id="12" ippo="324" s="g">
     <e txt="upperbound of constant string argument: "/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="209" invs="234" ippo="209" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3004_xx_assignedAt#3018"/>
    </ppo>
    <ppo deps="s" id="69" ippo="69" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="201" ids="2" invs="16" ippo="201" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo deps="f" id="203" invs="83" ippo="203" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for arg_index is 0"/>
    </ppo>
    <ppo deps="a" id="96" ids="2" invs="44" ippo="96" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo deps="f" id="288" invs="131,62" ippo="288" s="g" ts="2018-01-09 15:50:51">
     <e txt="result of addition is less than MAX: satisfies((31 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo deps="f" id="45" invs="238" ippo="45" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2975"/>
    </ppo>
    <ppo id="78" ippo="78">
     <d>
      <invs>
       <arg a="4" i="89,186,214"/>
       <arg a="3" i="22,152,271"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="118" ippo="118" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="81" ippo="81" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="236" ippo="236" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="23" ippo="325" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="285" ippo="285" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="273" ippo="273" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="70" ippo="70" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="134" ippo="134"/>
    <ppo deps="s" id="24" ippo="326" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="94" ippo="94" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo id="109" ippo="109">
     <d>
      <invs>
       <arg a="3" i="72"/>
       <arg a="2" i="136,203,251"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="190" ippo="190" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="167" invs="40" ippo="167" s="g" ts="2018-01-09 15:50:51">
     <e txt="initial value of parameter raw_command satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="76" ippo="76">
     <d>
      <invs>
       <arg a="1" i="22,152,271"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="197" ippo="197" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="245" invs="222" ippo="245" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018"/>
    </ppo>
    <ppo deps="f" id="57" invs="197,54" ippo="57" s="g" ts="2018-01-09 15:50:51">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((1 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo deps="a" id="156" ids="1" invs="20" ippo="156" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(raw_command) delegated to api"/>
    </ppo>
    <ppo deps="f" id="257" invs="241" ippo="257" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3018"/>
    </ppo>
    <ppo deps="f" id="98" invs="118" ippo="98" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for x is 0"/>
    </ppo>
    <ppo deps="s" id="214" ippo="214" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="11" ippo="327" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="202" ippo="202">
     <d>
      <invs>
       <arg a="1" i="16,148,357"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:process_macros @3028 r:3"/>
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3,freed(by:find_command @2993 r:3,freed(by:process_macros @3028 r:3,freed(by:strip @3001 r:3,freed(by:strip @3030 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="9" ippo="9" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="s" id="13" ippo="328" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="a" id="220" ids="2" invs="24" ippo="220" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo deps="s" id="51" ippo="51" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="f" id="107" invs="251" ippo="107" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984"/>
    </ppo>
    <ppo deps="f" id="146" invs="10" ippo="146" s="g" ts="2018-01-09 15:50:51">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_command"/>
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: find_command"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_command satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="249" ippo="249">
     <d>
      <invs>
       <arg a="4" i="101,191,222"/>
       <arg a="3" i="27,158,365"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="90" ippo="90" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="268" ippo="268" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="40" ippo="40"/>
    <ppo deps="s" id="210" ippo="210" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="67" ippo="67" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="55" invs="239" ippo="55" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984_xx_assignedAt#2988"/>
    </ppo>
    <ppo id="132" ippo="132"/>
    <ppo deps="s" id="110" ippo="110" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo deps="f" id="193" invs="247" ippo="193" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3004"/>
    </ppo>
    <ppo deps="s" id="59" ippo="59" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="s" id="165" ippo="165" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo deps="f" id="196" invs="249" ippo="196" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#3010"/>
    </ppo>
    <ppo id="223" ippo="223">
     <d>
      <invs>
       <arg a="4" i="95,189,219"/>
       <arg a="3" i="24,156,363"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo deps="s" id="155" ippo="155" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="116" ippo="116" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="154" invs="185,18" ippo="154" s="g" ts="2018-01-09 15:50:51">
     <e txt="result of subtraction is greater than or equal to MIN: satisfies ((1 - 1) &gt;= -2147483648)"/>
    </ppo>
    <ppo deps="s" id="151" ippo="151" s="g">
     <e txt="buffer_length is a function parameter"/>
    </ppo>
    <ppo deps="f" id="38" invs="98" ippo="38" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper bound of index value: 31, is less than length: 32"/>
    </ppo>
    <ppo deps="s" id="61" ippo="61" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo deps="a" id="158" ids="5" invs="20,17" ippo="158" s="g" ts="2018-01-09 15:50:51">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="4">
        <msg t="[4]:lower-bound expr: ((buffer_length_7_)#init - 1) is external"/>
       </arg>
      </amsgs>
     </d>
     <e txt="condition ptr-lowerbound(((raw_command +i ((buffer_length - 1):int):char) delegated to api"/>
    </ppo>
    <ppo id="113" ippo="113">
     <d>
      <invs>
       <arg a="1" i="58,169,292"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="138" invs="14" ippo="138" s="g" ts="2018-01-09 15:50:51">
     <e txt="initial value of parameter raw_command satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="256" invs="102,28" ippo="256" s="g" ts="2018-01-09 15:50:51">
     <e txt="result of addition is less than MAX: satisfies((8190 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo deps="f" id="278" invs="35" ippo="278" s="g" ts="2018-01-09 15:50:51">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_arg_buffer_137"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable arg_buffer is not null"/>
    </ppo>
    <ppo deps="s" id="58" ippo="58" s="g">
     <e txt="subtract non-negative number:  value is 1"/>
    </ppo>
    <ppo id="170" ippo="170"/>
    <ppo deps="f" id="74" invs="214" ippo="74" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984"/>
    </ppo>
    <ppo deps="a" id="112" ids="1" invs="58" ippo="112" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(raw_command) delegated to api"/>
    </ppo>
    <ppo deps="s" id="178" ippo="178" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="255" ippo="255" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="a" id="75" ids="2" invs="22" ippo="75" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo deps="f" id="123" invs="66" ippo="123" s="g" ts="2018-01-09 15:50:51">
     <e txt="initial value of parameter raw_command satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="267" ippo="267" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="139" invs="14" ippo="139" s="g" ts="2018-01-09 15:50:51">
     <e txt="upper-bound value is initial value of parameter raw_command satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="147" ippo="147"/>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="casting from char to int is safe"/>
    </ppo>
    <ppo deps="f" id="234" invs="140" ippo="234" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for arg_index is 1"/>
    </ppo>
    <ppo deps="a" id="173" ids="2" invs="23" ippo="173" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo deps="f" id="260" invs="108" ippo="260" s="g" ts="2018-01-09 15:50:51">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="53" ippo="53" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="f" id="240" invs="100" ippo="240" s="g" ts="2018-01-09 15:50:51">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="191" ippo="191" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="218" ippo="218" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo deps="s" id="47" ippo="47" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo deps="s" id="91" ippo="91" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="282" ippo="282" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="97" ippo="97">
     <d>
      <invs>
       <arg a="1" i="44,164,287"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:3"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="163" ippo="163" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="230" ippo="230" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
    <ppo id="99" ippo="99">
     <d>
      <invs>
       <arg a="4" i="118,195,236"/>
       <arg a="3" i="44,164,287"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="114" invs="129" ippo="114" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for y is 0"/>
    </ppo>
    <ppo deps="f" id="37" invs="98" ippo="37" s="g" ts="2018-01-09 15:50:51">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="252" ippo="252" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="265" ippo="265" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="248" invs="101" ippo="248" s="g" ts="2018-01-09 15:50:51">
     <e txt="non-negative pointer increment: lower bound for arg_index is 1"/>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="global variable macro_argv with offset [x] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="283" ippo="283" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="f" id="95" invs="236" ippo="95" s="g" ts="2018-01-09 15:50:51">
     <e txt="assignedAt#2984"/>
    </ppo>
    <ppo id="149" ippo="149"/>
    <ppo id="198" ippo="198"/>
    <ppo deps="a" id="232" ids="2" invs="77" ippo="232" s="g" ts="2018-01-09 15:50:51">
     <e txt="condition not-null(cmd) delegated to api"/>
    </ppo>
    <ppo id="115" ippo="115">
     <d>
      <invs>
       <arg a="4" i="129,128,200,243"/>
       <arg a="3" i="58,169,292"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (raw_command_3_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="42" ippo="42"/>
    <ppo deps="s" id="253" ippo="253" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="287" ippo="287" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo id="229" ippo="229"/>
    <ppo deps="s" id="46" ippo="46" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="177" ippo="177" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="66" ippo="66">
     <d>
      <invs>
       <arg a="4" i="104,192,226"/>
       <arg a="3" i="29,160,282"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (cmd_5_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="83" ippo="83" s="g">
     <e txt="raw_command is a function parameter"/>
    </ppo>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="263" ippo="263" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="238" ippo="238" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="29" invs="105" ippo="29" s="g" ts="2018-01-09 15:50:51">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="f" id="43" invs="119" ippo="43" s="g" ts="2018-01-09 15:50:51">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo id="86" ippo="86">
     <d>
      <invs>
       <arg a="1" i="45,165,288"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:clear_argv_macros @2961 r:1"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="cmd is a function parameter"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
