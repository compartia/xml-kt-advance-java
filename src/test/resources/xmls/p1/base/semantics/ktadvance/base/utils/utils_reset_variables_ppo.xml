<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:29:38">
   <application file="base/utils.c"/>
  </header>
  <function fname="reset_variables">
   <ppos>
    <ppo deps="s" id="182" ippo="182" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="18" ippo="18" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="129" ippo="129" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="50" ippo="219" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="80" invs="324" ippo="80" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5352(rv:strdup)"/>
    </ppo>
    <ppo id="108" ippo="108">
     <d>
      <invs>
       <arg a="1" i="150,200,323,374"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="166" ippo="166" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="f" id="104" invs="323" ippo="104" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5355(rv:strdup)"/>
    </ppo>
    <ppo deps="s" id="130" ippo="130" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="49" ippo="220" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="52" ippo="221" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="188" ippo="188" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="30" ippo="30" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="62" ippo="62" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="103" ippo="103" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="185" ippo="185" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="189" ippo="189" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="102" ippo="102" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="106" invs="150" ippo="106" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="14" ippo="14" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="111" invs="169" ippo="111" s="g" ts="2018-01-09 15:50:13">
     <e txt="upper bound of index value: 98, is less than length: 99"/>
    </ppo>
    <ppo deps="f" id="145" invs="319" ippo="145" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5459"/>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="upperbound of constant string argument: 30-character string"/>
    </ppo>
    <ppo deps="f" id="82" invs="151" ippo="82" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="133" ippo="133" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="89" ippo="89" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="180" ippo="180" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="56" invs="326" ippo="56" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5350(rv:strdup)"/>
    </ppo>
    <ppo deps="s" id="79" ippo="79" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="164" ippo="164" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="121" invs="157,93" ippo="121" s="g" ts="2018-01-09 15:50:13">
     <e txt="result of addition is less than MAX: satisfies((98 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo id="12" ippo="12">
     <d>
      <invs>
       <arg a="1" i="118,197,310,371"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="141" ippo="141" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="168" ippo="168" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="69" invs="92" ippo="69" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="152" ippo="152" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="8" invs="310" ippo="8" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5346(rv:strdup)"/>
    </ppo>
    <ppo deps="f" id="160" invs="162,104" ippo="160" s="g" ts="2018-01-09 15:50:13">
     <e txt="result of addition is less than MAX: satisfies((5 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo id="96" ippo="96">
     <d>
      <invs>
       <arg a="1" i="123,198,314,372"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="195" ippo="195" s="g">
     <e txt="value 3 is less than minimum word size (16"/>
    </ppo>
    <ppo deps="f" id="45" invs="109" ippo="45" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="54" ippo="222" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="78" ippo="78" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="124" invs="163" ippo="124" s="g" ts="2018-01-09 15:50:13">
     <e txt="upper bound of index value: 31, is less than length: 32"/>
    </ppo>
    <ppo deps="s" id="118" ippo="118" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="140" ippo="140" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="81" invs="151" ippo="81" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="23" invs="346" ippo="23" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_2"/>
    </ppo>
    <ppo deps="s" id="77" ippo="77" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="70" invs="92" ippo="70" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="159" ippo="159" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="upperbound of constant string argument: 32-character string"/>
    </ppo>
    <ppo deps="f" id="134" invs="173,149" ippo="134" s="g" ts="2018-01-09 15:50:13">
     <e txt="result of addition is less than MAX: satisfies((31 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="24" ippo="24">
     <d>
      <invs>
       <arg a="1" i="94,195,299,346"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="21" invs="94" ippo="21" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="94" invs="123" ippo="94" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="109" invs="325" ippo="109" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5453"/>
    </ppo>
    <ppo deps="s" id="190" ippo="190" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="167" ippo="167" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo id="36" ippo="36">
     <d>
      <invs>
       <arg a="1" i="148,199,320,373"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="76" ippo="76" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="131" ippo="131" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="197" ippo="197" s="g">
     <e txt="value 3 is less than minimum word size (16"/>
    </ppo>
    <ppo deps="f" id="57" invs="154" ippo="57" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="68" invs="295" ippo="68" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5351(rv:strdup)"/>
    </ppo>
    <ppo deps="s" id="156" ippo="156" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="122" invs="313" ippo="122" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5456"/>
    </ppo>
    <ppo deps="s" id="181" ippo="181" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="85" ippo="85" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="26" ippo="26" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="98" ippo="98" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="105" invs="150" ippo="105" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="11" invs="371" ippo="11" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_1"/>
    </ppo>
    <ppo deps="f" id="9" invs="118" ippo="9" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="135" invs="301" ippo="135" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5459"/>
    </ppo>
    <ppo deps="s" id="13" ippo="13" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="upperbound of constant string argument: 27-character string"/>
    </ppo>
    <ppo deps="s" id="176" ippo="176" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="186" ippo="186" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="51" ippo="223" s="g">
     <e txt="upperbound of constant string argument: "/>
    </ppo>
    <ppo deps="f" id="107" invs="374" ippo="107" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_9"/>
    </ppo>
    <ppo deps="s" id="146" ippo="146" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="192" ippo="192" s="g">
     <e txt=" value is 3"/>
    </ppo>
    <ppo deps="f" id="125" invs="312" ippo="125" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5456"/>
    </ppo>
    <ppo deps="s" id="143" ippo="143" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="19" ippo="19" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="32" invs="320" ippo="32" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5348(rv:strdup)"/>
    </ppo>
    <ppo deps="s" id="17" ippo="17" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="90" ippo="90" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="172" ippo="172" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="40" ippo="40" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="67" ippo="67" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="55" ippo="224" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="117" ippo="117" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="132" invs="322" ippo="132" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5456"/>
    </ppo>
    <ppo deps="f" id="110" invs="169" ippo="110" s="g" ts="2018-01-09 15:50:13">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="193" ippo="193" s="g">
     <e txt="value 3 is less than minimum word size (16"/>
    </ppo>
    <ppo id="60" ippo="60">
     <d>
      <invs>
       <arg a="1" i="154,202,326,376"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="150" invs="155" ippo="150" s="g" ts="2018-01-09 15:50:13">
     <e txt="upper bound of index value: 5, is less than length: 6"/>
    </ppo>
    <ppo deps="f" id="59" invs="376" ippo="59" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_5"/>
    </ppo>
    <ppo deps="s" id="165" ippo="165" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="187" ippo="187" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="161" ippo="161" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="196" ippo="196" s="g">
     <e txt=" value is 3"/>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="155" ippo="155" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="142" ippo="142" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="144" ippo="144" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="116" ippo="116" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="137" invs="167" ippo="137" s="g" ts="2018-01-09 15:50:13">
     <e txt="upper bound of index value: 255, is less than length: 256"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="upperbound of constant string argument: 35-character string"/>
    </ppo>
    <ppo deps="s" id="154" ippo="154" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="151" invs="294" ippo="151" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5462"/>
    </ppo>
    <ppo deps="s" id="157" ippo="157" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="194" ippo="194" s="g">
     <e txt=" value is 3"/>
    </ppo>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="61" ippo="61" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="158" invs="307" ippo="158" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5462"/>
    </ppo>
    <ppo deps="s" id="87" ippo="87" s="g">
     <e txt="upperbound of constant string argument: nagios"/>
    </ppo>
    <ppo deps="s" id="113" ippo="113" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="138" invs="315" ippo="138" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5459"/>
    </ppo>
    <ppo deps="f" id="58" invs="154" ippo="58" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="84" ippo="84">
     <d>
      <invs>
       <arg a="1" i="151,201,324,375"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="170" ippo="170" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="183" ippo="183" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="171" ippo="171" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="34" invs="148" ippo="34" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="74" ippo="74" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="112" invs="316" ippo="112" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5453"/>
    </ppo>
    <ppo deps="s" id="178" ippo="178" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="75" ippo="75" s="g">
     <e txt="upperbound of constant string argument: 31-character string"/>
    </ppo>
    <ppo deps="f" id="123" invs="163" ippo="123" s="g" ts="2018-01-09 15:50:13">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo id="48" ippo="48">
     <d>
      <invs>
       <arg a="1" i="109,196,308,369"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="169" ippo="169" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="127" ippo="127" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="139" ippo="139" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="147" invs="172,132" ippo="147" s="g" ts="2018-01-09 15:50:13">
     <e txt="result of addition is less than MAX: satisfies((255 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo deps="f" id="71" invs="345" ippo="71" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_6"/>
    </ppo>
    <ppo deps="f" id="22" invs="94" ippo="22" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="173" ippo="173" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="53" ippo="225" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="148" invs="317" ippo="148" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5462"/>
    </ppo>
    <ppo deps="s" id="65" ippo="65" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="191" ippo="191" s="g">
     <e txt="casting the result of a bitwise manipulation to an unsigned"/>
    </ppo>
    <ppo deps="f" id="47" invs="369" ippo="47" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_4"/>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="44" invs="308" ippo="44" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5349(rv:strdup)"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="91" ippo="91" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="120" ippo="120" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="184" ippo="184" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="97" ippo="97" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="162" ippo="162" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="163" ippo="163" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="72" ippo="72">
     <d>
      <invs>
       <arg a="1" i="92,194,295,345"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="upperbound of constant string argument: nagios"/>
    </ppo>
    <ppo deps="s" id="114" ippo="114" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="33" invs="148" ippo="33" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="37" ippo="37" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="64" ippo="64" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="93" invs="123" ippo="93" s="g" ts="2018-01-09 15:50:13">
     <e txt="return value from function strdup satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="119" invs="298" ippo="119" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5453"/>
    </ppo>
    <ppo deps="s" id="175" ippo="175" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="95" invs="372" ippo="95" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_8"/>
    </ppo>
    <ppo deps="f" id="149" invs="155" ippo="149" s="g" ts="2018-01-09 15:50:13">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="f" id="92" invs="314" ippo="92" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5354(rv:strdup)"/>
    </ppo>
    <ppo deps="s" id="115" ippo="115" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="10" invs="118" ippo="10" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="42" ippo="42" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="136" invs="167" ippo="136" s="g" ts="2018-01-09 15:50:13">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="f" id="46" invs="109" ippo="46" s="g" ts="2018-01-09 15:50:13">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strdup"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strdup satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="153" ippo="153" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="177" ippo="177" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="upperbound of constant string argument: 33-character string"/>
    </ppo>
    <ppo deps="s" id="66" ippo="66" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="83" invs="375" ippo="83" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_7"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="35" invs="373" ippo="35" s="g" ts="2018-01-09 15:50:13">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_3"/>
    </ppo>
    <ppo deps="s" id="174" ippo="174" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="126" ippo="126" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="179" ippo="179" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="43" ippo="43" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="86" ippo="86" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="20" invs="299" ippo="20" s="g" ts="2018-01-09 15:50:13">
     <e txt="assignedAt#5347(rv:strdup)"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
