<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:30:16">
   <application file="base/utils.c"/>
  </header>
  <function fname="command_file_worker_thread">
   <ppos>
    <ppo id="18" ippo="18">
     <d>
      <invs>
       <arg a="1" i="24,78,99"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: "/>
        <msg t="[1]:potential frees not excluded:"/>
        <msg t="[1]:potential frees not excluded:"/>
        <msg t="[1]:potential frees not excluded:"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="129" ippo="129"/>
    <ppo id="50" ippo="50"/>
    <ppo deps="s" id="80" ippo="80" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="108" ippo="108" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="104" ippo="104" s="g">
     <e txt="global variable command_file_fp valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo id="130" ippo="130"/>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="49" ippo="49"/>
    <ppo deps="s" id="52" ippo="52" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="f" id="4" invs="36" ippo="4" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar___cancel_buf_10"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable __cancel_buf is pointing to valid memory"/>
    </ppo>
    <ppo deps="s" id="30" ippo="30" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="62" ippo="62" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="s" id="103" ippo="103" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="102" ippo="102" s="g">
     <e txt="command_file_fp is global"/>
    </ppo>
    <ppo deps="s" id="106" ippo="106" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="14" ippo="14">
     <d>
      <invs>
       <arg a="1" i="23,79,100"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: "/>
        <msg t="[1]:potential frees not excluded:"/>
        <msg t="[1]:potential frees not excluded:"/>
        <msg t="[1]:potential frees not excluded:"/>
        <msg t="[1]:memory base: addrof_globalvar_cleanup_command_file_worker_thread"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="111" ippo="111" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="145" ippo="145" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="15" invs="23" ippo="15" s="g" ts="2018-01-09 15:50:49">
     <e txt="lower bound value is address of global variable cleanup_command_file_worker_thread"/>
    </ppo>
    <ppo deps="f" id="82" invs="82" ippo="82" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4955"/>
    </ppo>
    <ppo deps="s" id="133" ippo="133" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="89" ippo="89" s="g">
     <e txt="global variable command_file_fp is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="56" ippo="56" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="79" ippo="79" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="121" ippo="121" s="g">
     <e txt="address of variable tv"/>
    </ppo>
    <ppo deps="f" id="12" invs="79" ippo="12" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4933(fptrcleanup_command_file_worker_thread8290)"/>
    </ppo>
    <ppo deps="s" id="141" ippo="141" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="69" ippo="69" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="152" ippo="152" s="g">
     <e txt="external_command_buffer_slots is global"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="casting from int to long is safe"/>
    </ppo>
    <ppo deps="s" id="160" ippo="160" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="96" ippo="96" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="45" ippo="45" s="g">
     <e txt="null pointer cannot be dereferenced, and hence target cannot be initialized (acceptability of null is checked separately)"/>
    </ppo>
    <ppo deps="s" id="54" ippo="54" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="78" ippo="78" s="g">
     <e txt="external_command_buffer is global"/>
    </ppo>
    <ppo deps="s" id="124" ippo="124" s="g">
     <e txt="null pointer cannot be dereferenced, and hence target cannot be initialized (acceptability of null is checked separately)"/>
    </ppo>
    <ppo deps="s" id="118" ippo="118" s="g">
     <e txt="external_command_buffer_slots is global"/>
    </ppo>
    <ppo deps="s" id="140" ippo="140" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="81" ippo="81" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="one of the arguments is a null pointer "/>
    </ppo>
    <ppo deps="s" id="23" ippo="23" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="77" ippo="77" s="g">
     <e txt="address of variable external_command_buffer"/>
    </ppo>
    <ppo deps="s" id="70" ippo="70" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="159" ippo="159" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="134" ippo="134" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="16" invs="23" ippo="16" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:memory address: (1)address"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound-value is address of global variable cleanup_command_file_worker_thread"/>
    </ppo>
    <ppo deps="s" id="24" ippo="24" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="21" ippo="21" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="94" ippo="94" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="109" ippo="109" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="76" ippo="76" s="g">
     <e txt="external_command_buffer is global"/>
    </ppo>
    <ppo id="131" ippo="131"/>
    <ppo deps="s" id="57" ippo="57" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="s" id="68" ippo="68" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="156" ippo="156" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="122" ippo="122"/>
    <ppo id="85" ippo="85"/>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="26" ippo="26" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="98" ippo="98" s="g">
     <e txt="maximum constant value 1023 fits in type int"/>
    </ppo>
    <ppo deps="s" id="105" ippo="105" s="g">
     <e txt="global variable command_file_fp is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="11" invs="4" ippo="11" s="g" ts="2018-01-09 15:50:49">
     <e txt="variable __cancel_routine is initialized with function pointer cleanup_command_file_worker_thread"/>
    </ppo>
    <ppo deps="f" id="9" invs="89" ippo="9" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4933"/>
    </ppo>
    <ppo deps="s" id="135" ippo="135" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="13" invs="23" ippo="13" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_globalvar_cleanup_command_file_worker_thread"/>
       </arg>
      </amsgs>
     </d>
     <e txt="value is address of global variable cleanup_command_file_worker_thread"/>
    </ppo>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="51" ippo="51"/>
    <ppo deps="f" id="107" invs="84" ippo="107" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4969(rv:fgets)"/>
    </ppo>
    <ppo deps="s" id="146" ippo="146" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="125" ippo="125" s="g">
     <e txt="null pointer cannot be dereferenced, and hence target cannot be initialized (acceptability of null is checked separately)"/>
    </ppo>
    <ppo deps="s" id="143" ippo="143" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="19" ippo="19">
     <d>
      <invs>
       <arg a="2" i="24,78,99"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="17" invs="78" ippo="17" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4933"/>
    </ppo>
    <ppo id="90" ippo="90"/>
    <ppo deps="s" id="40" ippo="40" s="g">
     <e txt="casting from int to long is safe"/>
    </ppo>
    <ppo deps="s" id="67" ippo="67" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="55" ippo="55" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="117" invs="85" ippo="117" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4955"/>
    </ppo>
    <ppo deps="s" id="132" ippo="132" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="s" id="110" ippo="110" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="60" ippo="60" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="150" ippo="150" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="59" ippo="59" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="6" invs="36" ippo="6" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:memory address: (2)address"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is address of stack variable __cancel_buf"/>
    </ppo>
    <ppo deps="s" id="155" ippo="155" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="142" ippo="142" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="s" id="144" ippo="144" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="116" invs="86" ippo="116" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4976(rv:submit_external_command)"/>
    </ppo>
    <ppo deps="s" id="137" ippo="137" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="f" id="27" invs="32" ippo="27" s="r" ts="2018-01-09 15:50:49">
     <e txt="value is explicitly set to NULL"/>
    </ppo>
    <ppo deps="s" id="154" ippo="154" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="151" invs="81" ippo="151" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4955"/>
    </ppo>
    <ppo deps="s" id="157" ippo="157" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="61" ippo="61" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="158" ippo="158" s="g">
     <e txt="null pointer is a non-local address"/>
    </ppo>
    <ppo deps="s" id="87" ippo="87" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="113" ippo="113" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="138" ippo="138" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="58" ippo="58" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="84" ippo="84"/>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="s" id="74" ippo="74" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="112" ippo="112" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="75" ippo="75" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="123" ippo="123" s="g">
     <e txt="null pointer cannot be dereferenced, and hence target cannot be initialized (acceptability of null is checked separately)"/>
    </ppo>
    <ppo deps="s" id="48" ippo="48" s="g">
     <e txt="one of the arguments is a null pointer "/>
    </ppo>
    <ppo deps="s" id="127" ippo="127" s="g">
     <e txt="one of the arguments is a null pointer "/>
    </ppo>
    <ppo deps="s" id="139" ippo="139" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="147" ippo="147" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="address of variable external_command_buffer"/>
    </ppo>
    <ppo deps="s" id="22" ippo="22" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="cast of null-pointer"/>
    </ppo>
    <ppo deps="s" id="53" ippo="53" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="148" ippo="148" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="65" ippo="65" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="47" ippo="47" s="g">
     <e txt="one of the arguments is a null pointer "/>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="44" ippo="44" s="g">
     <e txt="null pointer cannot be dereferenced, and hence target cannot be initialized (acceptability of null is checked separately)"/>
    </ppo>
    <ppo deps="f" id="5" invs="36" ippo="5" s="g" ts="2018-01-09 15:50:49">
     <e txt="lower-bound value is address of stack variable __cancel_buf"/>
    </ppo>
    <ppo id="91" ippo="91"/>
    <ppo deps="s" id="120" ippo="120" s="g">
     <e txt="casting from int to long is safe"/>
    </ppo>
    <ppo deps="s" id="97" ippo="97" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="72" ippo="72" s="g">
     <e txt="external_command_buffer is global"/>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="114" ippo="114" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="33" invs="29" ippo="33" s="r" ts="2018-01-09 15:50:49">
     <e txt="value is explicitly set to NULL"/>
    </ppo>
    <ppo deps="s" id="37" ippo="37" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="64" ippo="64" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="93" ippo="93" s="g">
     <e txt="adding 1023 to start of variable of size 1024"/>
    </ppo>
    <ppo deps="s" id="119" ippo="119" s="g">
     <e txt="casting from int to long is safe"/>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="address of variable tv"/>
    </ppo>
    <ppo deps="s" id="95" ippo="95" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="149" ippo="149" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="92" invs="14" ippo="92" s="g" ts="2018-01-09 15:50:49">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_input_buffer_80"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable input_buffer is not null"/>
    </ppo>
    <ppo deps="s" id="115" ippo="115" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="10" invs="72" ippo="10" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4933(rv:__builtin_expect)"/>
    </ppo>
    <ppo id="42" ippo="42"/>
    <ppo deps="s" id="136" ippo="136" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="46" ippo="46" s="g">
     <e txt="one of the arguments is a null pointer "/>
    </ppo>
    <ppo deps="s" id="153" ippo="153" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="casting from int to long is safe"/>
    </ppo>
    <ppo deps="s" id="66" ippo="66" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="83" ippo="83" s="g">
     <e txt="external_command_buffer_slots is global"/>
    </ppo>
    <ppo deps="f" id="7" invs="90" ippo="7" s="g" ts="2018-01-09 15:50:49">
     <e txt="assignedAt#4933(rv:__sigsetjmp)"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="global variable command_file_fp valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="126" ippo="126" s="g">
     <e txt="one of the arguments is a null pointer "/>
    </ppo>
    <ppo deps="s" id="43" ippo="43" s="g">
     <e txt="null pointer cannot be dereferenced, and hence target cannot be initialized (acceptability of null is checked separately)"/>
    </ppo>
    <ppo deps="s" id="86" ippo="86" s="g">
     <e txt="command_file_fp is global"/>
    </ppo>
    <ppo id="2" ippo="2"/>
    <ppo id="20" ippo="20">
     <d>
      <invs>
       <arg a="2" i="24,78,99"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
