<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:32:00">
   <application file="base/utils.c"/>
  </header>
  <function fname="set_argv_macro_environment_vars">
   <ppos>
    <ppo deps="s" id="22" ippo="22" s="g">
     <e txt="index value 1023 is less than bound 1024"/>
    </ppo>
    <ppo deps="f" id="18" invs="30" ippo="18" s="g" ts="2018-01-09 15:52:28">
     <e txt="assignedAt#2494"/>
    </ppo>
    <ppo deps="s" id="19" ippo="19" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="f" id="32" invs="31" ippo="32" s="g" ts="2018-01-09 15:52:28">
     <e txt="assignedAt#2494"/>
    </ppo>
    <ppo deps="s" id="17" ippo="17" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1" invs="32" ippo="1" s="g" ts="2018-01-09 15:52:28">
     <e txt="assignedAt#2494"/>
    </ppo>
    <ppo deps="s" id="28" ippo="28" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="23" ippo="23" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="25" ippo="25" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="30" invs="23" ippo="30" s="g" ts="2018-01-09 15:52:28">
     <e txt="index value has non-negative lower bound: 0"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="24" ippo="24" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="14" ippo="14" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="21" ippo="21" s="g">
     <e txt="unsigned value is always non-negative"/>
    </ppo>
    <ppo id="33" ippo="33"/>
    <ppo deps="f" id="37" invs="29" ippo="37" s="g" ts="2018-01-09 15:52:28">
     <e txt="assignedAt#2494"/>
    </ppo>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="set is a function parameter"/>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="upperbound of constant string argument: ARG%d"/>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="10" ippo="10" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="26" ippo="26" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="9" ippo="9" s="g">
     <e txt="adding the size of a variable to the start of the same variable macro_name"/>
    </ppo>
    <ppo deps="f" id="31" invs="23" ippo="31" s="g" ts="2018-01-09 15:52:28">
     <e txt="upper bound of index value: 31, is less than length: 32"/>
    </ppo>
    <ppo deps="s" id="12" ippo="12" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="13" ippo="13" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="39" invs="19,1" ippo="39" s="g" ts="2018-01-09 15:52:28">
     <e txt="result of addition is less than MAX: satisfies((31 + 1) &lt; 2147483647)"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="global variable macro_argv with offset [x] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="8" invs="7" ippo="8" s="g" ts="2018-01-09 15:52:28">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_macro_name_14"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable macro_name is not null"/>
    </ppo>
    <ppo id="35" ippo="35"/>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="macro_argv is global"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="ARG%d is a string literal"/>
    </ppo>
    <ppo deps="f" id="20" invs="21,5" ippo="20" s="g" ts="2018-01-09 15:52:28">
     <e txt="result of addition is less than MAX: satisfies((31 + 1) &lt; 2147483647)"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
