<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:28:52">
   <application file="base/utils.c"/>
  </header>
  <function fname="open_command_file">
   <ppos>
    <ppo id="239" ippo="239"/>
    <ppo deps="f" id="182" invs="37" ippo="182" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_buffer_45"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable buffer is not null"/>
    </ppo>
    <ppo deps="s" id="18" ippo="18" s="g">
     <e txt="global variable command_file is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="129" ippo="129" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="50" ippo="50"/>
    <ppo deps="f" id="80" invs="71" ippo="80" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from __errno_location is guaranteed not null"/>
    </ppo>
    <ppo deps="f" id="108" invs="81" ippo="108" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from __errno_location is guaranteed not null"/>
    </ppo>
    <ppo deps="f" id="166" invs="132" ippo="166" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3923(rv:__errno_location)"/>
    </ppo>
    <ppo deps="s" id="104" ippo="104" s="g">
     <e txt="global variable command_file is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="130" ippo="130" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="25" ippo="25"/>
    <ppo id="49" ippo="49"/>
    <ppo deps="s" id="52" ippo="52" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="188" ippo="188" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt=" value is 3"/>
    </ppo>
    <ppo deps="f" id="200" invs="139" ippo="200" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3923(rv:strerror)"/>
    </ppo>
    <ppo deps="s" id="219" ippo="219" s="g">
     <e txt="result of addition is less than or equal to size of the variable buffer (difference with size:  value is 1)"/>
    </ppo>
    <ppo deps="s" id="250" ippo="250" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="30" ippo="30" s="g">
     <e txt="command_file is global"/>
    </ppo>
    <ppo deps="f" id="62" invs="69" ippo="62" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_buffer_45"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable buffer is not null"/>
    </ppo>
    <ppo deps="s" id="103" ippo="103" s="g">
     <e txt="global variable command_file valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="185" ippo="185" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="189" ippo="189" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="102" ippo="102" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="106" invs="25" ippo="106" s="g" ts="2018-01-09 15:49:31">
     <e txt="variable pointed to by return value from __errno_location is initialized"/>
    </ppo>
    <ppo deps="s" id="206" ippo="206" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="14" ippo="14" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="111" invs="81" ippo="111" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments:"/>
        <msg t="[2]:function return value: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function __errno_location satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="145" ippo="145" s="g">
     <e txt="unsigned value is always non-negative"/>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="command_file is global"/>
    </ppo>
    <ppo deps="f" id="82" invs="71" ippo="82" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function __errno_location satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="133" ippo="133" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="89" ippo="89" s="g">
     <e txt="index value 1023 is less than bound 1024"/>
    </ppo>
    <ppo deps="s" id="221" ippo="221" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="180" ippo="180" s="g">
     <e txt="upperbound of constant string argument: 82-character string"/>
    </ppo>
    <ppo id="56" ippo="56">
     <d>
      <invs>
       <arg a="3" i="70,115,151,187"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: strerror"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="79" invs="152" ippo="79" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3902(rv:__errno_location)"/>
    </ppo>
    <ppo deps="s" id="217" ippo="217" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="164" ippo="164" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="121" ippo="121" s="g">
     <e txt="upperbound of constant string argument: 80-character string"/>
    </ppo>
    <ppo id="12" ippo="12"/>
    <ppo deps="f" id="141" invs="136" ippo="141" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3913(rv:strerror)"/>
    </ppo>
    <ppo deps="s" id="216" ippo="216" s="g">
     <e txt="upperbound of constant string argument: 57-character string"/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="command_file is global"/>
    </ppo>
    <ppo deps="f" id="168" invs="163" ippo="168" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(__errno_location()#return"/>
    </ppo>
    <ppo deps="s" id="209" ippo="209" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="69" ippo="69" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="152" ippo="152" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="205" ippo="205" s="g">
     <e txt="index value 1023 is less than bound 1024"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="address of variable st"/>
    </ppo>
    <ppo deps="s" id="160" ippo="160" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="201" invs="172" ippo="201" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(strerror(_)#return"/>
    </ppo>
    <ppo deps="s" id="204" ippo="204" s="g">
     <e txt="unsigned value is always non-negative"/>
    </ppo>
    <ppo deps="s" id="235" ippo="235" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="246" ippo="246" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="203" invs="34" ippo="203" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strerror"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strerror satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="96" ippo="96"/>
    <ppo deps="f" id="195" invs="140" ippo="195" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3923(rv:__errno_location)"/>
    </ppo>
    <ppo deps="f" id="45" invs="49" ippo="45" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments:"/>
        <msg t="[2]:function return value: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function __errno_location satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="54" invs="70" ippo="54" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: strerror"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from strerror is guaranteed not null"/>
    </ppo>
    <ppo deps="f" id="78" invs="45" ippo="78" s="g" ts="2018-01-09 15:49:31">
     <e txt="variable pointed to by return value from __errno_location is initialized"/>
    </ppo>
    <ppo deps="s" id="124" ippo="124" s="g">
     <e txt="result of addition is less than or equal to size of the variable buffer (difference with size:  value is 1)"/>
    </ppo>
    <ppo id="118" ippo="118">
     <d>
      <invs>
       <arg a="1" i="21,107,136,167"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="140" invs="23" ippo="140" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments:"/>
        <msg t="[2]:function return value: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function __errno_location satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="check_external_commands is global"/>
    </ppo>
    <ppo deps="f" id="81" invs="188" ippo="81" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(__errno_location()#return"/>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="236" ippo="236" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="23" invs="122" ippo="23" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3897(rv:stat)"/>
    </ppo>
    <ppo deps="s" id="77" ippo="77" s="g">
     <e txt="global variable command_file is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="242" ippo="242" s="g">
     <e txt="global variable command_file_fp valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="70" ippo="70" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="159" ippo="159" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="casting the result of a bitwise manipulation to an unsigned"/>
    </ppo>
    <ppo deps="s" id="134" ippo="134" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo id="24" ippo="24"/>
    <ppo deps="s" id="21" ippo="21" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="94" ippo="94" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="109" invs="189" ippo="109" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(__errno_location()#return"/>
    </ppo>
    <ppo deps="s" id="190" ippo="190" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="167" invs="14" ippo="167" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from __errno_location is guaranteed not null"/>
    </ppo>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="value 3 is less than minimum word size (16"/>
    </ppo>
    <ppo deps="s" id="76" ippo="76" s="g">
     <e txt="global variable command_file valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="131" ippo="131" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="197" invs="173" ippo="197" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(__errno_location()#return"/>
    </ppo>
    <ppo deps="s" id="231" ippo="231" s="g">
     <e txt="index value 1023 is less than bound 1024"/>
    </ppo>
    <ppo id="245" ippo="245"/>
    <ppo id="57" ippo="57">
     <d>
      <invs>
       <arg a="1" i="70,115,151,187"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="68" ippo="68" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="156" ippo="156" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="213" ippo="213" s="g">
     <e txt="57-character string is a string literal"/>
    </ppo>
    <ppo deps="s" id="122" ippo="122" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="181" ippo="181" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="237" ippo="237" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="85" invs="187" ippo="85" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(strerror(_)#return"/>
    </ppo>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="26" ippo="26"/>
    <ppo deps="s" id="98" ippo="98" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="105" ippo="105" s="g">
     <e txt="command_file_fd is global"/>
    </ppo>
    <ppo deps="s" id="214" ippo="214" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="202" invs="34" ippo="202" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function strerror satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="9" ippo="9"/>
    <ppo deps="s" id="225" ippo="225" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="247" ippo="247"/>
    <ppo deps="f" id="135" invs="24" ippo="135" s="g" ts="2018-01-09 15:49:31">
     <e txt="variable pointed to by return value from __errno_location is initialized"/>
    </ppo>
    <ppo id="13" ippo="13"/>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="result of addition is less than or equal to size of the variable buffer (difference with size:  value is 1)"/>
    </ppo>
    <ppo deps="s" id="220" ippo="220" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="176" ippo="176">
     <d>
      <invs>
       <arg a="3" i="34,109,139,172"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: strerror"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="186" ippo="186" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="51" ippo="51"/>
    <ppo deps="f" id="107" invs="153" ippo="107" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3913(rv:__errno_location)"/>
    </ppo>
    <ppo deps="s" id="146" ippo="146" s="g">
     <e txt="index value 1023 is less than bound 1024"/>
    </ppo>
    <ppo deps="s" id="192" ippo="192" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="211" ippo="211" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="125" ippo="125" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="249" ippo="249" s="g">
     <e txt="command_file is global"/>
    </ppo>
    <ppo deps="f" id="143" invs="21" ippo="143" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function strerror satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="19" ippo="19" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="global variable command_file valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="227" ippo="227" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="17" ippo="17" s="g">
     <e txt="global variable command_file valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="90" ippo="90" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="172" ippo="172" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="228" ippo="228" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="226" ippo="226" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="40" invs="46" ippo="40" s="g" ts="2018-01-09 15:49:31">
     <e txt="variable pointed to by return value from __errno_location is initialized"/>
    </ppo>
    <ppo deps="f" id="199" invs="35" ippo="199" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments:"/>
        <msg t="[2]:function return value: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function __errno_location satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="210" ippo="210" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="67" ippo="67" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="55" ippo="55">
     <d>
      <invs>
       <arg a="1" i="70,115,151,187"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="117" ippo="117">
     <d>
      <invs>
       <arg a="3" i="21,107,136,167"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:function arguments: _"/>
        <msg t="[3]:function return value: strerror"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="132" ippo="132" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="110" invs="81" ippo="110" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function __errno_location satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="193" ippo="193" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="208" ippo="208" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="60" ippo="60" s="g">
     <e txt="upperbound of constant string argument: 165-character string"/>
    </ppo>
    <ppo deps="s" id="150" ippo="150" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="59" ippo="59" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="165" invs="12" ippo="165" s="g" ts="2018-01-09 15:49:31">
     <e txt="variable pointed to by return value from __errno_location is initialized"/>
    </ppo>
    <ppo deps="s" id="187" ippo="187" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="244" ippo="244"/>
    <ppo deps="s" id="161" ippo="161" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="196" invs="35" ippo="196" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from __errno_location is guaranteed not null"/>
    </ppo>
    <ppo deps="s" id="223" ippo="223" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt=" value is 3"/>
    </ppo>
    <ppo deps="s" id="155" ippo="155" s="g">
     <e txt="upperbound of constant string argument: r"/>
    </ppo>
    <ppo deps="f" id="142" invs="167" ippo="142" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(strerror(_)#return"/>
    </ppo>
    <ppo deps="f" id="144" invs="21" ippo="144" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strerror"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strerror satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="116" ippo="116">
     <d>
      <invs>
       <arg a="1" i="21,107,136,167"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="137" invs="23" ippo="137" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from __errno_location is guaranteed not null"/>
    </ppo>
    <ppo deps="s" id="27" ippo="27" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="154" ippo="154" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="243" ippo="243" s="g">
     <e txt="global variable command_file_fp is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="151" ippo="151" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="157" ippo="157" s="g">
     <e txt="command_file_fd is global"/>
    </ppo>
    <ppo deps="f" id="194" invs="11" ippo="194" s="g" ts="2018-01-09 15:49:31">
     <e txt="variable pointed to by return value from __errno_location is initialized"/>
    </ppo>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="value 3 is less than minimum word size (16"/>
    </ppo>
    <ppo deps="s" id="61" ippo="61" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="158" ippo="158" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="212" invs="148" ippo="212" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3931(rv:init_command_file_worker_thread)"/>
    </ppo>
    <ppo deps="f" id="87" invs="70" ippo="87" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: _"/>
        <msg t="[2]:function return value: strerror"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function strerror satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="113" ippo="113" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="138" invs="168" ippo="138" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(__errno_location()#return"/>
    </ppo>
    <ppo deps="s" id="58" ippo="58" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="84" invs="151" ippo="84" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3902(rv:strerror)"/>
    </ppo>
    <ppo deps="f" id="170" invs="14" ippo="170" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments:"/>
        <msg t="[2]:function return value: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function __errno_location satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="183" ippo="183" s="g">
     <e txt="result of addition is less than or equal to size of the variable buffer (difference with size:  value is 1)"/>
    </ppo>
    <ppo deps="s" id="171" ippo="171" s="g">
     <e txt="82-character string is a string literal"/>
    </ppo>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="casting the result of a bitwise manipulation to an unsigned"/>
    </ppo>
    <ppo deps="s" id="74" ippo="74" s="g">
     <e txt="command_file is global"/>
    </ppo>
    <ppo deps="s" id="112" ippo="112" s="g">
     <e txt="80-character string is a string literal"/>
    </ppo>
    <ppo deps="s" id="178" ippo="178" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="75" ippo="75" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="123" invs="27" ippo="123" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_buffer_45"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable buffer is not null"/>
    </ppo>
    <ppo id="48" ippo="48"/>
    <ppo deps="s" id="241" ippo="241" s="g">
     <e txt="valid by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="s" id="251" ippo="251" s="g">
     <e txt="global variable command_file valid lower bound by inductive hypothesis (checked at each assignment)"/>
    </ppo>
    <ppo deps="f" id="169" invs="14" ippo="169" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function __errno_location satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="127" ippo="127" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="139" invs="23" ippo="139" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function __errno_location satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="147" ippo="147" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="71" ippo="71" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="22" ippo="22" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="234" ippo="234" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="173" ippo="173" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="215" ippo="215" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="222" ippo="222" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="28" ippo="28"/>
    <ppo deps="s" id="53" ippo="53" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="148" ippo="148" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="240" ippo="240" s="g">
     <e txt="command_file_fp is global"/>
    </ppo>
    <ppo deps="s" id="65" ippo="65" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="191" ippo="191" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="218" invs="90" ippo="218" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_buffer_45"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable buffer is not null"/>
    </ppo>
    <ppo deps="s" id="47" ippo="47" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="73" ippo="73" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="44" invs="49" ippo="44" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function __errno_location satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="value 3 is less than minimum word size (16"/>
    </ppo>
    <ppo deps="s" id="91" ippo="91" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="120" ippo="120" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="184" ippo="184" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="97" ippo="97"/>
    <ppo deps="s" id="162" ippo="162" s="g">
     <e txt="command_file_fp is global"/>
    </ppo>
    <ppo deps="s" id="163" ippo="163" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="230" ippo="230" s="g">
     <e txt="unsigned value is always non-negative"/>
    </ppo>
    <ppo deps="s" id="72" ippo="72" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="99" ippo="99"/>
    <ppo deps="s" id="114" ippo="114" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="global variable command_file is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="37" ippo="37" s="g">
     <e txt=" value is 3"/>
    </ppo>
    <ppo deps="s" id="64" ippo="64" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="93" ippo="93" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="119" ippo="119" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="175" ippo="175">
     <d>
      <invs>
       <arg a="1" i="34,109,139,172"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="252" ippo="252" s="g">
     <e txt="global variable command_file is assigned a value with valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="248" ippo="248" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="41" invs="146" ippo="41" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3902(rv:__errno_location)"/>
    </ppo>
    <ppo deps="s" id="233" ippo="233" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="95" ippo="95" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="149" ippo="149" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="198" invs="35" ippo="198" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function __errno_location satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="232" ippo="232" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="92" ippo="92" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="115" invs="21" ippo="115" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: strerror"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from strerror is guaranteed not null"/>
    </ppo>
    <ppo id="10" ippo="10"/>
    <ppo deps="f" id="42" invs="49" ippo="42" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from __errno_location is guaranteed not null"/>
    </ppo>
    <ppo deps="s" id="224" ippo="224" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="136" invs="137" ippo="136" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3913(rv:__errno_location)"/>
    </ppo>
    <ppo deps="s" id="229" ippo="229" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="46" ippo="46" s="g">
     <e txt="165-character string is a string literal"/>
    </ppo>
    <ppo deps="s" id="153" ippo="153" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="177" ippo="177">
     <d>
      <invs>
       <arg a="1" i="34,109,139,172"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="39" invs="149" ippo="39" s="g" ts="2018-01-09 15:49:31">
     <e txt="assignedAt#3900(rv:mkfifo)"/>
    </ppo>
    <ppo deps="s" id="66" ippo="66" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="f" id="83" invs="71" ippo="83" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments:"/>
        <msg t="[2]:function return value: __errno_location"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function __errno_location satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="207" ippo="207" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="7" ippo="7" s="g">
     <e txt="value 3 is less than minimum word size (16"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="unsigned value is always non-negative"/>
    </ppo>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt=" value is 3"/>
    </ppo>
    <ppo deps="f" id="174" invs="34" ippo="174" s="g" ts="2018-01-09 15:49:31">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: strerror"/>
       </arg>
      </amsgs>
     </d>
     <e txt="return value from strerror is guaranteed not null"/>
    </ppo>
    <ppo deps="f" id="238" invs="186" ippo="238" s="g" ts="2018-01-09 15:49:31">
     <e txt="all targets are non-null: [basevar (fdopen(_^_)#return]"/>
    </ppo>
    <ppo deps="s" id="29" ippo="29" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="126" ippo="126" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="179" ippo="179" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="43" invs="177" ippo="43" s="g" ts="2018-01-09 15:49:31">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(__errno_location()#return"/>
    </ppo>
    <ppo deps="f" id="86" invs="70" ippo="86" s="g" ts="2018-01-09 15:49:31">
     <e txt="return value from function strerror satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="command_file_created is global"/>
    </ppo>
    <ppo deps="s" id="20" ippo="20" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
