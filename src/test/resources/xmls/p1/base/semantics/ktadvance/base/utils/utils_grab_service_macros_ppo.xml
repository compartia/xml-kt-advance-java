<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <header time="2018-01-09 17:31:40">
   <application file="base/utils.c"/>
  </header>
  <function fname="grab_service_macros">
   <ppos>
    <ppo id="386" ippo="386">
     <d>
      <invs>
       <arg a="1" i="1006"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1392" invs="1007" ippo="1392" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#636(globalservicegroup_list9061)_xx_assignedAt#636(fieldnext159)"/>
    </ppo>
    <ppo deps="s" id="1113" ippo="1113" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1460" ippo="1460" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="588" ippo="588" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="80" ippo="80" s="g">
     <e txt="index value 19 is non-negative"/>
    </ppo>
    <ppo id="302" ippo="302">
     <d>
      <invs>
       <arg a="1" i="234,887,1009,1229"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1317" ippo="1317" s="g">
     <e txt="value is 86400"/>
    </ppo>
    <ppo deps="a" id="988" ids="1" invs="784" ippo="988" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_unknown: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1457" ippo="1457" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="188" ippo="188" s="g">
     <e txt="index value 98 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="1241" invs="393" ippo="1241" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1190" ippo="1190" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="488" ippo="488">
     <d>
      <invs>
       <arg a="1" i="277,897,1026,1239"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="913" ippo="913" s="g">
     <e txt="global variable macro_x with offset [54] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="102" ippo="102" s="g">
     <e txt="index value 19 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1072" ippo="1072" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="654" invs="186" ippo="654" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="834" ippo="834" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="439" ippo="439" s="g">
     <e txt="index value 5 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="559" ippo="559" s="g">
     <e txt="index value 32 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="744" ippo="744" s="g">
     <e txt="index value 15 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1715" ippo="1715" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="585" invs="1336" ippo="585" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="465" ippo="465" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1288" ippo="1288" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1740" ippo="1740">
     <d>
      <invs>
       <arg a="3" i="724"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="746" ippo="746"/>
    <ppo deps="s" id="901" ippo="901" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1344" invs="1069" ippo="1344" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#628"/>
    </ppo>
    <ppo deps="s" id="1091" ippo="1091" s="g">
     <e txt="index value 40 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="425" ippo="425" s="g">
     <e txt="index value 5 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="780" ippo="780" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1206" ippo="1206" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1323" ippo="1323" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1238" ippo="1238" s="g">
     <e txt="index value 38 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="1529" invs="1135" ippo="1529" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#655(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="1585" ippo="1585" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="1395" invs="1059" ippo="1395" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#636(globalservicegroup_list9061)_xx_assignedAt#636(fieldnext159)"/>
    </ppo>
    <ppo id="1465" ippo="1465"/>
    <ppo deps="s" id="385" ippo="385" s="g">
     <e txt="one of the arguments is a string literal: UNKNOWN"/>
    </ppo>
    <ppo deps="s" id="1077" ippo="1077" s="g">
     <e txt="index value 40 is non-negative"/>
    </ppo>
    <ppo id="160" ippo="160">
     <d>
      <invs>
       <arg a="3" i="800"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="235" ippo="235" s="g">
     <e txt="index value 42 is non-negative"/>
    </ppo>
    <ppo deps="f" id="246" invs="906" ippo="246" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 24"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(24)#return (24)"/>
    </ppo>
    <ppo id="1018" ippo="1018"/>
    <ppo deps="f" id="1377" invs="1130" ippo="1377" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#630"/>
    </ppo>
    <ppo id="1396" ippo="1396">
     <d>
      <invs>
       <arg a="1" i="1453,1059"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1554" invs="1339" ippo="1554" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo deps="s" id="305" ippo="305" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo id="622" ippo="622">
     <d>
      <invs>
       <arg a="1" i="156,879,994,1181"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="756" invs="1153" ippo="756" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_13"/>
    </ppo>
    <ppo deps="s" id="791" ippo="791" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="403" ippo="403" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="691" ippo="691" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="77" invs="778" ippo="77" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter memref-60 satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1511" ippo="1511" s="g">
     <e txt="field description (162) is assigned a value with a valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1215" ippo="1215" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1550" ippo="1550" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="242" ippo="242" s="g">
     <e txt="index value 42 is less than bound 99"/>
    </ppo>
    <ppo id="159" ippo="159">
     <d>
      <invs>
       <arg a="1" i="800"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1309" ippo="1309" s="g">
     <e txt="index value 36 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1655" ippo="1655" s="g">
     <e txt="index value 17 is non-negative"/>
    </ppo>
    <ppo deps="s" id="3" ippo="3" s="g">
     <e txt="index value 3 is non-negative"/>
    </ppo>
    <ppo deps="s" id="781" ippo="781" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="21" ippo="21" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="484" invs="1025" ippo="484" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#511(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="521" ippo="521" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1271" invs="1078" ippo="1271" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#608"/>
    </ppo>
    <ppo deps="f" id="1338" invs="1099" ippo="1338" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#627"/>
    </ppo>
    <ppo deps="s" id="1119" ippo="1119" s="g">
     <e txt="constant value 3 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1227" ippo="1227" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="237" ippo="237"/>
    <ppo deps="s" id="767" ippo="767" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1349" ippo="1349">
     <d>
      <invs>
       <arg a="3" i="1066"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="563" ippo="563" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1388" ippo="1388" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1497" invs="1495" ippo="1497" s="g" ts="2018-01-09 16:58:07">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1742" ippo="1742" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="619" invs="156" ippo="619" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="923" ids="2" invs="464" ippo="923" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="279" invs="824" ippo="279" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is address of string literal SOFT; or address of string literal HARD; all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo id="776" ippo="776">
     <d>
      <invs>
       <arg a="1" i="1134"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="176" ippo="176" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="186" ippo="186" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="668" ippo="668" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1289" ippo="1289" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1586" ippo="1586" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="211" ippo="211"/>
    <ppo deps="s" id="433" ippo="433" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="634" ippo="634" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1175" ippo="1175" s="g">
     <e txt="upperbound of constant string argument: %.2f"/>
    </ppo>
    <ppo id="1546" ippo="1546"/>
    <ppo id="326" ippo="326">
     <d>
      <invs>
       <arg a="1" i="1088"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="392" ippo="392">
     <d>
      <invs>
       <arg a="1" i="1006"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="430" ippo="430" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="627" ippo="627" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1646" invs="1097" ippo="1646" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#655(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="a" id="17" ids="3" invs="798" ippo="17" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc-&gt;description) delegated to api"/>
    </ppo>
    <ppo deps="s" id="391" ippo="391" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="686" invs="345" ippo="686" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="640" ippo="640" s="g">
     <e txt="index value 34 is less than bound 99"/>
    </ppo>
    <ppo id="1110" ippo="1110">
     <d>
      <invs>
       <arg a="1" i="1138"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1612" ippo="1612" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="226" ippo="226" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="313" invs="253" ippo="313" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="758" ippo="758" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="889" invs="1017" ippo="889" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#565(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="1474" ippo="1474" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="295" ippo="295" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo id="930" ippo="930">
     <d>
      <invs>
       <arg a="1" i="1082"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1468" ippo="1468" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="1541" ippo="1541" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1340" ippo="1340" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1539" ippo="1539" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="787" ids="2" invs="705" ippo="787" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1330" invs="1022" ippo="1330" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#625"/>
    </ppo>
    <ppo id="1526" ippo="1526"/>
    <ppo deps="s" id="550" ippo="550" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1132" ippo="1132" s="g">
     <e txt="index value 40 is less than bound 99"/>
    </ppo>
    <ppo id="1200" ippo="1200">
     <d>
      <invs>
       <arg a="1" i="1136"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="404" ippo="404" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="911" ippo="911" s="g">
     <e txt="index value 54 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1197" ippo="1197" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1624" invs="917" ippo="1624" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="a" id="142" ids="2" invs="588" ippo="142" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="416" ippo="416" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="926" invs="464" ippo="926" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="262" ippo="262">
     <d>
      <invs>
       <arg a="1" i="825,824,1109,1311"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="27" invs="603" ippo="27" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="645" ippo="645" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="755" invs="853" ippo="755" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="s" id="334" ippo="334" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="212" ippo="212">
     <d>
      <invs>
       <arg a="1" i="1040"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="395" ippo="395" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="460" ippo="460">
     <d>
      <invs>
       <arg a="4" i="622"/>
       <arg a="3" i="1113"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1518" ippo="1518" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1334" ippo="1334">
     <d>
      <invs>
       <arg a="3" i="266"/>
       <arg a="2" i="1023"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="364" ippo="364" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="251" ippo="251" s="g">
     <e txt="index value 42 is non-negative"/>
    </ppo>
    <ppo deps="s" id="432" ippo="432" s="g">
     <e txt="upperbound of constant string argument: %d"/>
    </ppo>
    <ppo deps="s" id="562" ippo="562" s="g">
     <e txt="%.3f is a string literal"/>
    </ppo>
    <ppo deps="a" id="359" ids="2" invs="165" ippo="359" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="946" ippo="946" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="987" ippo="987" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1090" ippo="1090" s="g">
     <e txt="index value 40 is non-negative"/>
    </ppo>
    <ppo deps="f" id="222" invs="1039" ippo="222" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#475"/>
    </ppo>
    <ppo deps="s" id="580" ippo="580" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1623" invs="1084" ippo="1623" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#655(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="617" ippo="617" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1230" ippo="1230" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="441" ippo="441" s="g">
     <e txt="global variable macro_x with offset [5] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="482" ippo="482" s="g">
     <e txt="index value 6 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="829" ippo="829" s="g">
     <e txt="index value 53 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="892" invs="1237" ippo="892" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_15"/>
    </ppo>
    <ppo deps="s" id="1226" ippo="1226" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1312" ippo="1312" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="943" ippo="943" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="5" ippo="5" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="596" ippo="596" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="365" ippo="365" s="g">
     <e txt="upperbound of constant string argument: CRITICAL"/>
    </ppo>
    <ppo id="933" ippo="933">
     <d>
      <invs>
       <arg a="4" i="496"/>
       <arg a="3" i="1082"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1282" ippo="1282" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1579" invs="608" ippo="1579" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="162" ippo="162" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="993" invs="337" ippo="993" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1680" ippo="1680" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo id="1645" ippo="1645">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="33" ippo="33" s="g">
     <e txt="index value 17 is non-negative"/>
    </ppo>
    <ppo deps="s" id="564" ippo="564" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="673" ippo="673"/>
    <ppo deps="s" id="1085" ippo="1085" s="g">
     <e txt="index value 40 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="1506" invs="1495" ippo="1506" s="g" ts="2018-01-09 16:58:07">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="175" ippo="175" s="g">
     <e txt="index value 98 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1292" ippo="1292" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1390" ippo="1390" s="g">
     <e txt="servicegroup_list is global"/>
    </ppo>
    <ppo deps="a" id="651" ids="2" invs="186" ippo="651" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="92" ippo="92" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="790" invs="705" ippo="790" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1039" ippo="1039" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1512" invs="1054" ippo="1512" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#655(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="10" ippo="10" s="g">
     <e txt="index value 3 is non-negative"/>
    </ppo>
    <ppo deps="s" id="916" ippo="916" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="224" invs="819" ippo="224" s="g" ts="2018-01-09 15:52:09">
     <e txt="lower-bound value is address of string literal ACTIVE; or address of string literal PASSIVE; all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo id="846" ippo="846">
     <d>
      <invs>
       <arg a="2" i="1028"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1082" ippo="1082" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="1667" ippo="1667" s="g">
     <e txt="index value 60 is non-negative"/>
    </ppo>
    <ppo id="1313" ippo="1313"/>
    <ppo deps="f" id="1533" invs="706" ippo="1533" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-16_1078_)#init,(memref-17_1080_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="417" invs="1123" ippo="417" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#502(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="804" ippo="804" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1476" ippo="1476" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1523" ippo="1523" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="153" ippo="153" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="727" ippo="727">
     <d>
      <invs>
       <arg a="1" i="1102"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1198" ippo="1198" s="g">
     <e txt="index value 44 is non-negative"/>
    </ppo>
    <ppo deps="s" id="39" ippo="39" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1150" ippo="1150" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1209" ippo="1209" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="1380" ippo="1380" s="g">
     <e txt="index value 36 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="605" ippo="605" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="671" ippo="671" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="968" ippo="968" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="948" ippo="948" s="g">
     <e txt="index value 55 is non-negative"/>
    </ppo>
    <ppo deps="s" id="826" ippo="826" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="126" ippo="126" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="689" ippo="689">
     <d>
      <invs>
       <arg a="1" i="345,903,1043,1286"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="591" ippo="591">
     <d>
      <invs>
       <arg a="1" i="989"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1157" ippo="1157" s="g">
     <e txt="index value 44 is non-negative"/>
    </ppo>
    <ppo deps="s" id="315" ippo="315" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="807" ippo="807" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="294" ippo="294" s="g">
     <e txt="constant value 32 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="492" ippo="492" s="g">
     <e txt="index value 6 is less than bound 99"/>
    </ppo>
    <ppo id="877" ippo="877"/>
    <ppo deps="s" id="1229" ippo="1229" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="108" ippo="108" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="f" id="1650" invs="575" ippo="1650" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-16_1078_)#init,(memref-17_1080_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="310" ippo="310" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1224" ippo="1224" s="g">
     <e txt="index value 38 is non-negative"/>
    </ppo>
    <ppo id="1551" ippo="1551">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="623" ippo="623" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="a" id="1059" ids="2" invs="218" ippo="1059" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo id="1723" ippo="1723"/>
    <ppo id="1728" ippo="1728"/>
    <ppo id="1677" ippo="1677"/>
    <ppo deps="s" id="565" ippo="565" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="894" ippo="894" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="1242" invs="908" ippo="1242" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 17"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(17)#return (17)"/>
    </ppo>
    <ppo id="185" ippo="185"/>
    <ppo deps="s" id="707" ippo="707" s="g">
     <e txt="index value 13 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="883" ippo="883" s="g">
     <e txt="global variable macro_x with offset [54] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="1350" invs="1066" ippo="1350" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#629"/>
    </ppo>
    <ppo deps="s" id="1174" ippo="1174" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="14" ippo="14"/>
    <ppo deps="a" id="111" ids="4" invs="765" ippo="111" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc-&gt;perf_data) delegated to api"/>
    </ppo>
    <ppo id="950" ippo="950"/>
    <ppo id="1482" ippo="1482"/>
    <ppo deps="f" id="551" invs="1094" ippo="551" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#520(rv:malloc)"/>
    </ppo>
    <ppo id="729" ippo="729">
     <d>
      <invs>
       <arg a="4" i="585"/>
       <arg a="3" i="1102"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="82" ippo="82" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="487" invs="1239" ippo="487" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_9"/>
    </ppo>
    <ppo deps="s" id="728" ippo="728" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="a" id="920" ids="5" invs="790" ippo="920" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_warning: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1074" ippo="1074" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1339" ippo="1339" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="1483" ippo="1483"/>
    <ppo deps="s" id="578" ippo="578" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1123" ippo="1123" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1706" ippo="1706">
     <d>
      <invs>
       <arg a="3" i="526"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1311" ippo="1311" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1658" ippo="1658" s="g">
     <e txt="global variable macro_x with offset [17] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="534" ippo="534" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="977" ippo="977" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="270" ippo="270" s="g">
     <e txt="index value 42 is non-negative"/>
    </ppo>
    <ppo deps="f" id="857" invs="294" ippo="857" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1513" ippo="1513" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="810" ippo="810" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="1674" ippo="1674" s="g">
     <e txt="index value 79 is less than bound 99"/>
    </ppo>
    <ppo id="1687" ippo="1687"/>
    <ppo deps="s" id="31" ippo="31" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="554" invs="1304" ippo="554" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_10"/>
    </ppo>
    <ppo id="893" ippo="893">
     <d>
      <invs>
       <arg a="1" i="264,895,1018,1237"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="12" ippo="12"/>
    <ppo deps="s" id="209" ippo="209" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="s" id="366" ippo="366" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1431" ippo="1431" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo id="1641" ippo="1641"/>
    <ppo deps="s" id="1434" ippo="1434" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1106" ippo="1106" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="835" ippo="835" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1177" ippo="1177">
     <d>
      <invs>
       <arg a="1" i="1011"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1064" ippo="1064" s="g">
     <e txt="index value 56 is non-negative"/>
    </ppo>
    <ppo deps="s" id="556" ippo="556" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="642" ippo="642" s="g">
     <e txt="global variable macro_x with offset [34] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1264" ippo="1264" s="g">
     <e txt="global variable macro_x with offset [38] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="128" ippo="128" s="g">
     <e txt="index value 60 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="285" ippo="285" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="958" invs="246" ippo="958" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1026" invs="414" ippo="1026" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1462" ippo="1462" s="g">
     <e txt="index value 48 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="1577" invs="927" ippo="1577" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo id="1275" ippo="1275">
     <d>
      <invs>
       <arg a="1" i="1002"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="399" ippo="399" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1534" ippo="1534" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1283" ippo="1283" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="1332" invs="1023" ippo="1332" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#626"/>
    </ppo>
    <ppo deps="s" id="1544" ippo="1544" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo deps="s" id="94" ippo="94" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="109" ippo="109" s="g">
     <e txt="index value 19 is non-negative"/>
    </ppo>
    <ppo id="1153" ippo="1153"/>
    <ppo deps="s" id="1442" ippo="1442" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="543" ippo="543" s="g">
     <e txt="index value 32 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="610" ippo="610" s="g">
     <e txt="index value 34 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="922" ippo="922" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1142" ippo="1142" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1430" ippo="1430" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="a" id="1496" ids="2" invs="527" ippo="1496" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="902" ippo="902" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1668" ippo="1668" s="g">
     <e txt="index value 60 is less than bound 99"/>
    </ppo>
    <ppo id="421" ippo="421">
     <d>
      <invs>
       <arg a="1" i="665,933,1124,1338"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="257" ids="2" invs="426" ippo="257" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="899" ippo="899" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="529" ippo="529" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="1490" ippo="1490">
     <d>
      <invs>
       <arg a="2" i="1081"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="932" ippo="932" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="s" id="1173" ippo="1173" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1421" ippo="1421"/>
    <ppo deps="s" id="1076" ippo="1076" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1647" invs="922" ippo="1647" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="11" ippo="11" s="g">
     <e txt="index value 3 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="485" invs="277" ippo="485" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="535" ippo="535" s="g">
     <e txt="index value 32 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1199" ippo="1199" s="g">
     <e txt="index value 44 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1621" ippo="1621" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1732" ippo="1732" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1184" ippo="1184" s="g">
     <e txt="global variable macro_x with offset [44] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1628" ippo="1628" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="375" ippo="375" s="g">
     <e txt="global variable macro_x with offset [4] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1187" ippo="1187" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="390" ippo="390" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo id="1485" ippo="1485"/>
    <ppo deps="s" id="1016" ippo="1016" s="g">
     <e txt="index value 56 is non-negative"/>
    </ppo>
    <ppo deps="f" id="821" invs="1014" ippo="821" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#556(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="249" ippo="249" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="1013" ippo="1013"/>
    <ppo deps="s" id="1720" ippo="1720" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="824" invs="1235" ippo="824" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_14"/>
    </ppo>
    <ppo deps="a" id="1056" ids="6" invs="774" ippo="1056" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_critical: unsigned long) delegated to api"/>
    </ppo>
    <ppo id="1333" ippo="1333">
     <d>
      <invs>
       <arg a="3" i="266"/>
       <arg a="2" i="1023"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1171" ippo="1171" s="g">
     <e txt="%.2f is a string literal"/>
    </ppo>
    <ppo id="210" ippo="210">
     <d>
      <invs>
       <arg a="1" i="819,818,1041,1284"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="685" invs="1042" ippo="685" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#538(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="738" ippo="738" s="g">
     <e txt="index value 15 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="339" ippo="339" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="345" ippo="345">
     <d>
      <invs>
       <arg a="4" i="542"/>
       <arg a="3" i="1091"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="827" ippo="827" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1509" ippo="1509">
     <d>
      <invs>
       <arg a="1" i="1497,794"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="321" ippo="321">
     <d>
      <invs>
       <arg a="4" i="517"/>
       <arg a="3" i="1088"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="667" ippo="667" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="762" ippo="762" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1211" ippo="1211" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="196" ippo="196" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="681" ippo="681" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo id="1423" ippo="1423"/>
    <ppo deps="s" id="308" ippo="308" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="592" ippo="592">
     <d>
      <invs>
       <arg a="1" i="989"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="116" ids="7" invs="83" ippo="116" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;perf_data) delegated to api"/>
    </ppo>
    <ppo id="945" ippo="945"/>
    <ppo deps="s" id="1192" ippo="1192" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1737" ippo="1737" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="348" ippo="348" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo deps="s" id="384" ippo="384" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="38" ippo="38" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="f" id="1127" invs="1344" ippo="1127" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo id="907" ippo="907">
     <d>
      <invs>
       <arg a="4" i="459"/>
       <arg a="3" i="1074"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="940" ippo="940" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="522" ippo="522" s="g">
     <e txt="index value 6 is non-negative"/>
    </ppo>
    <ppo id="178" ippo="178"/>
    <ppo deps="f" id="1400" invs="1494" ippo="1400" s="g" ts="2018-01-09 16:58:07">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:potential frees not excluded: freed(by:is_service_member_of_servicegroup @-1 r:1"/>
       </arg>
      </amsgs>
     </d>
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo id="75" ippo="75">
     <d>
      <invs>
       <arg a="1" i="778"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="635" ippo="635">
     <d>
      <invs>
       <arg a="1" i="999"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1164" ippo="1164">
     <d>
      <invs>
       <arg a="1" i="593,925,1104,1308"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1609" ippo="1609" s="g">
     <e txt="index value 79 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1672" ippo="1672" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="362" invs="165" ippo="362" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="558" ippo="558" s="g">
     <e txt="index value 32 is non-negative"/>
    </ppo>
    <ppo deps="a" id="921" ids="8" invs="83" ippo="921" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;last_time_warning) delegated to api"/>
    </ppo>
    <ppo deps="s" id="800" ippo="800" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1007" ippo="1007" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1371" ippo="1371" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1738" invs="724" ippo="1738" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_1042"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable temp_buffer is not null"/>
    </ppo>
    <ppo deps="s" id="139" ippo="139" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="147" ippo="147" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1562" ippo="1562" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
    <ppo id="1604" ippo="1604"/>
    <ppo deps="s" id="1660" ippo="1660" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="867" ippo="867" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="a" id="649" ids="9" invs="83" ippo="649" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;latency) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1005" ippo="1005" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="1593" ippo="1593"/>
    <ppo deps="f" id="1160" invs="1103" ippo="1160" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#601(rv:malloc)"/>
    </ppo>
    <ppo id="1257" ippo="1257">
     <d>
      <invs>
       <arg a="1" i="1080"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="53" ippo="53" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="372" ippo="372" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo deps="s" id="859" ippo="859" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="752" ippo="752" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1248" ippo="1248" s="g">
     <e txt="index value 38 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="73" invs="286" ippo="73" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="373" ippo="373" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="851" ippo="851" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="765" ippo="765" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="896" ippo="896" s="g">
     <e txt="index value 54 is non-negative"/>
    </ppo>
    <ppo id="1337" ippo="1337"/>
    <ppo deps="s" id="1417" ippo="1417" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="842" ippo="842" s="g">
     <e txt="index value 53 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1138" ippo="1138" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1053" ippo="1053" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1363" ippo="1363" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1151" ippo="1151" s="g">
     <e txt="index value 44 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1484" ippo="1484" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="1048" ippo="1048">
     <d>
      <invs>
       <arg a="1" i="1004"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="461" ippo="461" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="1559" ippo="1559"/>
    <ppo deps="s" id="647" ippo="647" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="283" ippo="283" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo deps="a" id="95" ids="2" invs="674" ippo="95" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="149" ippo="149" s="g">
     <e txt="index value 60 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="874" ippo="874" s="g">
     <e txt="index value 54 is less than bound 99"/>
    </ppo>
    <ppo id="1201" ippo="1201">
     <d>
      <invs>
       <arg a="1" i="1136"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1424" ippo="1424" s="g">
     <e txt="index value 47 is non-negative"/>
    </ppo>
    <ppo id="42" ippo="42"/>
    <ppo deps="s" id="253" ippo="253" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1542" ippo="1542" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="1375" invs="1127" ippo="1375" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#626"/>
    </ppo>
    <ppo deps="s" id="766" ippo="766" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="229" ippo="229" s="g">
     <e txt="index value 42 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1365" ippo="1365" s="g">
     <e txt="index value 36 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="662" ippo="662" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1415" ippo="1415" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="928" ippo="928" s="g">
     <e txt="index value 54 is non-negative"/>
    </ppo>
    <ppo deps="s" id="570" ippo="570" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="784" ids="10" invs="807" ippo="784" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_state_change: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1268" ippo="1268" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1273" ippo="1273" s="g">
     <e txt="index value 38 is non-negative"/>
    </ppo>
    <ppo id="239" ippo="239"/>
    <ppo deps="s" id="318" ippo="318" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="823" invs="893" ippo="823" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo id="1705" ippo="1705">
     <d>
      <invs>
       <arg a="1" i="526"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_1042"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="f" id="50" invs="279" ippo="50" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="806" ippo="806" s="g">
     <e txt="index value 53 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="104" ippo="104" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="496" ippo="496" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="512" ippo="512" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="568" ippo="568">
     <d>
      <invs>
       <arg a="1" i="1122"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1561" ippo="1561" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1068" ippo="1068" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo id="797" ippo="797">
     <d>
      <invs>
       <arg a="4" i="307"/>
       <arg a="3" i="1033"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1218" invs="693" ippo="1218" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1358" ippo="1358" s="g">
     <e txt="upperbound of constant string argument: %dd %dh %dm %ds"/>
    </ppo>
    <ppo deps="s" id="1690" ippo="1690" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="749" ippo="749" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo id="863" ippo="863">
     <d>
      <invs>
       <arg a="1" i="1045"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1545" ippo="1545" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="103" ippo="103" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="f" id="453" invs="762" ippo="453" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="862" ippo="862">
     <d>
      <invs>
       <arg a="1" i="1045"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="378" ippo="378" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="444" ippo="444" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="900" ippo="900" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="733" ippo="733" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="1406" ippo="1406">
     <d>
      <invs>
       <arg a="1" i="1030"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1682" ippo="1682" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1255" ippo="1255" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo id="1397" ippo="1397">
     <d>
      <invs>
       <arg a="2" i="1453,1059"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1481" ippo="1481"/>
    <ppo deps="s" id="1670" ippo="1670" s="g">
     <e txt="global variable macro_x with offset [60] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="1376" invs="1129" ippo="1376" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#628"/>
    </ppo>
    <ppo deps="s" id="984" ippo="984" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="180" ippo="180" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1381" ippo="1381">
     <d>
      <invs>
       <arg a="1" i="1112"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="400" ippo="400" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1125" ippo="1125" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="523" ippo="523" s="g">
     <e txt="index value 6 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="481" ippo="481" s="g">
     <e txt="index value 6 is non-negative"/>
    </ppo>
    <ppo deps="s" id="690" ippo="690" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1703" ippo="1703" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="141" ippo="141" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="774" ippo="774" s="g">
     <e txt="index value 15 is non-negative"/>
    </ppo>
    <ppo deps="s" id="8" ippo="8" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="f" id="204" invs="1345" ippo="204" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo id="502" ippo="502">
     <d>
      <invs>
       <arg a="4" i="506"/>
       <arg a="3" i="1086"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="959" invs="890" ippo="959" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo id="1097" ippo="1097">
     <d>
      <invs>
       <arg a="1" i="195,884,1001,1208"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="335" ids="2" invs="355" ippo="335" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="560" ippo="560" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1343" ippo="1343"/>
    <ppo deps="s" id="195" ippo="195" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="553" invs="921" ippo="553" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 10"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(10)#return (10)"/>
    </ppo>
    <ppo deps="s" id="1644" ippo="1644" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="124" invs="765" ippo="124" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter memref-61 satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="370" ippo="370" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="474" ippo="474" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="814" ippo="814"/>
    <ppo deps="s" id="985" ippo="985" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="803" ippo="803" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="757" ippo="757">
     <d>
      <invs>
       <arg a="1" i="90,853,964,1153"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1581" ippo="1581" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1205" ippo="1205" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="613" ippo="613"/>
    <ppo deps="s" id="332" ippo="332" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1258" ippo="1258">
     <d>
      <invs>
       <arg a="4" i="482"/>
       <arg a="3" i="1080"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1263" ippo="1263">
     <d>
      <invs>
       <arg a="1" i="1080"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1553" invs="934" ippo="1553" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="1453" ippo="1453" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="419" invs="933" ippo="419" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 2"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(2)#return (2)"/>
    </ppo>
    <ppo deps="f" id="753" invs="963" ippo="753" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#547(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="843" ippo="843" s="g">
     <e txt="index value 53 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="1627" invs="502" ippo="1627" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-16_1078_)#init,(memref-17_1080_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1035" ippo="1035" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="717" ids="11" invs="83" ippo="717" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;last_check) delegated to api"/>
    </ppo>
    <ppo deps="s" id="981" ippo="981" s="g">
     <e txt="global variable macro_x with offset [55] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1131" ippo="1131" s="g">
     <e txt="index value 40 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1411" ippo="1411" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="323" ippo="323" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="644" ippo="644" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo id="1233" ippo="1233"/>
    <ppo deps="s" id="1591" ippo="1591" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
    <ppo id="122" ippo="122">
     <d>
      <invs>
       <arg a="1" i="765"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="306" ippo="306" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="382" ippo="382" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="638" ippo="638" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1154" ippo="1154" s="g">
     <e txt="global variable macro_x with offset [44] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="100" ippo="100" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1477" ippo="1477" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1626" invs="502" ippo="1626" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="412" ippo="412"/>
    <ppo deps="s" id="1143" ippo="1143" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1602" invs="153" ippo="1602" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1422" ippo="1422" s="g">
     <e txt="global variable macro_x with offset [47] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="658" ippo="658">
     <d>
      <invs>
       <arg a="1" i="1032"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="307" ippo="307" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="463" ippo="463" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="513" ippo="513" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="793" ippo="793" s="g">
     <e txt="index value 15 is less than bound 99"/>
    </ppo>
    <ppo id="1733" ippo="1733"/>
    <ppo id="980" ippo="980">
     <d>
      <invs>
       <arg a="1" i="1036"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="192" invs="916" ippo="192" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 8"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(8)#return (8)"/>
    </ppo>
    <ppo deps="s" id="1478" ippo="1478" s="g">
     <e txt="index value 48 is non-negative"/>
    </ppo>
    <ppo deps="f" id="259" invs="426" ippo="259" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="271" ippo="271" s="g">
     <e txt="index value 42 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="561" ippo="561" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="320" ippo="320">
     <d>
      <invs>
       <arg a="1" i="1088"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1277" ippo="1277" s="g">
     <e txt="add non-negative number:  value is 16"/>
    </ppo>
    <ppo deps="f" id="143" invs="1306" ippo="143" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1070" ippo="1070" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="1185" ippo="1185">
     <d>
      <invs>
       <arg a="2" i="1011"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1261" ippo="1261" s="g">
     <e txt="index value 38 is non-negative"/>
    </ppo>
    <ppo id="19" ippo="19">
     <d>
      <invs>
       <arg a="3" i="798"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="32" ippo="32" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="172" ippo="172" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="228" ippo="228" s="g">
     <e txt="index value 42 is non-negative"/>
    </ppo>
    <ppo deps="s" id="497" ippo="497" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="545" ippo="545" s="g">
     <e txt="global variable macro_x with offset [32] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1046" ippo="1046" s="g">
     <e txt="index value 56 is non-negative"/>
    </ppo>
    <ppo id="1618" ippo="1618"/>
    <ppo deps="s" id="503" ippo="503" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="514" ippo="514" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="838" ippo="838">
     <d>
      <invs>
       <arg a="1" i="1028"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="60" ippo="60" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="1704" invs="526" ippo="1704" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_1042"/>
       </arg>
      </amsgs>
     </d>
     <e txt="address of stack variable temp_buffer is not null"/>
    </ppo>
    <ppo deps="s" id="1502" ippo="1502" s="g">
     <e txt="field host_name (162) is assigned a value with a valid upper bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1115" ippo="1115" s="g">
     <e txt="index value 40 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="759" ippo="759" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="144" invs="588" ippo="144" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="706" ippo="706" s="g">
     <e txt="index value 13 is non-negative"/>
    </ppo>
    <ppo id="1043" ippo="1043">
     <d>
      <invs>
       <arg a="4" i="213"/>
       <arg a="3" i="1004"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1075" ippo="1075" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1459" ippo="1459" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="1694" ippo="1694"/>
    <ppo deps="s" id="629" ippo="629" s="g">
     <e txt="%.3f is a string literal"/>
    </ppo>
    <ppo id="702" ippo="702">
     <d>
      <invs>
       <arg a="1" i="988"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="741" ippo="741"/>
    <ppo id="1450" ippo="1450"/>
    <ppo deps="s" id="1597" ippo="1597" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1617" ippo="1617" s="g">
     <e txt="index value 79 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1470" ippo="1470" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1186" ippo="1186" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1565" ippo="1565" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1576" invs="1110" ippo="1576" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#655(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="f" id="171" invs="800" ippo="171" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter memref-18 satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="34" ippo="34" s="g">
     <e txt="index value 17 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1285" ippo="1285" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1445" ippo="1445">
     <d>
      <invs>
       <arg a="1" i="1061"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1734" ippo="1734" s="g">
     <e txt="global variable macro_x with offset [78] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="1235" ippo="1235"/>
    <ppo id="1265" ippo="1265">
     <d>
      <invs>
       <arg a="2" i="1080"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="127" ippo="127" s="g">
     <e txt="index value 60 is non-negative"/>
    </ppo>
    <ppo deps="s" id="614" ippo="614" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo id="748" ippo="748"/>
    <ppo deps="a" id="855" ids="2" invs="294" ippo="855" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo id="1276" ippo="1276">
     <d>
      <invs>
       <arg a="1" i="1002"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1296" ippo="1296" s="g">
     <e txt="global variable macro_x with offset [36] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1286" ippo="1286" s="g">
     <e txt="index value 36 is non-negative"/>
    </ppo>
    <ppo id="1136" ippo="1136">
     <d>
      <invs>
       <arg a="4" i="410"/>
       <arg a="3" i="1055"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1364" ippo="1364" s="g">
     <e txt="index value 36 is non-negative"/>
    </ppo>
    <ppo id="1463" ippo="1463"/>
    <ppo deps="f" id="298" invs="1008" ippo="298" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#487(rv:malloc)"/>
    </ppo>
    <ppo id="576" ippo="576">
     <d>
      <invs>
       <arg a="2" i="1122"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1589" ippo="1589" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo id="998" ippo="998">
     <d>
      <invs>
       <arg a="1" i="1098"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="28" ippo="28">
     <d>
      <invs>
       <arg a="1" i="798"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="903" ippo="903" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1291" ippo="1291" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="325" ippo="325" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="379" ippo="379" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1552" invs="1125" ippo="1552" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#655(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo id="440" ippo="440">
     <d>
      <invs>
       <arg a="1" i="1141"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="974" ippo="974">
     <d>
      <invs>
       <arg a="1" i="1036"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="184" ippo="184" s="g">
     <e txt="global variable macro_x with offset [98] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="976" ippo="976" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="1505" ids="2" invs="527" ippo="1505" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1709" ippo="1709" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="f" id="72" invs="1260" ippo="72" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="f" id="261" invs="1311" ippo="261" s="g" ts="2018-01-09 15:52:09">
     <e txt="all targets are non-null: [HARD,SOFT]"/>
    </ppo>
    <ppo deps="a" id="93" ids="7" invs="83" ippo="93" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;perf_data) delegated to api"/>
    </ppo>
    <ppo deps="s" id="970" ippo="970" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="701" ippo="701" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="1625" invs="1300" ippo="1625" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo deps="s" id="1108" ippo="1108" s="g">
     <e txt="upperbound of constant string argument: %d"/>
    </ppo>
    <ppo deps="f" id="1403" invs="1050" ippo="1403" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#637(rv:is_service_member_of_servicegroup)"/>
    </ppo>
    <ppo deps="s" id="832" ippo="832" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo id="1407" ippo="1407">
     <d>
      <invs>
       <arg a="1" i="1030"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="254" ippo="254" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="817" ippo="817" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1047" ippo="1047" s="g">
     <e txt="index value 56 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1520" ippo="1520" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="a" id="989" ids="12" invs="83" ippo="989" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;last_time_unknown) delegated to api"/>
    </ppo>
    <ppo deps="f" id="207" invs="1284" ippo="207" s="g" ts="2018-01-09 15:52:09">
     <e txt="all targets are non-null: [ACTIVE,PASSIVE]"/>
    </ppo>
    <ppo deps="s" id="456" ippo="456" s="g">
     <e txt="index value 5 is less than bound 99"/>
    </ppo>
    <ppo id="7" ippo="7"/>
    <ppo deps="f" id="1320" invs="1100" ippo="1320" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#624"/>
    </ppo>
    <ppo id="1448" ippo="1448">
     <d>
      <invs>
       <arg a="2" i="1061"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="655" ippo="655" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1676" ippo="1676" s="g">
     <e txt="global variable macro_x with offset [79] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="20" ippo="20">
     <d>
      <invs>
       <arg a="1" i="798"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1504" ippo="1504" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="1642" ippo="1642"/>
    <ppo deps="f" id="1405" invs="1030" ippo="1405" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#636(globalservicegroup_list9061)_xx_assignedAt#636(fieldnext159)"/>
    </ppo>
    <ppo deps="s" id="409" ippo="409" s="g">
     <e txt="index value 5 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="625" ippo="625" s="g">
     <e txt="index value 34 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1435" ippo="1435" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1009" ippo="1009" s="g">
     <e txt="index value 56 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1412" ippo="1412" s="g">
     <e txt="index value 47 is non-negative"/>
    </ppo>
    <ppo deps="f" id="166" invs="1314" ippo="166" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo id="376" ippo="376">
     <d>
      <invs>
       <arg a="2" i="1072"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1225" ippo="1225" s="g">
     <e txt="index value 38 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1347" ippo="1347" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="1438" ippo="1438"/>
    <ppo id="479" ippo="479"/>
    <ppo deps="f" id="653" invs="186" ippo="653" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1004" ippo="1004" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1236" ippo="1236" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1426" ippo="1426" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="1521" ippo="1521" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="49" invs="1240" ippo="49" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="908" ippo="908" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1362" ippo="1362" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="1203" ippo="1203">
     <d>
      <invs>
       <arg a="4" i="711"/>
       <arg a="3" i="1136"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1696" ippo="1696" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1571" ippo="1571"/>
    <ppo deps="s" id="62" ippo="62" s="g">
     <e txt="index value 17 is non-negative"/>
    </ppo>
    <ppo deps="s" id="284" ippo="284" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1608" ippo="1608" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="106" ippo="106" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1055" ippo="1055" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="266" ippo="266">
     <d>
      <invs>
       <arg a="1" i="1108"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1640" ippo="1640"/>
    <ppo deps="f" id="688" invs="1286" ippo="688" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_12"/>
    </ppo>
    <ppo id="1116" ippo="1116">
     <d>
      <invs>
       <arg a="1" i="1138"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1010" ippo="1010" s="g">
     <e txt="index value 56 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1560" ippo="1560" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="493" ippo="493" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="56" ippo="56" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo id="914" ippo="914">
     <d>
      <invs>
       <arg a="2" i="1074"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1161" invs="593" ippo="1161" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1580" invs="608" ippo="1580" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-16_1078_)#init,(memref-17_1080_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="422" ippo="422" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="443" ippo="443" s="g">
     <e txt="constant value 2 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="732" ippo="732" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="967" ippo="967" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1094" invs="195" ippo="1094" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1299" ippo="1299" s="g">
     <e txt="index value 36 is non-negative"/>
    </ppo>
    <ppo deps="s" id="772" ippo="772" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1352" ippo="1352" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="1557" ippo="1557"/>
    <ppo deps="s" id="919" ippo="919" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="840" ippo="840" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="1366" ippo="1366">
     <d>
      <invs>
       <arg a="1" i="1131"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="849" ippo="849" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1536" ippo="1536" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo deps="a" id="201" ids="13" invs="83" ippo="201" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;check_type) delegated to api"/>
    </ppo>
    <ppo id="574" ippo="574">
     <d>
      <invs>
       <arg a="1" i="1122"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1708" ippo="1708" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="346" ippo="346" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1335" ippo="1335" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="1306" ippo="1306">
     <d>
      <invs>
       <arg a="1" i="628,930,1116,1335"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="288" ippo="288" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="828" ippo="828" s="g">
     <e txt="index value 53 is non-negative"/>
    </ppo>
    <ppo id="844" ippo="844">
     <d>
      <invs>
       <arg a="1" i="1028"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="956" ippo="956" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1139" ippo="1139" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="1573" ippo="1573"/>
    <ppo deps="s" id="761" ippo="761" s="g">
     <e txt="index value 15 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1630" ippo="1630" s="g">
     <e txt="index value 79 is non-negative"/>
    </ppo>
    <ppo deps="s" id="45" ippo="45" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="78" ippo="78" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1014" ippo="1014" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="616" ippo="616" s="g">
     <e txt="index value 34 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="966" ippo="966" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1717" ippo="1717" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="23" ippo="23" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="1601" invs="1179" ippo="1601" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo deps="s" id="1024" ippo="1024" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1432" ippo="1432" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1631" ippo="1631" s="g">
     <e txt="index value 79 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="696" ippo="696" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo id="1148" ippo="1148"/>
    <ppo deps="f" id="337" invs="355" ippo="337" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1305" invs="1335" ippo="1305" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_21"/>
    </ppo>
    <ppo deps="s" id="351" ippo="351" s="g">
     <e txt="global variable macro_x with offset [4] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1159" ippo="1159" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="1303" invs="628" ippo="1303" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="393" ippo="393" s="g">
     <e txt="global variable macro_x with offset [4] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1389" ippo="1389" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="197" ippo="197" s="g">
     <e txt="index value 98 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1568" ippo="1568" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1614" ippo="1614" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="1654" ippo="1654" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="360" invs="1182" ippo="360" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="526" ippo="526" s="g">
     <e txt="add non-negative number:  value is 7"/>
    </ppo>
    <ppo deps="s" id="566" ippo="566" s="g">
     <e txt="upperbound of constant string argument: %.3f"/>
    </ppo>
    <ppo id="839" ippo="839">
     <d>
      <invs>
       <arg a="4" i="289"/>
       <arg a="3" i="1028"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1567" ippo="1567" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="747" ippo="747" s="g">
     <e txt="global variable macro_x with offset [15] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="794" ippo="794">
     <d>
      <invs>
       <arg a="1" i="1033"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1011" ippo="1011" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1262" ippo="1262" s="g">
     <e txt="index value 38 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="202" ippo="202" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1135" ippo="1135" s="g">
     <e txt="add non-negative number:  value is 2"/>
    </ppo>
    <ppo deps="s" id="1527" ippo="1527" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="9" ippo="9" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1021" ippo="1021" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="f" id="1499" invs="527" ippo="1499" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1638" ippo="1638" s="g">
     <e txt="index value 79 is non-negative"/>
    </ppo>
    <ppo deps="a" id="719" ids="2" invs="142" ippo="719" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1639" ippo="1639" s="g">
     <e txt="index value 79 is less than bound 99"/>
    </ppo>
    <ppo id="220" ippo="220">
     <d>
      <invs>
       <arg a="2" i="1040"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="888" ippo="888" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="312" invs="1233" ippo="312" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1341" ippo="1341" s="g">
     <e txt="value is 60"/>
    </ppo>
    <ppo deps="s" id="347" ippo="347" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="735" ippo="735" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="1183" ippo="1183">
     <d>
      <invs>
       <arg a="1" i="1011"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1716" ippo="1716" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="146" ippo="146" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="852" ids="14" invs="781" ippo="852" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_time_ok: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1386" ippo="1386" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="500" ippo="500" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="938" ippo="938" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="1508" invs="527" ippo="1508" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1622" ippo="1622">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="316" ippo="316" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1081" ippo="1081"/>
    <ppo deps="s" id="1239" ippo="1239" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="304" ippo="304" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="a" id="582" ids="15" invs="83" ippo="582" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;execution_time) delegated to api"/>
    </ppo>
    <ppo deps="s" id="322" ippo="322" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="f" id="1342" invs="1068" ippo="1342" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#627"/>
    </ppo>
    <ppo deps="s" id="1034" ippo="1034" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="268" ippo="268" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="773" ippo="773" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="856" invs="1261" ippo="856" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="f" id="1195" invs="243" ippo="1195" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="55" ippo="55" s="g">
     <e txt="index value 17 is less than bound 99"/>
    </ppo>
    <ppo id="1066" ippo="1066">
     <d>
      <invs>
       <arg a="1" i="1034"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1429" ippo="1429" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="990" ippo="990" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="657" ippo="657" s="g">
     <e txt="index value 34 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1399" ippo="1399" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="59" ippo="59" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="a" id="165" ids="2" invs="613" ippo="165" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="445" ippo="445" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="466" ippo="466" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="698" ippo="698" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="809" ippo="809"/>
    <ppo deps="f" id="223" invs="1284" ippo="223" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_string_ACTIVE, addrof_string_PASSIVE"/>
    </ppo>
    <ppo deps="s" id="401" ippo="401" s="g">
     <e txt="index value 5 is non-negative"/>
    </ppo>
    <ppo deps="s" id="609" ippo="609" s="g">
     <e txt="index value 34 is non-negative"/>
    </ppo>
    <ppo deps="s" id="438" ippo="438" s="g">
     <e txt="index value 5 is non-negative"/>
    </ppo>
    <ppo deps="s" id="934" ippo="934" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="f" id="300" invs="887" ippo="300" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 32"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(32)#return (32)"/>
    </ppo>
    <ppo deps="s" id="151" ippo="151" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="158" ids="16" invs="800" ippo="158" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc-&gt;service_check_command) delegated to api"/>
    </ppo>
    <ppo id="1295" ippo="1295"/>
    <ppo deps="s" id="575" ippo="575" s="g">
     <e txt="global variable macro_x with offset [32] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="697" ippo="697" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1455" ippo="1455" s="g">
     <e txt="index value 48 is less than bound 99"/>
    </ppo>
    <ppo id="138" ippo="138"/>
    <ppo deps="f" id="278" invs="825" ippo="278" s="g" ts="2018-01-09 15:52:09">
     <e txt="lower-bound value is address of string literal SOFT; or address of string literal HARD; all of which satisfy the lower-bound property"/>
    </ppo>
    <ppo deps="a" id="584" ids="2" invs="662" ippo="584" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1232" ippo="1232" s="g">
     <e txt="index value 38 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="58" ippo="58" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="170" invs="800" ippo="170" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter memref-18 satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1244" ippo="1244">
     <d>
      <invs>
       <arg a="1" i="393,908,1052,1291"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1370" ippo="1370" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="a" id="255" ids="17" invs="83" ippo="255" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;state_type) delegated to api"/>
    </ppo>
    <ppo deps="s" id="468" ippo="468" s="g">
     <e txt="index value 6 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1607" ippo="1607" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="a" id="48" ids="2" invs="279" ippo="48" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="963" ippo="963" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1517" ippo="1517" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1100" ippo="1100" s="g">
     <e txt="index value 40 is non-negative"/>
    </ppo>
    <ppo deps="s" id="536" ippo="536" s="g">
     <e txt="index value 32 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1570" ippo="1570" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="173" ippo="173" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="442" ippo="442">
     <d>
      <invs>
       <arg a="2" i="1141"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1222" ippo="1222" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1237" ippo="1237" s="g">
     <e txt="index value 38 is non-negative"/>
    </ppo>
    <ppo deps="f" id="260" invs="426" ippo="260" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="820" ippo="820" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="f" id="586" invs="662" ippo="586" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1189" ippo="1189" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1439" ippo="1439"/>
    <ppo deps="s" id="282" ippo="282" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo deps="s" id="408" ippo="408" s="g">
     <e txt="index value 5 is non-negative"/>
    </ppo>
    <ppo deps="s" id="516" ippo="516" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="1134" ippo="1134">
     <d>
      <invs>
       <arg a="1" i="1055"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1325" ippo="1325"/>
    <ppo deps="s" id="873" ippo="873" s="g">
     <e txt="index value 54 is non-negative"/>
    </ppo>
    <ppo id="1069" ippo="1069">
     <d>
      <invs>
       <arg a="4" i="327"/>
       <arg a="3" i="1034"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="1126" ids="2" invs="732" ippo="1126" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="567" ippo="567" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="969" ippo="969" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="680" ippo="680"/>
    <ppo deps="s" id="979" ippo="979" s="g">
     <e txt="index value 55 is less than bound 99"/>
    </ppo>
    <ppo id="265" ippo="265"/>
    <ppo deps="f" id="687" invs="903" ippo="687" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="a" id="716" ids="18" invs="770" ippo="716" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition signed-to-unsigned-cast((long) svc-&gt;last_check: unsigned long) delegated to api"/>
    </ppo>
    <ppo deps="s" id="854" ippo="854" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1656" ippo="1656" s="g">
     <e txt="index value 17 is less than bound 99"/>
    </ppo>
    <ppo id="641" ippo="641">
     <d>
      <invs>
       <arg a="1" i="999"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1516" ippo="1516" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="198" ippo="198" s="g">
     <e txt="index value 98 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="290" ippo="290" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="742" ippo="742" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="1564" ippo="1564" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="597" ippo="597" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="1111" ippo="1111">
     <d>
      <invs>
       <arg a="4" i="727"/>
       <arg a="3" i="1138"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1451" ippo="1451"/>
    <ppo deps="s" id="909" ippo="909" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1648" invs="1305" ippo="1648" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo deps="s" id="983" ippo="983" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="a" id="46" ids="19" invs="83" ippo="46" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;plugin_output) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1316" ippo="1316" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1058" ippo="1058" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1152" ippo="1152" s="g">
     <e txt="index value 44 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1168" ippo="1168" s="g">
     <e txt="index value 44 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1310" ippo="1310" s="g">
     <e txt="index value 36 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="35" ippo="35" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="603" ippo="603" s="g">
     <e txt="index value 34 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="664" ippo="664" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1196" invs="243" ippo="1196" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1606" ippo="1606"/>
    <ppo deps="f" id="451" invs="1346" ippo="451" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="43" ippo="43" s="g">
     <e txt="global variable macro_x with offset [17] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="1128" invs="732" ippo="1128" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1443" ippo="1443"/>
    <ppo deps="s" id="182" ippo="182" s="g">
     <e txt="index value 98 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="427" ippo="427" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1269" ippo="1269" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="964" ippo="964" s="g">
     <e txt="index value 55 is non-negative"/>
    </ppo>
    <ppo id="778" ippo="778">
     <d>
      <invs>
       <arg a="2" i="1134"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1052" ippo="1052" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1112" ippo="1112" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="354" ippo="354" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="557" ippo="557" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="a" id="1124" ids="20" invs="83" ippo="1124" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;scheduled_downtime_depth) delegated to api"/>
    </ppo>
    <ppo id="1491" ippo="1491"/>
    <ppo deps="s" id="1666" ippo="1666" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1062" invs="218" ippo="1062" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1117" ippo="1117" s="g">
     <e txt="global variable macro_x with offset [40] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="219" ippo="219" s="g">
     <e txt="global variable macro_x with offset [98] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="459" ippo="459" s="g">
     <e txt="add non-negative number:  value is 1"/>
    </ppo>
    <ppo deps="s" id="777" ippo="777" s="g">
     <e txt="global variable macro_x with offset [15] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="272" ippo="272">
     <d>
      <invs>
       <arg a="1" i="1108"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="624" ippo="624" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="799" ippo="799" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="145" invs="588" ippo="145" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="789" invs="705" ippo="789" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="604" ippo="604" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="1057" ids="21" invs="83" ippo="1057" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;last_time_critical) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1315" ippo="1315" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="1466" ippo="1466" s="g">
     <e txt="index value 48 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1730" ippo="1730" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="15" ippo="15" s="g">
     <e txt="index value 3 is non-negative"/>
    </ppo>
    <ppo deps="a" id="1503" ids="22" invs="83" ippo="1503" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;description) delegated to api"/>
    </ppo>
    <ppo deps="f" id="1532" invs="706" ippo="1532" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="221" ippo="221" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1054" ippo="1054" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="639" ippo="639" s="g">
     <e txt="index value 34 is non-negative"/>
    </ppo>
    <ppo id="1707" ippo="1707">
     <d>
      <invs>
       <arg a="1" i="526"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="121" invs="111" ippo="121" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="740" ippo="740" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1037" ippo="1037" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="548" ippo="548" s="g">
     <e txt="index value 32 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1673" ippo="1673" s="g">
     <e txt="index value 79 is non-negative"/>
    </ppo>
    <ppo deps="s" id="152" ippo="152" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="205" invs="754" ippo="205" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="918" ippo="918" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1452" ippo="1452" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="429" ippo="429" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="1487" ippo="1487">
     <d>
      <invs>
       <arg a="1" i="1081"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="437" ippo="437" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="579" ippo="579" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1121" ippo="1121" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1464" ippo="1464" s="g">
     <e txt="global variable macro_x with offset [48] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="54" ippo="54" s="g">
     <e txt="index value 17 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1107" ippo="1107" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1688" ippo="1688" s="g">
     <e txt="global variable macro_x with offset [77] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="a" id="140" ids="23" invs="83" ippo="140" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;service_check_command) delegated to api"/>
    </ppo>
    <ppo deps="s" id="581" ippo="581" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="628" ippo="628" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="449" ippo="449" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="f" id="720" invs="1174" ippo="720" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="995" ippo="995" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1028" invs="1294" ippo="1028" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_17"/>
    </ppo>
    <ppo deps="f" id="1556" invs="669" ippo="1556" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-16_1078_)#init,(memref-17_1080_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1661" ippo="1661" s="g">
     <e txt="index value 19 is non-negative"/>
    </ppo>
    <ppo deps="s" id="16" ippo="16" s="g">
     <e txt="index value 3 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="953" ippo="953" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="954" ippo="954" s="g">
     <e txt="index value 55 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1584" ippo="1584" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1713" ippo="1713" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1684" ippo="1684" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="131" ippo="131"/>
    <ppo deps="s" id="231" ippo="231" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1599" invs="992" ippo="1599" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#655(rv:find_serviceextinfo)"/>
    </ppo>
    <ppo deps="s" id="68" ippo="68" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1393" ippo="1393" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1360" ippo="1360">
     <d>
      <invs>
       <arg a="1" i="1131"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="85" ippo="85" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="808" ippo="808" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1247" ippo="1247" s="g">
     <e txt="index value 38 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1736" ippo="1736" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
    <ppo deps="f" id="1194" invs="1230" ippo="1194" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1270" ippo="1270" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="105" ippo="105" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="f" id="519" invs="512" ippo="519" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="871" ippo="871" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1535" ippo="1535" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1662" ippo="1662" s="g">
     <e txt="index value 19 is less than bound 99"/>
    </ppo>
    <ppo id="1297" ippo="1297"/>
    <ppo id="1519" ippo="1519"/>
    <ppo deps="f" id="247" invs="1289" ippo="247" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_6"/>
    </ppo>
    <ppo deps="s" id="377" ippo="377" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="650" ippo="650" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="1319" ippo="1319"/>
    <ppo deps="s" id="880" ippo="880" s="g">
     <e txt="index value 54 is non-negative"/>
    </ppo>
    <ppo deps="f" id="1025" invs="1056" ippo="1025" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#583(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="63" ippo="63" s="g">
     <e txt="index value 17 is less than bound 99"/>
    </ppo>
    <ppo deps="a" id="357" ids="24" invs="83" ippo="357" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo deps="s" id="764" ippo="764" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="297" ippo="297" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="812" ippo="812" s="g">
     <e txt="index value 53 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1510" ippo="1510" s="g">
     <e txt="field description (162) is assigned a value with a valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="1735" ippo="1735"/>
    <ppo deps="s" id="615" ippo="615" s="g">
     <e txt="index value 34 is non-negative"/>
    </ppo>
    <ppo id="1524" ippo="1524"/>
    <ppo id="555" ippo="555">
     <d>
      <invs>
       <arg a="1" i="563,921,1095,1304"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="786" ippo="786" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1120" ippo="1120" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="569" ippo="569">
     <d>
      <invs>
       <arg a="4" i="657"/>
       <arg a="3" i="1122"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="999" ippo="999">
     <d>
      <invs>
       <arg a="1" i="1098"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1454" ippo="1454" s="g">
     <e txt="index value 48 is non-negative"/>
    </ppo>
    <ppo deps="s" id="944" ippo="944" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="962" ippo="962" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1722" ippo="1722" s="g">
     <e txt="global variable macro_x with offset [78] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="349" ippo="349" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo id="434" ippo="434">
     <d>
      <invs>
       <arg a="1" i="1141"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="710" ippo="710">
     <d>
      <invs>
       <arg a="2" i="988"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1027" invs="911" ippo="1027" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="s" id="199" ippo="199" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="264" ippo="264">
     <d>
      <invs>
       <arg a="1" i="825,824,1109,1311"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1419" ippo="1419" s="g">
     <e txt="index value 47 is non-negative"/>
    </ppo>
    <ppo id="1613" ippo="1613"/>
    <ppo id="1739" ippo="1739">
     <d>
      <invs>
       <arg a="1" i="724"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:memory base: addrof_localvar_temp_buffer_1042"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo deps="s" id="1711" ippo="1711" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="328" ippo="328">
     <d>
      <invs>
       <arg a="2" i="1088"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="792" ippo="792" s="g">
     <e txt="index value 15 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1063" ippo="1063" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1663" ippo="1663">
     <d>
      <invs>
       <arg a="1" i="1452,1049"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="754" invs="90" ippo="754" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1020" ippo="1020"/>
    <ppo deps="s" id="1427" ippo="1427" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="353" ippo="353" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="499" ippo="499" s="g">
     <e txt="upperbound of constant string argument: %d"/>
    </ppo>
    <ppo deps="f" id="1314" invs="997" ippo="1314" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#608"/>
    </ppo>
    <ppo deps="s" id="187" ippo="187" s="g">
     <e txt="index value 98 is non-negative"/>
    </ppo>
    <ppo deps="s" id="381" ippo="381" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="587" invs="662" ippo="587" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1378" ippo="1378" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1653" ippo="1653"/>
    <ppo deps="s" id="511" ippo="511" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="389" ippo="389" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1130" ippo="1130" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1643" ippo="1643"/>
    <ppo deps="s" id="157" ippo="157" s="g">
     <e txt="index value 60 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="289" ippo="289" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1414" ippo="1414" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="490" ippo="490" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="1555" invs="669" ippo="1555" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="730" ippo="730" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1044" ippo="1044" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1300" ippo="1300" s="g">
     <e txt="index value 36 is less than bound 99"/>
    </ppo>
    <ppo id="1213" ippo="1213"/>
    <ppo deps="s" id="1223" ippo="1223" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1575" ippo="1575">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="982" ippo="982">
     <d>
      <invs>
       <arg a="2" i="1036"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1563" ippo="1563" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo id="1671" ippo="1671">
     <d>
      <invs>
       <arg a="2" i="1118,1455"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="241" ippo="241" s="g">
     <e txt="index value 42 is non-negative"/>
    </ppo>
    <ppo deps="s" id="330" ippo="330" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1302" invs="1115" ippo="1302" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#622(rv:malloc)"/>
    </ppo>
    <ppo id="169" ippo="169">
     <d>
      <invs>
       <arg a="1" i="800"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="480" ippo="480" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="317" ippo="317" s="g">
     <e txt="upperbound of constant string argument: OK"/>
    </ppo>
    <ppo deps="a" id="22" ids="22" invs="83" ippo="22" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;description) delegated to api"/>
    </ppo>
    <ppo deps="s" id="215" ippo="215" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="286" ippo="286"/>
    <ppo deps="s" id="355" ippo="355" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="813" ippo="813" s="g">
     <e txt="index value 53 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1049" ippo="1049" s="g">
     <e txt="global variable macro_x with offset [56] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1114" ippo="1114" s="g">
     <e txt="index value 40 is non-negative"/>
    </ppo>
    <ppo id="458" ippo="458">
     <d>
      <invs>
       <arg a="1" i="1113"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1041" ippo="1041" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="1594" ippo="1594"/>
    <ppo deps="s" id="1003" ippo="1003" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1582" ippo="1582" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="65" ippo="65">
     <d>
      <invs>
       <arg a="1" i="778"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="280" ippo="280" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="600" ippo="600" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1144" ippo="1144" s="g">
     <e txt="index value 44 is non-negative"/>
    </ppo>
    <ppo id="44" ippo="44"/>
    <ppo deps="s" id="837" ippo="837" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1281" ippo="1281" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo id="1596" ippo="1596"/>
    <ppo deps="f" id="120" invs="111" ippo="120" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="816" ippo="816"/>
    <ppo deps="s" id="845" ippo="845" s="g">
     <e txt="global variable macro_x with offset [53] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="906" ippo="906">
     <d>
      <invs>
       <arg a="1" i="1074"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1089" ippo="1089" s="g">
     <e txt="constant value 3 fits in type unsigned long"/>
    </ppo>
    <ppo id="539" ippo="539"/>
    <ppo deps="a" id="64" ids="25" invs="778" ippo="64" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc-&gt;plugin_output) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1479" ippo="1479" s="g">
     <e txt="index value 48 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1714" ippo="1714" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
    <ppo deps="s" id="292" ippo="292" s="g">
     <e txt="global variable macro_x with offset [4] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="593" ippo="593" s="g">
     <e txt="add non-negative number:  value is 9"/>
    </ppo>
    <ppo deps="f" id="276" invs="1107" ippo="276" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#482"/>
    </ppo>
    <ppo deps="s" id="986" ippo="986" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1678" ippo="1678" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="841" ippo="841" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1355" ippo="1355" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="1699" ippo="1699"/>
    <ppo deps="s" id="885" ippo="885" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1140" ippo="1140" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="1494" ids="26" invs="83" ippo="1494" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;host_name) delegated to api"/>
    </ppo>
    <ppo deps="s" id="540" ippo="540" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="a" id="853" ids="27" invs="83" ippo="853" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;last_time_ok) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1369" ippo="1369" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo id="1528" ippo="1528">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1038" ippo="1038" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="1163" invs="1308" ippo="1163" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_19"/>
    </ppo>
    <ppo deps="s" id="1543" ippo="1543" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo id="387" ippo="387">
     <d>
      <invs>
       <arg a="4" i="221"/>
       <arg a="3" i="1006"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1274" ippo="1274" s="g">
     <e txt="index value 38 is less than bound 99"/>
    </ppo>
    <ppo id="1290" ippo="1290"/>
    <ppo deps="s" id="398" ippo="398" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="878" ippo="878" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="1382" ippo="1382">
     <d>
      <invs>
       <arg a="1" i="1112"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="498" ippo="498" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="583" ippo="583" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1367" ippo="1367" s="g">
     <e txt="global variable macro_x with offset [36] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="721" invs="142" ippo="721" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="637" ippo="637" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="1489" ippo="1489">
     <d>
      <invs>
       <arg a="2" i="1081"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1590" ippo="1590" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="577" ippo="577" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="868" ippo="868" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="371" ippo="371" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="939" ippo="939" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="1118" ippo="1118">
     <d>
      <invs>
       <arg a="2" i="1138"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1632" ippo="1632" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="52" ippo="52" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="491" ippo="491" s="g">
     <e txt="index value 6 is non-negative"/>
    </ppo>
    <ppo deps="a" id="785" ids="28" invs="83" ippo="785" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;last_state_change) delegated to api"/>
    </ppo>
    <ppo id="1408" ippo="1408">
     <d>
      <invs>
       <arg a="2" i="1030"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1701" ippo="1701"/>
    <ppo id="1741" ippo="1741">
     <d>
      <invs>
       <arg a="1" i="724"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="333" ids="24" invs="83" ippo="333" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo id="703" ippo="703">
     <d>
      <invs>
       <arg a="4" i="136"/>
       <arg a="3" i="988"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1178" ippo="1178">
     <d>
      <invs>
       <arg a="4" i="238"/>
       <arg a="3" i="1011"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="250" ippo="250" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="626" ippo="626" s="g">
     <e txt="index value 34 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="30" invs="798" ippo="30" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter memref-17 satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1093" invs="1000" ippo="1093" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#592(rv:malloc)"/>
    </ppo>
    <ppo deps="f" id="1433" invs="1089" ippo="1433" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#636(globalservicegroup_list9061)_xx_assignedAt#636(fieldnext159)"/>
    </ppo>
    <ppo id="1441" ippo="1441"/>
    <ppo deps="f" id="206" invs="754" ippo="206" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="446" ippo="446" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="783" ippo="783" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="937" ippo="937" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1098" ippo="1098" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="1240" invs="1051" ippo="1240" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#613(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="1284" ippo="1284" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="277" invs="1311" ippo="277" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_string_HARD, addrof_string_SOFT"/>
    </ppo>
    <ppo id="1651" ippo="1651"/>
    <ppo id="89" ippo="89"/>
    <ppo deps="s" id="695" ippo="695" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="291" ippo="291"/>
    <ppo deps="f" id="1061" invs="218" ippo="1061" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="79" ippo="79" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="217" ippo="217" s="g">
     <e txt="index value 98 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="470" ippo="470" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="833" ippo="833" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="866" ippo="866" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="1548" ippo="1548"/>
    <ppo deps="s" id="1683" ippo="1683" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1745" ippo="1745" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="573" ippo="573" s="g">
     <e txt="index value 32 is less than bound 99"/>
    </ppo>
    <ppo id="1669" ippo="1669">
     <d>
      <invs>
       <arg a="1" i="1118,1455"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="666" ippo="666" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="715" ippo="715" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1322" ippo="1322">
     <d>
      <invs>
       <arg a="3" i="583"/>
       <arg a="2" i="1100"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="699" ippo="699" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo id="1416" ippo="1416"/>
    <ppo deps="s" id="1718" ippo="1718" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="590" ippo="590" s="g">
     <e txt="index value 32 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="665" ippo="665" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="1547" ippo="1547"/>
    <ppo deps="s" id="476" ippo="476" s="g">
     <e txt="index value 6 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="303" ippo="303" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="712" ippo="712" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1065" ippo="1065" s="g">
     <e txt="index value 56 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="81" ippo="81" s="g">
     <e txt="index value 19 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="356" ippo="356" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="672" ippo="672" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="273" ippo="273" s="g">
     <e txt="global variable macro_x with offset [42] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="70" ippo="70" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="1029" ippo="1029">
     <d>
      <invs>
       <arg a="1" i="414,911,1057,1294"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="898" ippo="898" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="134" ippo="134" s="g">
     <e txt="index value 60 is non-negative"/>
    </ppo>
    <ppo id="509" ippo="509">
     <d>
      <invs>
       <arg a="2" i="1086"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="24" ids="2" invs="603" ippo="24" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1087" ippo="1087" s="g">
     <e txt="global variable macro_x with offset [40] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="1374" invs="1126" ippo="1374" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#624"/>
    </ppo>
    <ppo deps="f" id="167" invs="613" ippo="167" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="407" ippo="407" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="798" ippo="798" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1172" ippo="1172" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="415" ippo="415" s="g">
     <e txt="index value 5 is less than bound 99"/>
    </ppo>
    <ppo id="507" ippo="507">
     <d>
      <invs>
       <arg a="1" i="1086"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="245" invs="366" ippo="245" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="750" ippo="750" s="g">
     <e txt="index value 15 is non-negative"/>
    </ppo>
    <ppo deps="s" id="830" ippo="830" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="917" ippo="917" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1272" ippo="1272" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="57" ippo="57" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="156" ippo="156" s="g">
     <e txt="index value 60 is non-negative"/>
    </ppo>
    <ppo id="975" ippo="975">
     <d>
      <invs>
       <arg a="4" i="332"/>
       <arg a="3" i="1036"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="669" ippo="669" s="g">
     <e txt="index value 13 is non-negative"/>
    </ppo>
    <ppo deps="f" id="1326" invs="1092" ippo="1326" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#625"/>
    </ppo>
    <ppo deps="s" id="941" ippo="941" s="g">
     <e txt="index value 55 is non-negative"/>
    </ppo>
    <ppo id="1001" ippo="1001">
     <d>
      <invs>
       <arg a="4" i="578"/>
       <arg a="3" i="1098"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="420" invs="1338" ippo="420" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_8"/>
    </ppo>
    <ppo deps="s" id="1418" ippo="1418" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="344" ippo="344">
     <d>
      <invs>
       <arg a="1" i="1091"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="552" invs="563" ippo="552" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="518" invs="1301" ippo="518" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo id="1500" ippo="1500">
     <d>
      <invs>
       <arg a="1" i="793,1496"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="517" ids="2" invs="512" ippo="517" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo id="1361" ippo="1361">
     <d>
      <invs>
       <arg a="4" i="679"/>
       <arg a="3" i="1131"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1501" ippo="1501" s="g">
     <e txt="field host_name (162) is assigned a value with a valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1629" ippo="1629" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="971" ippo="971" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1702" ippo="1702" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo id="457" ippo="457">
     <d>
      <invs>
       <arg a="1" i="1113"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="725" ippo="725" s="g">
     <e txt="index value 13 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="997" ippo="997" s="g">
     <e txt="index value 55 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1146" ippo="1146" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1724" ippo="1724" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="s" id="331" ippo="331" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="965" ippo="965" s="g">
     <e txt="index value 55 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1731" ippo="1731" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
    <ppo deps="s" id="693" ippo="693" s="g">
     <e txt="index value 13 is less than bound 99"/>
    </ppo>
    <ppo id="1384" ippo="1384">
     <d>
      <invs>
       <arg a="4" i="618"/>
       <arg a="3" i="1112"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="388" ippo="388" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="887" ippo="887" s="g">
     <e txt="index value 54 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="40" ippo="40" s="g">
     <e txt="index value 17 is non-negative"/>
    </ppo>
    <ppo deps="s" id="599" ippo="599" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo id="67" ippo="67">
     <d>
      <invs>
       <arg a="1" i="778"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1099" ippo="1099" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1636" ippo="1636" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="110" ippo="110" s="g">
     <e txt="index value 19 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1725" ippo="1725" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="779" ippo="779" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="f" id="994" invs="337" ippo="994" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="314" invs="253" ippo="314" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="931" ippo="931">
     <d>
      <invs>
       <arg a="1" i="1082"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1012" ippo="1012" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="6" ippo="6" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="155" ippo="155" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="483" ippo="483" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="1030" ippo="1030" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="530" ippo="530" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1307" ippo="1307" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="342" ippo="342" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="675" ippo="675" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1071" ippo="1071" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1522" ippo="1522" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1022" ippo="1022" s="g">
     <e txt="index value 56 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1019" ippo="1019" s="g">
     <e txt="global variable macro_x with offset [56] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1202" ippo="1202" s="g">
     <e txt="add non-negative number:  value is 7"/>
    </ppo>
    <ppo deps="f" id="1444" invs="1061" ippo="1444" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#636(globalservicegroup_list9061)_xx_assignedAt#636(fieldnext159)"/>
    </ppo>
    <ppo deps="s" id="256" ippo="256" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="374" ippo="374">
     <d>
      <invs>
       <arg a="1" i="1072"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1649" invs="575" ippo="1649" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function find_serviceextinfo satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1675" ippo="1675"/>
    <ppo deps="s" id="495" ippo="495" s="g">
     <e txt="%d is a string literal"/>
    </ppo>
    <ppo deps="s" id="505" ippo="505" s="g">
     <e txt="index value 6 is non-negative"/>
    </ppo>
    <ppo deps="s" id="801" ippo="801" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1280" ippo="1280" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="74" invs="286" ippo="74" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="123" invs="765" ippo="123" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter memref-61 satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1088" ippo="1088"/>
    <ppo deps="s" id="1357" ippo="1357" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1472" ippo="1472" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="s" id="724" ippo="724" s="g">
     <e txt="index value 13 is non-negative"/>
    </ppo>
    <ppo deps="s" id="234" ippo="234" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="713" ippo="713" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="293" ippo="293"/>
    <ppo deps="s" id="1015" ippo="1015" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1158" ippo="1158" s="g">
     <e txt="index value 44 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1308" ippo="1308" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1383" ippo="1383" s="g">
     <e txt="add non-negative number:  value is 16"/>
    </ppo>
    <ppo deps="s" id="240" ippo="240" s="g">
     <e txt="constant value 24 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="380" ippo="380" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1256" ippo="1256" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="218" ippo="218">
     <d>
      <invs>
       <arg a="1" i="1040"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="802" ippo="802" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1294" ippo="1294" s="g">
     <e txt="index value 36 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="723" ippo="723" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1181" ippo="1181" s="g">
     <e txt="index value 44 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1615" ippo="1615" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="a" id="163" ids="23" invs="83" ippo="163" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;service_check_command) delegated to api"/>
    </ppo>
    <ppo deps="s" id="230" ippo="230" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1155" ippo="1155"/>
    <ppo deps="s" id="1635" ippo="1635" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="114" ippo="114">
     <d>
      <invs>
       <arg a="1" i="765"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1217" invs="1341" ippo="1217" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1391" ippo="1391" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="1652" ippo="1652"/>
    <ppo id="368" ippo="368">
     <d>
      <invs>
       <arg a="1" i="1072"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="252" ippo="252" s="g">
     <e txt="index value 42 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1356" ippo="1356" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1428" ippo="1428" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1700" ippo="1700" s="g">
     <e txt="global variable macro_x with offset [77] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="547" ippo="547" s="g">
     <e txt="constant value 10 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="782" ippo="782" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1060" invs="1227" ippo="1060" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1180" ippo="1180" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1372" ippo="1372" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1373" ippo="1373" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="1558" ippo="1558"/>
    <ppo deps="s" id="1633" ippo="1633" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1413" ippo="1413" s="g">
     <e txt="index value 47 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="660" ippo="660" s="g">
     <e txt="add non-negative number:  value is 9"/>
    </ppo>
    <ppo deps="s" id="538" ippo="538" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="636" ippo="636">
     <d>
      <invs>
       <arg a="4" i="181"/>
       <arg a="3" i="999"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1145" ippo="1145" s="g">
     <e txt="index value 44 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1664" ippo="1664" s="g">
     <e txt="global variable macro_x with offset [19] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="533" ippo="533" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="631" ippo="631" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1293" ippo="1293" s="g">
     <e txt="index value 36 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1461" ippo="1461" s="g">
     <e txt="index value 48 is non-negative"/>
    </ppo>
    <ppo deps="s" id="324" ippo="324" s="g">
     <e txt="index value 4 is non-negative"/>
    </ppo>
    <ppo deps="s" id="736" ippo="736" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="447" ippo="447" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="677" ippo="677" s="g">
     <e txt="index value 13 is less than bound 99"/>
    </ppo>
    <ppo id="1605" ippo="1605"/>
    <ppo id="66" ippo="66">
     <d>
      <invs>
       <arg a="3" i="778"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="363" ippo="363" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="1456" ippo="1456" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1598" ippo="1598">
     <d>
      <invs/>
      <msgs>
       <msg t="function return value: find_serviceextinfo"/>
       <msg t="no function summary for find_serviceextinfo"/>
      </msgs>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="340" ippo="340" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="745" ippo="745" s="g">
     <e txt="index value 15 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="811" ippo="811" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1080" ippo="1080" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1486" invs="1081" ippo="1486" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#636(globalservicegroup_list9061)_xx_assignedAt#636(fieldnext159)"/>
    </ppo>
    <ppo id="1493" ippo="1493"/>
    <ppo deps="s" id="1471" ippo="1471" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="678" ippo="678"/>
    <ppo id="795" ippo="795">
     <d>
      <invs>
       <arg a="1" i="1033"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="865" ippo="865">
     <d>
      <invs>
       <arg a="4" i="353"/>
       <arg a="3" i="1045"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1345" ippo="1345">
     <d>
      <invs>
       <arg a="3" i="447"/>
       <arg a="2" i="1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1207" ippo="1207" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1328" ippo="1328" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="s" id="464" ippo="464" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="589" ippo="589" s="g">
     <e txt="index value 32 is non-negative"/>
    </ppo>
    <ppo deps="s" id="737" ippo="737" s="g">
     <e txt="index value 15 is non-negative"/>
    </ppo>
    <ppo deps="s" id="949" ippo="949" s="g">
     <e txt="index value 55 is less than bound 99"/>
    </ppo>
    <ppo id="18" ippo="18">
     <d>
      <invs>
       <arg a="1" i="798"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1425" ippo="1425" s="g">
     <e txt="index value 47 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="301" invs="1229" ippo="301" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_7"/>
    </ppo>
    <ppo deps="s" id="905" ippo="905" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="1659" ippo="1659">
     <d>
      <invs>
       <arg a="2" i="1454,1114"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="452" invs="762" ippo="452" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1122" ippo="1122" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1169" ippo="1169" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="532" ippo="532" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="537" ippo="537" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1254" ippo="1254" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="4" ippo="4" s="g">
     <e txt="index value 3 is less than bound 99"/>
    </ppo>
    <ppo id="726" ippo="726">
     <d>
      <invs>
       <arg a="1" i="1102"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="258" invs="1295" ippo="258" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="897" ippo="897" s="g">
     <e txt="index value 54 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1249" ippo="1249" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1351" ippo="1351" s="g">
     <e txt="%dd %dh %dm %ds is a string literal"/>
    </ppo>
    <ppo deps="s" id="189" ippo="189" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo deps="s" id="694" ippo="694" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="942" ippo="942" s="g">
     <e txt="index value 55 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1208" ippo="1208" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1079" ippo="1079" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="508" ippo="508" s="g">
     <e txt="global variable macro_x with offset [6] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="544" ippo="544"/>
    <ppo id="477" ippo="477"/>
    <ppo deps="s" id="1031" ippo="1031" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1234" ippo="1234" s="g">
     <e txt="global variable macro_x with offset [38] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo id="1549" ippo="1549"/>
    <ppo deps="s" id="478" ippo="478" s="g">
     <e txt="global variable macro_x with offset [6] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="1318" invs="1101" ippo="1318" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#608"/>
    </ppo>
    <ppo deps="s" id="743" ippo="743" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="879" ippo="879" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="929" ippo="929" s="g">
     <e txt="index value 54 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="275" ippo="275" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1179" ippo="1179" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="428" ippo="428" s="g">
     <e txt="%d is a string literal"/>
    </ppo>
    <ppo id="1278" ippo="1278">
     <d>
      <invs>
       <arg a="4" i="209"/>
       <arg a="3" i="1002"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1298" ippo="1298" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="528" ippo="528" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="768" ippo="768" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="818" ippo="818" s="g">
     <e txt="index value 53 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1023" ippo="1023" s="g">
     <e txt="index value 56 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="216" ippo="216" s="g">
     <e txt="index value 98 is non-negative"/>
    </ppo>
    <ppo deps="s" id="414" ippo="414" s="g">
     <e txt="index value 5 is non-negative"/>
    </ppo>
    <ppo deps="s" id="682" ippo="682" s="g">
     <e txt="index value 13 is non-negative"/>
    </ppo>
    <ppo deps="f" id="168" invs="613" ippo="168" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="520" invs="512" ippo="520" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1032" ippo="1032" s="g">
     <e txt="index value 56 is non-negative"/>
    </ppo>
    <ppo deps="s" id="489" ippo="489" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1538" ippo="1538" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo deps="s" id="1101" ippo="1101" s="g">
     <e txt="index value 40 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1182" ippo="1182" s="g">
     <e txt="index value 44 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="426" ippo="426" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="431" ippo="431" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="475" ippo="475" s="g">
     <e txt="index value 6 is non-negative"/>
    </ppo>
    <ppo deps="s" id="831" ippo="831" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1436" ippo="1436" s="g">
     <e txt="index value 47 is non-negative"/>
    </ppo>
    <ppo id="1488" ippo="1488">
     <d>
      <invs>
       <arg a="1" i="1081"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="731" ippo="731" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="1167" ippo="1167" s="g">
     <e txt="index value 44 is non-negative"/>
    </ppo>
    <ppo deps="s" id="504" ippo="504" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1084" ippo="1084" s="g">
     <e txt="index value 40 is non-negative"/>
    </ppo>
    <ppo deps="f" id="1129" invs="732" ippo="1129" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1446" ippo="1446">
     <d>
      <invs>
       <arg a="1" i="1061"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1588" ippo="1588" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo id="1133" ippo="1133">
     <d>
      <invs>
       <arg a="1" i="1055"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1267" ippo="1267" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1726" ippo="1726" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="882" ippo="882"/>
    <ppo deps="a" id="1191" ids="29" invs="83" ippo="1191" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;percent_state_change) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1" ippo="1" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="860" ippo="860" s="g">
     <e txt="index value 53 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1051" ippo="1051" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1467" ippo="1467" s="g">
     <e txt="index value 48 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1693" ippo="1693" s="g">
     <e txt="maximum constant value 1024 fits in type int"/>
    </ppo>
    <ppo deps="s" id="656" ippo="656" s="g">
     <e txt="index value 34 is non-negative"/>
    </ppo>
    <ppo deps="s" id="947" ippo="947" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1252" ippo="1252" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="343" ippo="343" s="g">
     <e txt="one of the arguments is a string literal: WARNING"/>
    </ppo>
    <ppo deps="s" id="608" ippo="608" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1073" ippo="1073" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1469" ippo="1469" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="1600" invs="877" ippo="1600" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="a" id="448" ids="24" invs="83" ippo="448" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1692" ippo="1692" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="541" ippo="541" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1212" ippo="1212"/>
    <ppo deps="s" id="506" ippo="506" s="g">
     <e txt="index value 6 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="602" ippo="602" s="g">
     <e txt="index value 34 is non-negative"/>
    </ppo>
    <ppo deps="s" id="996" ippo="996" s="g">
     <e txt="index value 55 is non-negative"/>
    </ppo>
    <ppo id="1228" ippo="1228"/>
    <ppo deps="s" id="36" ippo="36" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1695" ippo="1695" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="213" ippo="213">
     <d>
      <invs>
       <arg a="3" i="1040"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="684" ippo="684" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo id="1449" ippo="1449"/>
    <ppo deps="f" id="1475" invs="1063" ippo="1475" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#636(globalservicegroup_list9061)_xx_assignedAt#636(fieldnext159)"/>
    </ppo>
    <ppo deps="s" id="181" ippo="181" s="g">
     <e txt="index value 98 is non-negative"/>
    </ppo>
    <ppo deps="s" id="876" ippo="876" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="a" id="1216" ids="2" invs="693" ippo="1216" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="402" ippo="402" s="g">
     <e txt="index value 5 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="26" invs="603" ippo="26" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1002" ippo="1002" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1354" ippo="1354" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="861" ippo="861" s="g">
     <e txt="index value 53 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1033" ippo="1033" s="g">
     <e txt="index value 56 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="296" ippo="296" s="g">
     <e txt="index value 4 is less than bound 99"/>
    </ppo>
    <ppo id="435" ippo="435">
     <d>
      <invs>
       <arg a="4" i="758"/>
       <arg a="3" i="1141"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1387" ippo="1387" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="225" invs="818" ippo="225" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is address of string literal ACTIVE; or address of string literal PASSIVE; all of which satisfy the upper-bound property"/>
    </ppo>
    <ppo deps="s" id="875" ippo="875" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="135" ippo="135" s="g">
     <e txt="index value 60 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="850" ippo="850" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="955" ippo="955" s="g">
     <e txt="index value 55 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1379" ippo="1379" s="g">
     <e txt="index value 36 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1587" ippo="1587" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1385" ippo="1385" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="881" ippo="881" s="g">
     <e txt="index value 54 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1260" ippo="1260" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1437" ippo="1437" s="g">
     <e txt="index value 47 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="125" ippo="125" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="a" id="515" ids="30" invs="83" ippo="515" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;current_attempt) delegated to api"/>
    </ppo>
    <ppo deps="s" id="676" ippo="676" s="g">
     <e txt="index value 13 is non-negative"/>
    </ppo>
    <ppo deps="s" id="973" ippo="973" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo id="1042" ippo="1042">
     <d>
      <invs>
       <arg a="1" i="1004"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1095" invs="884" ippo="1095" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 3"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(3)#return (3)"/>
    </ppo>
    <ppo deps="s" id="542" ippo="542" s="g">
     <e txt="index value 32 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1514" ippo="1514" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="227" ippo="227" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="454" ippo="454" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1266" ippo="1266" s="g">
     <e txt="constant value 17 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1394" ippo="1394" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="606" ippo="606"/>
    <ppo deps="s" id="935" ippo="935" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="f" id="1219" invs="693" ippo="1219" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1402" invs="433" ippo="1402" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="269" ippo="269" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1156" ippo="1156" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="117" ippo="117" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1712" ippo="1712" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="208" ippo="208">
     <d>
      <invs>
       <arg a="1" i="819,818,1041,1284"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1092" ippo="1092" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo id="525" ippo="525">
     <d>
      <invs>
       <arg a="1" i="1120"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="546" ippo="546"/>
    <ppo deps="s" id="150" ippo="150" s="g">
     <e txt="null-terminator cast"/>
    </ppo>
    <ppo id="912" ippo="912">
     <d>
      <invs>
       <arg a="1" i="1074"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="244" invs="1047" ippo="244" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#480(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="607" ippo="607" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="161" ippo="161">
     <d>
      <invs>
       <arg a="1" i="800"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="405" ippo="405"/>
    <ppo deps="s" id="1691" ippo="1691" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo id="1447" ippo="1447">
     <d>
      <invs>
       <arg a="2" i="1061"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="137" ippo="137" s="g">
     <e txt="global variable macro_x with offset [60] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="1530" invs="938" ippo="1530" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="1">
        <msg t="[1]:function return value from: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="null has been explicitly excluded (either by assignment or by checking)"/>
    </ppo>
    <ppo deps="s" id="243" ippo="243" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo id="194" ippo="194">
     <d>
      <invs>
       <arg a="1" i="467,916,1076,1299"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="319" ippo="319" s="g">
     <e txt="one of the arguments is a string literal: OK"/>
    </ppo>
    <ppo deps="s" id="87" ippo="87" s="g">
     <e txt="index value 19 is non-negative"/>
    </ppo>
    <ppo deps="s" id="683" ippo="683" s="g">
     <e txt="index value 13 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="751" ippo="751" s="g">
     <e txt="index value 15 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="815" ippo="815" s="g">
     <e txt="global variable macro_x with offset [53] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1109" ippo="1109" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="f" id="1243" invs="1291" ippo="1243" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_20"/>
    </ppo>
    <ppo id="84" ippo="84"/>
    <ppo id="183" ippo="183"/>
    <ppo id="1086" ippo="1086"/>
    <ppo deps="s" id="1246" ippo="1246" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1336" ippo="1336" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="274" ippo="274">
     <d>
      <invs>
       <arg a="2" i="1108"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="418" invs="665" ippo="418" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1744" ippo="1744" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="1165" ippo="1165" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="281" ippo="281" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="705" ippo="705" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="413" ippo="413" s="g">
     <e txt="constant value 2 fits in type unsigned long"/>
    </ppo>
    <ppo id="708" ippo="708">
     <d>
      <invs>
       <arg a="1" i="988"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="805" ippo="805" s="g">
     <e txt="index value 53 is non-negative"/>
    </ppo>
    <ppo deps="f" id="788" invs="1342" ippo="788" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="700" ippo="700" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="f" id="890" invs="264" ippo="890" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1572" ippo="1572" s="g">
     <e txt="global variable macro_x with offset [78] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="148" ippo="148" s="g">
     <e txt="index value 60 is non-negative"/>
    </ppo>
    <ppo deps="f" id="1096" invs="1208" ippo="1096" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_18"/>
    </ppo>
    <ppo deps="s" id="1250" ippo="1250" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1473" ippo="1473" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo id="884" ippo="884"/>
    <ppo id="1220" ippo="1220">
     <d>
      <invs>
       <arg a="3" i="805"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:upper-bound expr: (memref-71_1188_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="1050" ippo="1050">
     <d>
      <invs>
       <arg a="2" i="1004"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="423" ippo="423" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1188" ippo="1188" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="424" ippo="424" s="g">
     <e txt="index value 5 is non-negative"/>
    </ppo>
    <ppo deps="f" id="1507" invs="527" ippo="1507" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1006" ippo="1006" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="f" id="1304" invs="930" ippo="1304" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 17"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(17)#return (17)"/>
    </ppo>
    <ppo id="394" ippo="394">
     <d>
      <invs>
       <arg a="2" i="1006"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="a" id="1193" ids="2" invs="243" ippo="1193" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="119" invs="1154" ippo="119" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="f" id="338" invs="355" ippo="338" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1346" ippo="1346">
     <d>
      <invs>
       <arg a="3" i="447"/>
       <arg a="2" i="1069"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1721" ippo="1721"/>
    <ppo deps="s" id="233" ippo="233" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="1440" ippo="1440"/>
    <ppo deps="f" id="924" invs="1297" ippo="924" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1743" ippo="1743" s="g">
     <e txt="address of a variable is a valid memory region"/>
    </ppo>
    <ppo deps="a" id="309" ids="24" invs="83" ippo="309" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;current_state) delegated to api"/>
    </ppo>
    <ppo deps="s" id="571" ippo="571" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="763" ippo="763" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="361" invs="165" ippo="361" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="633" ippo="633" s="g">
     <e txt="upperbound of constant string argument: %.3f"/>
    </ppo>
    <ppo id="661" ippo="661">
     <d>
      <invs>
       <arg a="4" i="302"/>
       <arg a="3" i="1032"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1679" ippo="1679" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="136" ippo="136"/>
    <ppo deps="s" id="1204" ippo="1204" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="1331" ippo="1331"/>
    <ppo deps="s" id="819" ippo="819" s="g">
     <e txt="index value 53 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1495" ippo="1495" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="1574" ippo="1574" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1147" ippo="1147" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="1404" ippo="1404"/>
    <ppo deps="s" id="1525" ippo="1525" s="g">
     <e txt="global variable macro_x with offset [77] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="88" ippo="88" s="g">
     <e txt="index value 19 is less than bound 99"/>
    </ppo>
    <ppo id="501" ippo="501">
     <d>
      <invs>
       <arg a="1" i="1086"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1637" ippo="1637" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo deps="s" id="174" ippo="174" s="g">
     <e txt="index value 98 is non-negative"/>
    </ppo>
    <ppo deps="s" id="367" ippo="367" s="g">
     <e txt="one of the arguments is a string literal: CRITICAL"/>
    </ppo>
    <ppo deps="s" id="179" ippo="179" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="886" ippo="886" s="g">
     <e txt="index value 54 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1176" ippo="1176" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="329" ippo="329" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo id="350" ippo="350">
     <d>
      <invs>
       <arg a="1" i="1091"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="692" ippo="692" s="g">
     <e txt="index value 13 is non-negative"/>
    </ppo>
    <ppo deps="a" id="1214" ids="28" invs="83" ippo="1214" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;last_state_change) delegated to api"/>
    </ppo>
    <ppo id="1480" ippo="1480"/>
    <ppo id="352" ippo="352">
     <d>
      <invs>
       <arg a="2" i="1091"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="129" ippo="129" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="397" ippo="397" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1710" ippo="1710" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="358" ippo="358" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="130" ippo="130" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="25" invs="1312" ippo="25" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="910" ippo="910" s="g">
     <e txt="index value 54 is non-negative"/>
    </ppo>
    <ppo deps="s" id="1583" ippo="1583" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
    <ppo id="369" ippo="369">
     <d>
      <invs>
       <arg a="4" i="453"/>
       <arg a="3" i="1072"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1616" ippo="1616" s="g">
     <e txt="index value 79 is non-negative"/>
    </ppo>
    <ppo deps="s" id="200" ippo="200" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="632" ippo="632" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="f" id="925" invs="464" ippo="925" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="436" ippo="436" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1279" ippo="1279" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1592" ippo="1592" s="g">
     <e txt="index value 78 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="869" ippo="869" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo id="1458" ippo="1458"/>
    <ppo id="1657" ippo="1657">
     <d>
      <invs>
       <arg a="1" i="1454,1114"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="760" ippo="760" s="g">
     <e txt="index value 15 is non-negative"/>
    </ppo>
    <ppo deps="s" id="978" ippo="978" s="g">
     <e txt="index value 55 is non-negative"/>
    </ppo>
    <ppo deps="s" id="133" ippo="133" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="864" ippo="864" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="s" id="796" ippo="796" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo id="825" ippo="825">
     <d>
      <invs>
       <arg a="1" i="256,893,1015,1235"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="618" invs="993" ippo="618" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#529(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="1259" ippo="1259" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1287" ippo="1287" s="g">
     <e txt="index value 36 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="704" ippo="704" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="951" ippo="951" s="g">
     <e txt="global variable macro_x with offset [55] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="a" id="991" ids="2" invs="337" ippo="991" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="164" ippo="164" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="341" ippo="341" s="g">
     <e txt="upperbound of constant string argument: WARNING"/>
    </ppo>
    <ppo deps="s" id="718" ippo="718" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo deps="s" id="101" ippo="101" s="g">
     <e txt="index value 19 is non-negative"/>
    </ppo>
    <ppo deps="a" id="69" ids="19" invs="83" ippo="69" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition initialized(svc-&gt;plugin_output) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1251" ippo="1251" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="s" id="674" ippo="674" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="a" id="203" ids="2" invs="754" ippo="203" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1729" ippo="1729" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="f" id="96" invs="1340" ippo="96" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="396" ippo="396" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="870" ippo="870" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="848" ippo="848" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1301" ippo="1301" s="g">
     <e txt="cast to character type"/>
    </ppo>
    <ppo id="1368" ippo="1368">
     <d>
      <invs>
       <arg a="2" i="1131"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1045" ippo="1045" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="a" id="118" ids="2" invs="111" ippo="118" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="236" ippo="236" s="g">
     <e txt="index value 42 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="411" ippo="411" s="g">
     <e txt="global variable macro_x with offset [5] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="572" ippo="572" s="g">
     <e txt="index value 32 is non-negative"/>
    </ppo>
    <ppo deps="s" id="646" ippo="646" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="f" id="1578" invs="1313" ippo="1578" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo id="952" ippo="952"/>
    <ppo deps="s" id="1036" ippo="1036" s="g">
     <e txt="%lu is a string literal"/>
    </ppo>
    <ppo deps="f" id="190" invs="1075" ippo="190" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#473(rv:malloc)"/>
    </ppo>
    <ppo deps="s" id="1008" ippo="1008" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1327" ippo="1327" s="g">
     <e txt="underflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="76" invs="778" ippo="76" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter memref-60 satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1321" ippo="1321">
     <d>
      <invs>
       <arg a="3" i="583"/>
       <arg a="2" i="1100"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="858" invs="294" ippo="858" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1537" ippo="1537" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="663" ippo="663" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo deps="s" id="847" ippo="847" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="1324" ippo="1324" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo id="1398" ippo="1398">
     <d>
      <invs>
       <arg a="2" i="1453,1059"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1697" ippo="1697" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo deps="f" id="299" invs="234" ippo="299" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1040" ippo="1040" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="f" id="98" invs="674" ippo="98" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="214" ippo="214" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="630" ippo="630" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="711" ippo="711" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo deps="s" id="769" ippo="769" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="1515" ippo="1515" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo deps="a" id="450" ids="2" invs="762" ippo="450" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="1619" ippo="1619" s="g">
     <e txt="global variable macro_x with offset [79] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="13" ippo="13" s="g">
     <e txt="global variable macro_x with offset [3] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="734" ippo="734" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1719" ippo="1719" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
    <ppo deps="f" id="51" invs="279" ippo="51" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="107" ippo="107" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="1401" invs="433" ippo="1401" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1531" invs="1343" ippo="1531" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(find_serviceextinfo(_^_)#return"/>
    </ppo>
    <ppo deps="s" id="473" ippo="473" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="1253" ippo="1253" s="g">
     <e txt="string literal"/>
    </ppo>
    <ppo deps="s" id="612" ippo="612" s="g">
     <e txt="global variable macro_x with offset [34] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="836" ippo="836" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="1104" ippo="1104" s="g">
     <e txt="%d is a string literal"/>
    </ppo>
    <ppo id="611" ippo="611"/>
    <ppo deps="s" id="904" ippo="904" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="648" ippo="648" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo deps="s" id="1245" ippo="1245" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo id="1595" ippo="1595"/>
    <ppo deps="s" id="90" ippo="90" s="g">
     <e txt="global variable macro_x with offset [19] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="601" ippo="601" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="822" invs="256" ippo="822" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="f" id="1603" invs="153" ippo="1603" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:no function summary for find_serviceextinfo"/>
        <msg t="[2]:function arguments: (memref-16_1078_)#init,(memref-17_1080_)#init"/>
        <msg t="[2]:function return value: find_serviceextinfo"/>
       </arg>
      </amsgs>
     </d>
     <e txt="upper-bound value is return value from function find_serviceextinfo satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="598" ippo="598" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1137" ippo="1137" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo deps="s" id="1231" ippo="1231" s="g">
     <e txt="index value 38 is non-negative"/>
    </ppo>
    <ppo id="1409" ippo="1409">
     <d>
      <invs>
       <arg a="2" i="1030"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="132" ippo="132" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="f" id="193" invs="1299" ippo="193" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_5"/>
    </ppo>
    <ppo id="527" ippo="527">
     <d>
      <invs>
       <arg a="4" i="649"/>
       <arg a="3" i="1120"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="659" ippo="659">
     <d>
      <invs>
       <arg a="1" i="1032"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="960" invs="1232" ippo="960" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_16"/>
    </ppo>
    <ppo deps="f" id="992" invs="1281" ippo="992" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="1149" ippo="1149" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo id="1620" ippo="1620"/>
    <ppo deps="s" id="1083" ippo="1083" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="670" ippo="670" s="g">
     <e txt="index value 13 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="915" ippo="915" s="g">
     <e txt="constant value 48 fits in type unsigned long"/>
    </ppo>
    <ppo id="1665" ippo="1665">
     <d>
      <invs>
       <arg a="2" i="1452,1049"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="383" ippo="383" s="g">
     <e txt="upperbound of constant string argument: UNKNOWN"/>
    </ppo>
    <ppo id="1221" ippo="1221">
     <d>
      <invs>
       <arg a="3" i="805"/>
      </invs>
      <msgs/>
      <amsgs>
       <arg a="3">
        <msg t="[3]:lower-bound expr: (memref-71_1188_)#init"/>
       </arg>
      </amsgs>
     </d>
    </ppo>
    <ppo id="410" ippo="410"/>
    <ppo deps="s" id="467" ippo="467" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="679" ippo="679" s="g">
     <e txt="global variable macro_x with offset [13] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="549" ippo="549" s="g">
     <e txt="index value 32 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1017" ippo="1017" s="g">
     <e txt="index value 56 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="154" ippo="154" s="g">
     <e txt="null pointer is a valid memory pointer"/>
    </ppo>
    <ppo deps="f" id="1162" invs="925" ippo="1162" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 8"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(8)#return (8)"/>
    </ppo>
    <ppo deps="s" id="406" ippo="406" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="61" ippo="61" s="g">
     <e txt="null pointer is not subject to null-termination"/>
    </ppo>
    <ppo id="472" ippo="472"/>
    <ppo deps="s" id="595" ippo="595" s="g">
     <e txt="arguments of pointer arithmetic are checked for null"/>
    </ppo>
    <ppo id="770" ippo="770">
     <d>
      <invs>
       <arg a="1" i="1134"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="f" id="1498" invs="527" ippo="1498" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1686" ippo="1686" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1000" ippo="1000" s="g">
     <e txt="add non-negative number:  value is 47"/>
    </ppo>
    <ppo deps="s" id="1681" ippo="1681" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo id="113" ippo="113">
     <d>
      <invs>
       <arg a="3" i="765"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="471" ippo="471" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1727" ippo="1727" s="g">
     <e txt="maximum constant value 1024 fits in type int"/>
    </ppo>
    <ppo deps="s" id="531" ippo="531" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1141" ippo="1141" s="g">
     <e txt="casting constant value 0 to char"/>
    </ppo>
    <ppo deps="s" id="1170" ippo="1170" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1420" ippo="1420" s="g">
     <e txt="index value 47 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="709" ippo="709" s="g">
     <e txt="global variable macro_x with offset [13] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="1329" ippo="1329" s="g">
     <e txt="value is 3600"/>
    </ppo>
    <ppo id="112" ippo="112">
     <d>
      <invs>
       <arg a="1" i="765"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="267" ippo="267">
     <d>
      <invs>
       <arg a="3" i="1108"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="494" ippo="494" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1166" ippo="1166" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1634" ippo="1634" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="a" id="71" ids="2" invs="286" ippo="71" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="s" id="462" ippo="462" s="g">
     <e txt="pointer arithmetic stays within memory region"/>
    </ppo>
    <ppo id="524" ippo="524">
     <d>
      <invs>
       <arg a="1" i="1120"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo id="1492" ippo="1492"/>
    <ppo deps="s" id="972" ippo="972" s="g">
     <e txt="upperbound of constant string argument: %lu"/>
    </ppo>
    <ppo deps="s" id="455" ippo="455" s="g">
     <e txt="index value 5 is non-negative"/>
    </ppo>
    <ppo deps="s" id="775" ippo="775" s="g">
     <e txt="index value 15 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1410" ippo="1410" s="g">
     <e txt="casting a pointer to integer type unsigned long"/>
    </ppo>
    <ppo deps="f" id="191" invs="467" ippo="191" s="g" ts="2018-01-09 15:52:09">
     <e txt="return value from function malloc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="a" id="311" ids="2" invs="253" ippo="311" s="g" ts="2018-01-09 15:52:09">
     <e txt="condition not-null(svc) delegated to api"/>
    </ppo>
    <ppo deps="f" id="722" invs="142" ippo="722" s="g" ts="2018-01-09 15:52:09">
     <e txt="upper-bound value is initial value of parameter svc satisfies upper bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="1102" ippo="1102" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1685" ippo="1685" s="g">
     <e txt="index value 77 is non-negative"/>
    </ppo>
    <ppo deps="s" id="47" ippo="47" s="g">
     <e txt="svc is a function parameter"/>
    </ppo>
    <ppo id="961" ippo="961">
     <d>
      <invs>
       <arg a="1" i="246,890,1013,1232"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1105" ippo="1105" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="1078" ippo="1078" s="g">
     <e txt="index value 40 is less than bound 99"/>
    </ppo>
    <ppo id="91" ippo="91"/>
    <ppo deps="f" id="97" invs="674" ippo="97" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter svc satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="739" ippo="739" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="510" ippo="510" s="g">
     <e txt="constant value 8 fits in type unsigned long"/>
    </ppo>
    <ppo id="594" ippo="594">
     <d>
      <invs>
       <arg a="4" i="145"/>
       <arg a="3" i="989"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1610" ippo="1610" s="g">
     <e txt="index value 79 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="99" ippo="99" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo id="37" ippo="37"/>
    <ppo id="1689" ippo="1689"/>
    <ppo deps="f" id="652" invs="1206" ippo="652" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="872" ippo="872" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="248" ippo="248">
     <d>
      <invs>
       <arg a="1" i="366,906,1048,1289"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="327" ippo="327" s="g">
     <e txt="global variable macro_x with offset [4] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="s" id="41" ippo="41" s="g">
     <e txt="index value 17 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="1103" ippo="1103" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1348" ippo="1348" s="g">
     <e txt="overflow is well defined for unsigned types"/>
    </ppo>
    <ppo deps="f" id="486" invs="897" ippo="486" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 8"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(8)#return (8)"/>
    </ppo>
    <ppo id="643" ippo="643">
     <d>
      <invs>
       <arg a="2" i="999"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="895" ippo="895" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="957" invs="1012" ippo="957" s="g" ts="2018-01-09 15:52:09">
     <e txt="assignedAt#574(rv:malloc)"/>
    </ppo>
    <ppo id="232" ippo="232"/>
    <ppo deps="s" id="927" ippo="927" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="s" id="1210" ippo="1210" s="g">
     <e txt="address of a variable"/>
    </ppo>
    <ppo deps="s" id="115" ippo="115" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="714" ippo="714" s="g">
     <e txt="constant string is allocated by compiler"/>
    </ppo>
    <ppo id="771" ippo="771">
     <d>
      <invs>
       <arg a="4" i="699"/>
       <arg a="3" i="1134"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="936" ippo="936" s="g">
     <e txt="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </ppo>
    <ppo deps="s" id="287" ippo="287" s="g">
     <e txt="cast to void pointer"/>
    </ppo>
    <ppo deps="s" id="469" ippo="469" s="g">
     <e txt="index value 6 is less than bound 99"/>
    </ppo>
    <ppo deps="f" id="891" invs="895" ippo="891" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 48"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(48)#return (48)"/>
    </ppo>
    <ppo deps="s" id="177" ippo="177" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="1353" ippo="1353" s="g">
     <e txt="source and target type are the same"/>
    </ppo>
    <ppo deps="s" id="83" ippo="83" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="s" id="263" ippo="263" s="g">
     <e txt="null-termination within bounds is checked separately"/>
    </ppo>
    <ppo deps="f" id="336" invs="1287" ippo="336" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addr_in_(svc_2_)#init"/>
    </ppo>
    <ppo deps="s" id="238" ippo="238" s="g">
     <e txt="global variable macro_x with offset [42] is assigned a value with valid lower bound by inductive hypothesis (checked at assignment)"/>
    </ppo>
    <ppo deps="f" id="621" invs="1181" ippo="621" s="g" ts="2018-01-09 15:52:09">
     <e txt="all memory regions potentially pointed at are valid: addrof_heapregion_11"/>
    </ppo>
    <ppo deps="s" id="1540" ippo="1540" s="g">
     <e txt="null pointer does not violate bounds"/>
    </ppo>
    <ppo deps="s" id="1611" ippo="1611" s="g">
     <e txt="null-pointer cast"/>
    </ppo>
    <ppo deps="f" id="29" invs="798" ippo="29" s="g" ts="2018-01-09 15:52:09">
     <e txt="initial value of parameter memref-17 satisfies lower bound by inductive hypothesis"/>
    </ppo>
    <ppo id="1067" ippo="1067">
     <d>
      <invs>
       <arg a="1" i="1034"/>
      </invs>
      <msgs/>
      <amsgs/>
     </d>
    </ppo>
    <ppo deps="s" id="1359" ippo="1359" s="g">
     <e txt="constant string"/>
    </ppo>
    <ppo deps="s" id="86" ippo="86" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo id="1566" ippo="1566"/>
    <ppo deps="s" id="1698" ippo="1698" s="g">
     <e txt="index value 77 is less than bound 99"/>
    </ppo>
    <ppo deps="s" id="2" ippo="2" s="g">
     <e txt="macro_x is global"/>
    </ppo>
    <ppo deps="f" id="620" invs="879" ippo="620" s="g" ts="2018-01-09 15:52:09">
     <d>
      <invs/>
      <msgs/>
      <amsgs>
       <arg a="2">
        <msg t="[2]:function arguments: 10"/>
        <msg t="[2]:function return value: malloc"/>
       </arg>
      </amsgs>
     </d>
     <e txt="offset size 0 is less than the size of (malloc(10)#return (10)"/>
    </ppo>
    <ppo deps="s" id="1569" ippo="1569" s="g">
     <e txt="index value 78 is non-negative"/>
    </ppo>
   </ppos>
  </function>
 </c-analysis>
